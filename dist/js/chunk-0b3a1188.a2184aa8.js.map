{"version":3,"sources":["webpack:///./node_modules/markdown-it/lib/common/utils.js","webpack:///./node_modules/markdown-it/lib/rules_block/heading.js","webpack:///./src/components/MegBox.vue?d5ac","webpack:///src/components/MegBox.vue","webpack:///./src/components/MegBox.vue?0291","webpack:///./src/components/MegBox.vue","webpack:///./node_modules/markdown-it/lib/index.js","webpack:///./node_modules/markdown-it/lib/token.js","webpack:///./node_modules/markdown-it/lib/rules_inline/state_inline.js","webpack:///./src/views/ShowArt.vue?4f0c","webpack:///./node_modules/node-libs-browser/node_modules/punycode/punycode.js","webpack:///./node_modules/markdown-it/lib/rules_block/lheading.js","webpack:///./node_modules/markdown-it/lib/presets/zero.js","webpack:///./node_modules/markdown-it/lib/rules_inline/text_collapse.js","webpack:///./src/views/ShowArt.vue?c307","webpack:///./src/components/Reward.vue?b6cc","webpack:///src/components/Reward.vue","webpack:///./src/components/Reward.vue?a2c2","webpack:///./src/components/Reward.vue","webpack:///src/views/ShowArt.vue","webpack:///./src/views/ShowArt.vue?f449","webpack:///./src/views/ShowArt.vue","webpack:///./node_modules/markdown-it/lib/rules_inline/autolink.js","webpack:///./node_modules/markdown-it/lib/rules_core/block.js","webpack:///./node_modules/markdown-it/lib/rules_inline/newline.js","webpack:///./node_modules/markdown-it/lib/presets/commonmark.js","webpack:///./node_modules/mdurl/format.js","webpack:///./node_modules/markdown-it/lib/rules_block/paragraph.js","webpack:///./node_modules/markdown-it/lib/ruler.js","webpack:///./node_modules/markdown-it/lib/rules_inline/backticks.js","webpack:///./node_modules/markdown-it/lib/rules_block/list.js","webpack:///./node_modules/markdown-it/lib/rules_core/normalize.js","webpack:///./node_modules/markdown-it/lib/parser_inline.js","webpack:///./node_modules/uc.micro/categories/Z/regex.js","webpack:///./node_modules/markdown-it/lib/helpers/index.js","webpack:///./node_modules/markdown-it/lib/common/html_re.js","webpack:///./node_modules/markdown-it/lib/rules_inline/entity.js","webpack:///./node_modules/markdown-it/lib/rules_block/html_block.js","webpack:///(webpack)/buildin/module.js","webpack:///./node_modules/markdown-it/lib/rules_inline/escape.js","webpack:///./node_modules/uc.micro/categories/Cf/regex.js","webpack:///./node_modules/markdown-it/lib/rules_core/state_core.js","webpack:///./node_modules/markdown-it/lib/parser_block.js","webpack:///./node_modules/uc.micro/categories/P/regex.js","webpack:///./node_modules/markdown-it/lib/renderer.js","webpack:///./src/components/MegBox.vue?14df","webpack:///./node_modules/markdown-it/lib/helpers/parse_link_title.js","webpack:///./node_modules/markdown-it/lib/rules_block/table.js","webpack:///./node_modules/markdown-it/lib/rules_block/state_block.js","webpack:///./node_modules/markdown-it/lib/rules_inline/balance_pairs.js","webpack:///./node_modules/markdown-it/lib/presets/default.js","webpack:///./node_modules/mdurl/decode.js","webpack:///./node_modules/markdown-it/lib/rules_inline/strikethrough.js","webpack:///./node_modules/markdown-it/lib/rules_inline/image.js","webpack:///./node_modules/markdown-it/lib/rules_core/linkify.js","webpack:///./node_modules/markdown-it/lib/rules_block/code.js","webpack:///./node_modules/markdown-it/lib/rules_core/inline.js","webpack:///./node_modules/uc.micro/categories/Cc/regex.js","webpack:///./node_modules/markdown-it/lib/parser_core.js","webpack:///./node_modules/markdown-it/lib/rules_core/smartquotes.js","webpack:///./node_modules/linkify-it/lib/re.js","webpack:///./src/assets/images/money.png","webpack:///./node_modules/markdown-it/lib/rules_inline/text.js","webpack:///./node_modules/markdown-it/lib/rules_core/replacements.js","webpack:///./node_modules/markdown-it/lib/common/entities.js","webpack:///./node_modules/markdown-it/lib/rules_block/fence.js","webpack:///./node_modules/markdown-it/lib/rules_inline/html_inline.js","webpack:///./node_modules/mdurl/encode.js","webpack:///./node_modules/markdown-it/lib/rules_inline/emphasis.js","webpack:///./node_modules/uc.micro/properties/Any/regex.js","webpack:///./node_modules/markdown-it/lib/rules_inline/link.js","webpack:///./node_modules/markdown-it/index.js","webpack:///./node_modules/uc.micro/index.js","webpack:///./node_modules/markdown-it/lib/rules_block/reference.js","webpack:///./node_modules/mdurl/index.js","webpack:///./node_modules/mdurl/parse.js","webpack:///./node_modules/markdown-it/lib/helpers/parse_link_label.js","webpack:///./node_modules/markdown-it/lib/common/html_blocks.js","webpack:///./src/components/Reward.vue?9f6d","webpack:///./node_modules/markdown-it/lib/helpers/parse_link_destination.js","webpack:///./node_modules/markdown-it/lib/rules_block/blockquote.js","webpack:///./node_modules/linkify-it/index.js","webpack:///./node_modules/markdown-it/lib/rules_block/hr.js"],"names":["_class","obj","Object","prototype","toString","call","isString","_hasOwnProperty","hasOwnProperty","has","object","key","assign","sources","Array","slice","arguments","forEach","source","TypeError","keys","arrayReplaceAt","src","pos","newElements","concat","isValidEntityCode","c","fromCodePoint","surrogate1","surrogate2","String","fromCharCode","UNESCAPE_MD_RE","ENTITY_RE","UNESCAPE_ALL_RE","RegExp","DIGITAL_ENTITY_TEST_RE","entities","replaceEntityPattern","match","name","code","charCodeAt","test","toLowerCase","parseInt","unescapeMd","str","indexOf","replace","unescapeAll","escaped","entity","HTML_ESCAPE_TEST_RE","HTML_ESCAPE_REPLACE_RE","HTML_REPLACEMENTS","replaceUnsafeChar","ch","escapeHtml","REGEXP_ESCAPE_RE","escapeRE","isSpace","isWhiteSpace","UNICODE_PUNCT_RE","isPunctChar","isMdAsciiPunct","normalizeReference","trim","toUpperCase","exports","lib","mdurl","ucmicro","module","state","startLine","endLine","silent","level","tmp","token","bMarks","tShift","max","eMarks","sCount","blkIndent","skipSpacesBack","skipCharsBack","line","push","markup","map","content","children","render","_vm","this","_h","$createElement","_c","_self","staticClass","ref","attrs","rename","ruleForm","rules","model","value","callback","$$v","$set","expression","email","on","onSubmit","_v","_l","v","index","_s","megs","createdAt","$event","replyMessage","r","i","star","_e","staticRenderFns","data","oneMeg","type","required","message","trigger","min","uid","reindex","props","list","default","methods","$refs","emoji","referContent","length","alert","addMessage","then","console","duration","showClose","catch","clearInfo","id","components","Emoji","component","utils","helpers","Renderer","ParserCore","ParserBlock","ParserInline","LinkifyIt","punycode","config","zero","commonmark","BAD_PROTO_RE","GOOD_DATA_RE","validateLink","url","RECODE_HOSTNAME_FOR","normalizeLink","parsed","parse","hostname","protocol","toASCII","er","encode","format","normalizeLinkText","toUnicode","decode","defaultChars","MarkdownIt","presetName","options","inline","block","core","renderer","linkify","configure","set","presets","self","Error","ruler","enableOnly","rules2","ruler2","enable","ignoreInvalid","result","isArray","chain","missed","filter","disable","use","plugin","args","apply","env","State","process","tokens","parseInline","inlineMode","renderInline","Token","tag","nesting","info","meta","hidden","attrIndex","len","attrPush","attrData","attrSet","idx","attrGet","attrJoin","StateInline","md","outTokens","tokens_meta","posMax","pending","pendingLevel","cache","delimiters","_prev_delimiters","backticks","backticksScanned","pushPending","token_meta","pop","scanDelims","start","canSplitWord","lastChar","nextChar","count","can_open","can_close","isLastWhiteSpace","isLastPunctChar","isNextWhiteSpace","isNextPunctChar","left_flanking","right_flanking","marker","root","nodeType","freeGlobal","global","window","maxInt","base","tMin","tMax","skew","damp","initialBias","initialN","delimiter","regexPunycode","regexNonASCII","regexSeparators","errors","baseMinusTMin","floor","Math","stringFromCharCode","error","RangeError","array","fn","mapDomain","string","parts","split","labels","encoded","join","ucs2decode","extra","output","counter","ucs2encode","basicToDigit","codePoint","digitToBasic","digit","flag","adapt","delta","numPoints","firstTime","k","input","out","basic","j","oldi","w","t","baseMinusT","inputLength","n","bias","lastIndexOf","splice","handledCPCount","basicLength","m","q","currentValue","handledCPCountPlusOne","qMinusT","terminate","l","oldParentType","nextLine","terminatorRules","getRules","parentType","isEmpty","skipChars","skipSpaces","getLines","html","xhtmlOut","breaks","langPrefix","typographer","quotes","highlight","maxNesting","curr","last","staticStyle","art","title","author","updatedAt","views","classify","domProps","megContent","mouseOver","mouseLeave","picUrl","_m","isShow","MegBox","Reward","created","$route","query","getArt","getMessage","mounted","highlightCode","updated","EMAIL_RE","AUTOLINK_RE","fullUrl","pmax","ws","slashes","auth","port","pathname","search","hash","lineMax","Ruler","__rules__","__cache__","__find__","__compile__","chains","rule","enabled","alt","altName","at","opt","before","beforeName","ruleName","after","afterName","chainName","matchStart","matchEnd","openerLength","closerLength","skipBulletListMarker","skipOrderedListMarker","markTightParagraphs","contentStart","indent","indentAfterMarker","initial","isOrdered","itemLines","listLines","listTokIdx","markerCharCode","markerValue","offset","oldListIndent","oldSCount","oldTShift","oldTight","posAfterMarker","prevEmptyEnd","isTerminatingParagraph","tight","listIndent","Number","bsCount","tokenize","NEWLINES_RE","NULL_RE","_rules","_rules2","postProcess","skipToken","ok","end","parseLinkLabel","parseLinkDestination","parseLinkTitle","attr_name","unquoted","single_quoted","double_quoted","attr_value","attribute","open_tag","close_tag","comment","processing","declaration","cdata","HTML_TAG_RE","HTML_OPEN_CLOSE_TAG_RE","DIGITAL_RE","NAMED_RE","block_names","HTML_SEQUENCES","lineText","webpackPolyfill","deprecate","paths","defineProperty","enumerable","get","ESCAPED","StateCore","hasEmptyLines","skipEmptyLines","default_rules","code_inline","slf","renderAttrs","code_block","fence","highlighted","arr","tmpAttrs","tmpToken","langName","langAttrs","image","renderInlineAsText","renderToken","hardbreak","softbreak","text","html_block","html_inline","nextToken","needLf","lines","getLine","substr","escapedSplit","isEscaped","lastPos","current","substring","columns","columnCount","aligns","tableLines","tbodyLines","firstCh","secondCh","shift","StateBlock","s","indent_found","ddIndent","from","begin","keepLastLF","lineIndent","first","queue","lineStart","processDelimiters","closerIdx","openerIdx","closer","opener","minOpenerIdx","newMinOpenerIdx","isOddMatch","lastJump","openersBottom","headerIdx","lastTokenIdx","jumps","close","open","decodeCache","getDecodeCache","exclude","seq","b1","b2","b3","b4","chr","componentChars","startDelim","endDelim","loneMarkers","scanned","label","labelEnd","labelStart","res","href","oldPos","references","isLinkOpen","isLinkClose","currentToken","nodes","ln","htmlLinkLevel","urlText","links","blockTokens","pretest","schema","lastIndex","tok","Core","QUOTE_TEST_RE","QUOTE_RE","APOSTROPHE","replaceAt","process_inlines","thisLevel","item","canOpen","canClose","isSingle","stack","openQuote","closeQuote","OUTER","exec","single","blkIdx","opts","re","src_Any","src_Cc","src_Z","src_P","src_ZPCc","src_ZCc","text_separators","src_pseudo_letter","src_ip4","src_auth","src_port","src_host_terminator","src_path","src_email_name","src_xn","src_domain_root","src_domain","src_host","tpl_host_fuzzy","tpl_host_no_ip_fuzzy","src_host_strict","tpl_host_fuzzy_strict","src_host_port_strict","tpl_host_port_fuzzy_strict","tpl_host_port_no_ip_fuzzy_strict","tpl_host_fuzzy_test","tpl_email_fuzzy","tpl_link_fuzzy","tpl_link_no_ip_fuzzy","isTerminatorChar","RARE_RE","SCOPED_ABBR_TEST_RE","SCOPED_ABBR_RE","SCOPED_ABBR","p","tm","replaceFn","replace_scoped","inlineTokens","inside_autolink","replace_rare","params","mem","haveEndMarker","isLetter","lc","encodeCache","getEncodeCache","keepEscaped","nextCode","encodeURIComponent","isStrong","parseReference","Any","Cc","Cf","P","Z","_endLine","destEndPos","destEndLineNo","Url","protocolPattern","portPattern","simplePathPattern","delims","unwise","autoEscape","nonHostChars","hostEndingChars","hostnameMaxLen","hostnamePartPattern","hostnamePartStart","hostlessProtocol","slashedProtocol","urlParse","slashesDenoteHost","u","lowerProto","hec","rest","simplePath","proto","atSign","hostEnd","host","parseHost","ipv6Hostname","hostparts","part","newpart","validParts","notHost","bit","unshift","qm","disableNested","found","prevPos","adjustTab","lastLineEmpty","oldBMarks","oldBSCount","oldIndent","spaceAfterMarker","isOutdented","oldLineMax","isObject","isRegExp","isFunction","defaultOptions","fuzzyLink","fuzzyEmail","fuzzyIP","isOptionsObj","reduce","acc","defaultSchemas","validate","tail","http","no_http","mailto","tlds_2ch_src_re","tlds_default","resetScanCache","__index__","__text_cache__","createValidator","createNormalizer","normalize","compile","__opts__","tlds","__tlds__","untpl","tpl","src_tlds","onCompile","__tlds_replaced__","email_fuzzy","link_fuzzy","link_no_ip_fuzzy","host_fuzzy_test","aliases","schemaError","val","__compiled__","__schemas__","compiled","link","alias","slist","schema_test","schema_search","Match","__last_index__","__schema__","raw","createMatch","schemas","add","definition","ml","me","next","tld_pos","at_pos","testSchemaAt","keepOld","sort","el","reverse","cnt"],"mappings":"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","file":"js/chunk-0b3a1188.a2184aa8.js","sourcesContent":["// Utilities\n//\n'use strict';\n\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\n\nfunction isString(obj) { return _class(obj) === '[object String]'; }\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction has(object, key) {\n  return _hasOwnProperty.call(object, key);\n}\n\n// Merge objects\n//\nfunction assign(obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n\n  sources.forEach(function (source) {\n    if (!source) { return; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be object');\n    }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n\n  return obj;\n}\n\n// Remove element from array and put another array at those position.\n// Useful for some operations with tokens\nfunction arrayReplaceAt(src, pos, newElements) {\n  return [].concat(src.slice(0, pos), newElements, src.slice(pos + 1));\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction isValidEntityCode(c) {\n  /*eslint no-bitwise:0*/\n  // broken sequence\n  if (c >= 0xD800 && c <= 0xDFFF) { return false; }\n  // never used\n  if (c >= 0xFDD0 && c <= 0xFDEF) { return false; }\n  if ((c & 0xFFFF) === 0xFFFF || (c & 0xFFFF) === 0xFFFE) { return false; }\n  // control codes\n  if (c >= 0x00 && c <= 0x08) { return false; }\n  if (c === 0x0B) { return false; }\n  if (c >= 0x0E && c <= 0x1F) { return false; }\n  if (c >= 0x7F && c <= 0x9F) { return false; }\n  // out of range\n  if (c > 0x10FFFF) { return false; }\n  return true;\n}\n\nfunction fromCodePoint(c) {\n  /*eslint no-bitwise:0*/\n  if (c > 0xffff) {\n    c -= 0x10000;\n    var surrogate1 = 0xd800 + (c >> 10),\n        surrogate2 = 0xdc00 + (c & 0x3ff);\n\n    return String.fromCharCode(surrogate1, surrogate2);\n  }\n  return String.fromCharCode(c);\n}\n\n\nvar UNESCAPE_MD_RE  = /\\\\([!\"#$%&'()*+,\\-.\\/:;<=>?@[\\\\\\]^_`{|}~])/g;\nvar ENTITY_RE       = /&([a-z#][a-z0-9]{1,31});/gi;\nvar UNESCAPE_ALL_RE = new RegExp(UNESCAPE_MD_RE.source + '|' + ENTITY_RE.source, 'gi');\n\nvar DIGITAL_ENTITY_TEST_RE = /^#((?:x[a-f0-9]{1,8}|[0-9]{1,8}))/i;\n\nvar entities = require('./entities');\n\nfunction replaceEntityPattern(match, name) {\n  var code = 0;\n\n  if (has(entities, name)) {\n    return entities[name];\n  }\n\n  if (name.charCodeAt(0) === 0x23/* # */ && DIGITAL_ENTITY_TEST_RE.test(name)) {\n    code = name[1].toLowerCase() === 'x' ?\n      parseInt(name.slice(2), 16) : parseInt(name.slice(1), 10);\n\n    if (isValidEntityCode(code)) {\n      return fromCodePoint(code);\n    }\n  }\n\n  return match;\n}\n\n/*function replaceEntities(str) {\n  if (str.indexOf('&') < 0) { return str; }\n\n  return str.replace(ENTITY_RE, replaceEntityPattern);\n}*/\n\nfunction unescapeMd(str) {\n  if (str.indexOf('\\\\') < 0) { return str; }\n  return str.replace(UNESCAPE_MD_RE, '$1');\n}\n\nfunction unescapeAll(str) {\n  if (str.indexOf('\\\\') < 0 && str.indexOf('&') < 0) { return str; }\n\n  return str.replace(UNESCAPE_ALL_RE, function (match, escaped, entity) {\n    if (escaped) { return escaped; }\n    return replaceEntityPattern(match, entity);\n  });\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar HTML_ESCAPE_TEST_RE = /[&<>\"]/;\nvar HTML_ESCAPE_REPLACE_RE = /[&<>\"]/g;\nvar HTML_REPLACEMENTS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;'\n};\n\nfunction replaceUnsafeChar(ch) {\n  return HTML_REPLACEMENTS[ch];\n}\n\nfunction escapeHtml(str) {\n  if (HTML_ESCAPE_TEST_RE.test(str)) {\n    return str.replace(HTML_ESCAPE_REPLACE_RE, replaceUnsafeChar);\n  }\n  return str;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar REGEXP_ESCAPE_RE = /[.?*+^$[\\]\\\\(){}|-]/g;\n\nfunction escapeRE(str) {\n  return str.replace(REGEXP_ESCAPE_RE, '\\\\$&');\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction isSpace(code) {\n  switch (code) {\n    case 0x09:\n    case 0x20:\n      return true;\n  }\n  return false;\n}\n\n// Zs (unicode class) || [\\t\\f\\v\\r\\n]\nfunction isWhiteSpace(code) {\n  if (code >= 0x2000 && code <= 0x200A) { return true; }\n  switch (code) {\n    case 0x09: // \\t\n    case 0x0A: // \\n\n    case 0x0B: // \\v\n    case 0x0C: // \\f\n    case 0x0D: // \\r\n    case 0x20:\n    case 0xA0:\n    case 0x1680:\n    case 0x202F:\n    case 0x205F:\n    case 0x3000:\n      return true;\n  }\n  return false;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n/*eslint-disable max-len*/\nvar UNICODE_PUNCT_RE = require('uc.micro/categories/P/regex');\n\n// Currently without astral characters support.\nfunction isPunctChar(ch) {\n  return UNICODE_PUNCT_RE.test(ch);\n}\n\n\n// Markdown ASCII punctuation characters.\n//\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\n//\n// Don't confuse with unicode punctuation !!! It lacks some chars in ascii range.\n//\nfunction isMdAsciiPunct(ch) {\n  switch (ch) {\n    case 0x21/* ! */:\n    case 0x22/* \" */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x27/* ' */:\n    case 0x28/* ( */:\n    case 0x29/* ) */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2C/* , */:\n    case 0x2D/* - */:\n    case 0x2E/* . */:\n    case 0x2F/* / */:\n    case 0x3A/* : */:\n    case 0x3B/* ; */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x3F/* ? */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7C/* | */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true;\n    default:\n      return false;\n  }\n}\n\n// Hepler to unify [reference labels].\n//\nfunction normalizeReference(str) {\n  // Trim and collapse whitespace\n  //\n  str = str.trim().replace(/\\s+/g, ' ');\n\n  // In node v10 'ẞ'.toLowerCase() === 'Ṿ', which is presumed to be a bug\n  // fixed in v12 (couldn't find any details).\n  //\n  // So treat this one as a special case\n  // (remove this when node v10 is no longer supported).\n  //\n  if ('ẞ'.toLowerCase() === 'Ṿ') {\n    str = str.replace(/ẞ/g, 'ß');\n  }\n\n  // .toLowerCase().toUpperCase() should get rid of all differences\n  // between letter variants.\n  //\n  // Simple .toLowerCase() doesn't normalize 125 code points correctly,\n  // and .toUpperCase doesn't normalize 6 of them (list of exceptions:\n  // İ, ϴ, ẞ, Ω, K, Å - those are already uppercased, but have differently\n  // uppercased versions).\n  //\n  // Here's an example showing how it happens. Lets take greek letter omega:\n  // uppercase U+0398 (Θ), U+03f4 (ϴ) and lowercase U+03b8 (θ), U+03d1 (ϑ)\n  //\n  // Unicode entries:\n  // 0398;GREEK CAPITAL LETTER THETA;Lu;0;L;;;;;N;;;;03B8;\n  // 03B8;GREEK SMALL LETTER THETA;Ll;0;L;;;;;N;;;0398;;0398\n  // 03D1;GREEK THETA SYMBOL;Ll;0;L;<compat> 03B8;;;;N;GREEK SMALL LETTER SCRIPT THETA;;0398;;0398\n  // 03F4;GREEK CAPITAL THETA SYMBOL;Lu;0;L;<compat> 0398;;;;N;;;;03B8;\n  //\n  // Case-insensitive comparison should treat all of them as equivalent.\n  //\n  // But .toLowerCase() doesn't change ϑ (it's already lowercase),\n  // and .toUpperCase() doesn't change ϴ (already uppercase).\n  //\n  // Applying first lower then upper case normalizes any character:\n  // '\\u0398\\u03f4\\u03b8\\u03d1'.toLowerCase().toUpperCase() === '\\u0398\\u0398\\u0398\\u0398'\n  //\n  // Note: this is equivalent to unicode case folding; unicode normalization\n  // is a different step that is not required here.\n  //\n  // Final result should be uppercased, because it's later stored in an object\n  // (this avoid a conflict with Object.prototype members,\n  // most notably, `__proto__`)\n  //\n  return str.toLowerCase().toUpperCase();\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n// Re-export libraries commonly used in both markdown-it and its plugins,\n// so plugins won't have to depend on them explicitly, which reduces their\n// bundled size (e.g. a browser build).\n//\nexports.lib                 = {};\nexports.lib.mdurl           = require('mdurl');\nexports.lib.ucmicro         = require('uc.micro');\n\nexports.assign              = assign;\nexports.isString            = isString;\nexports.has                 = has;\nexports.unescapeMd          = unescapeMd;\nexports.unescapeAll         = unescapeAll;\nexports.isValidEntityCode   = isValidEntityCode;\nexports.fromCodePoint       = fromCodePoint;\n// exports.replaceEntities     = replaceEntities;\nexports.escapeHtml          = escapeHtml;\nexports.arrayReplaceAt      = arrayReplaceAt;\nexports.isSpace             = isSpace;\nexports.isWhiteSpace        = isWhiteSpace;\nexports.isMdAsciiPunct      = isMdAsciiPunct;\nexports.isPunctChar         = isPunctChar;\nexports.escapeRE            = escapeRE;\nexports.normalizeReference  = normalizeReference;\n","// heading (#, ##, ...)\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function heading(state, startLine, endLine, silent) {\n  var ch, level, tmp, token,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  ch  = state.src.charCodeAt(pos);\n\n  if (ch !== 0x23/* # */ || pos >= max) { return false; }\n\n  // count heading level\n  level = 1;\n  ch = state.src.charCodeAt(++pos);\n  while (ch === 0x23/* # */ && pos < max && level <= 6) {\n    level++;\n    ch = state.src.charCodeAt(++pos);\n  }\n\n  if (level > 6 || (pos < max && !isSpace(ch))) { return false; }\n\n  if (silent) { return true; }\n\n  // Let's cut tails like '    ###  ' from the end of string\n\n  max = state.skipSpacesBack(max, pos);\n  tmp = state.skipCharsBack(max, 0x23, pos); // #\n  if (tmp > pos && isSpace(state.src.charCodeAt(tmp - 1))) {\n    max = tmp;\n  }\n\n  state.line = startLine + 1;\n\n  token        = state.push('heading_open', 'h' + String(level), 1);\n  token.markup = '########'.slice(0, level);\n  token.map    = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = state.src.slice(pos, max).trim();\n  token.map      = [ startLine, state.line ];\n  token.children = [];\n\n  token        = state.push('heading_close', 'h' + String(level), -1);\n  token.markup = '########'.slice(0, level);\n\n  return true;\n};\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"megbox\"},[_c('div',{staticClass:\"top\"},[_c('Emoji',{ref:\"emoji\",attrs:{\"textConent\":_vm.rename}}),_c('el-form',{staticClass:\"demo-form-inline\",attrs:{\"inline\":true,\"model\":_vm.ruleForm}},[_c('el-form-item',{attrs:{\"prop\":\"name\",\"label\":\"昵称\",\"rules\":_vm.rules.name}},[_c('el-input',{attrs:{\"placeholder\":\"请输入昵称\"},model:{value:(_vm.ruleForm.name),callback:function ($$v) {_vm.$set(_vm.ruleForm, \"name\", $$v)},expression:\"ruleForm.name\"}})],1),_c('el-form-item',{attrs:{\"prop\":\"email\",\"label\":\"邮箱\",\"rules\":_vm.rules.email}},[_c('el-input',{attrs:{\"placeholder\":\"请输入邮箱\"},model:{value:(_vm.ruleForm.email),callback:function ($$v) {_vm.$set(_vm.ruleForm, \"email\", $$v)},expression:\"ruleForm.email\"}})],1),_c('el-form-item',[_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.onSubmit}},[_vm._v(\"提交\")])],1)],1)],1),_c('h2',[_vm._v(\"内容区\")]),_c('div',{staticClass:\"bottom\"},[_c('div',{staticClass:\"block\"},_vm._l((_vm.list),function(v,index){return _c('div',{key:index,staticClass:\"timeline\"},[_c('p',[_c('span',[_vm._v(_vm._s(v.megs.name))]),_vm._v(_vm._s(v.megs.createdAt)+\" \")]),_c('p',{staticClass:\"content\"},[_vm._v(_vm._s(v.megs.content))]),_c('p',{staticClass:\"reply\",on:{\"click\":function($event){return _vm.replyMessage(index, v.megs.name)}}},[_vm._v(\"回复\")]),_vm._l((v.reply),function(r,i){return _c('div',{key:i,staticClass:\"rep\"},[_c('svg',{staticClass:\"icon inicon\",attrs:{\"aria-hidden\":\"true\"}},[(r.star == 0)?_c('use',{attrs:{\"xlink:href\":\"#icon-taidixiongwanoukeai\"}}):_vm._e(),(r.star == 1)?_c('use',{attrs:{\"xlink:href\":\"#icon-labixiaoxin-\"}}):_vm._e()]),_c('p',[_c('span',[_vm._v(_vm._s(r.name))]),_vm._v(\" \"+_vm._s(r.createdAt)+\" \")]),_c('p',{staticClass:\"content\"},[_vm._v(_vm._s(r.content))]),_c('p',{staticClass:\"reply\",on:{\"click\":function($event){return _vm.replyMessage(index, r.name)}}},[_vm._v(\"回复\")])])}),_c('svg',{staticClass:\"icon\",attrs:{\"aria-hidden\":\"true\"}},[(v.megs.star == 1)?_c('use',{attrs:{\"xlink:href\":\"#icon-labixiaoxin-\"}}):_vm._e(),(v.megs.star == 0)?_c('use',{attrs:{\"xlink:href\":\"#icon-taidixiongwanoukeai\"}}):_vm._e()]),_c('div',{staticClass:\"line\"})],2)}),0)])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"megbox\">\n    <div class=\"top\">\n      <!-- 引用Emoji  里面有留言的输入框区域和表情区域  父传子  把rename传给输入框-->\n      <Emoji ref=\"emoji\" :textConent=\"rename\" />\n\n      <!-- prop属性？？？？？？？？？？ -->\n      <el-form :inline=\"true\" :model=\"ruleForm\" class=\"demo-form-inline\">\n        <el-form-item prop=\"name\" label=\"昵称\" :rules=\"rules.name\">\n          <el-input v-model=\"ruleForm.name\" placeholder=\"请输入昵称\"></el-input>\n        </el-form-item>\n        <el-form-item prop=\"email\" label=\"邮箱\" :rules=\"rules.email\">\n          <el-input\n            v-model=\"ruleForm.email\"\n            placeholder=\"请输入邮箱\"\n          ></el-input>\n        </el-form-item>\n        <el-form-item>\n          <el-button type=\"primary\" @click=\"onSubmit\">提交</el-button>\n        </el-form-item>\n      </el-form>\n    </div>\n    <h2>内容区</h2>\n    <div class=\"bottom\">\n      <div class=\"block\">\n        <!-- list是Message.vue传过来的  type为1的留言 -->\n        <div class=\"timeline\" v-for=\"(v, index) in list\" :key=\"index\">\n          <p>\n            <!-- 留言的人的名称 -->\n            <span>{{ v.megs.name }}</span\n            >{{ v.megs.createdAt }}\n          </p>\n          <p class=\"content\">{{ v.megs.content }}</p>\n\n          <!-- 回复这里用id比较好吧   reindex回复的那一条的索引 -->\n          <p class=\"reply\" @click=\"replyMessage(index, v.megs.name)\">回复</p>\n\n          <!-- 回复的内容部分 -->\n          <div class=\"rep\" v-for=\"(r, i) in v.reply\" :key=\"i\">\n            <svg class=\"icon inicon\" aria-hidden=\"true\">\n              <use\n                xlink:href=\"#icon-taidixiongwanoukeai\"\n                v-if=\"r.star == 0\"\n              ></use>\n              <use xlink:href=\"#icon-labixiaoxin-\" v-if=\"r.star == 1\"></use>\n            </svg>\n            <p>\n              <span>{{ r.name }}</span>\n              {{ r.createdAt }}\n            </p>\n            <p class=\"content\">{{ r.content }}</p>\n            <p class=\"reply\" @click=\"replyMessage(index, r.name)\">回复</p>\n          </div>\n\n          <!-- 旁边的小图标 -->\n          <svg class=\"icon\" aria-hidden=\"true\">\n            <use xlink:href=\"#icon-labixiaoxin-\" v-if=\"v.megs.star == 1\"></use>\n            <use\n              xlink:href=\"#icon-taidixiongwanoukeai\"\n              v-if=\"v.megs.star == 0\"\n            ></use>\n          </svg>\n          <div class=\"line\"></div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n<script> \n// 表情\nimport Emoji from \"../components/Emoji\";\nimport { addMessage, replyMessage } from \"../api/index\";\nimport { log } from 'three';\n\nexport default {\n  data() {\n    return {\n      // ruleForm里面是装的输入的昵称和邮箱\n      ruleForm: {},\n      // 第一条留言 \n      oneMeg: {\n        type: 1,\n        star: 0,\n      },\n      rules: {\n        name: [\n          { required: true, message: \"请输入昵称\", trigger: \"blur\" },\n          {\n            min: 1,\n            max: 255,\n            message: \"长度在 1 到 255 个字符\",\n            trigger: \"blur\",\n          },\n        ],\n        email: [\n          { required: true, message: \"请输入邮箱地址\", trigger: \"blur\" },\n          {\n            type: \"email\",\n            message: \"请输入正确的邮箱地址\",\n            trigger: [\"blur\", \"change\"],\n          },\n        ],\n      },\n      // 输入框中的内容保存在content中\n      content: [],\n      // 传给子组件Emoji.vue的信息 rename是要回复的那一条那个发言人的名字+@，rename会出现在留言框中\n      rename: '',\n      // 点击回复有关的， 回复的那一条留言的id\n      uid: '',\n      reindex: 0,\n    };\n  },\n  // 父传子  这是子组件   父组件是Message.vue 和 Showart.vue\n  props: {\n    // Message.vue 传过来的,数据库中留言版的内容   里面有两个对象:megs和reply!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n    list: {\n      type: Array,\n      // default: [],\n      default: function () {\n        return []\n      }\n    },\n    // Message.vue 传过来的, 那边直接传了个 1（总留言板）  \n    // 还有ShowArt传过来的,那边穿了个博客的id\n    type: {\n      default: \"1\",\n    },\n    // // 谁传给他的  他不应该在这里吧  把他移到data中   记录一下更改!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n    // reindex: 0,\n  },\n  methods: {\n    // ‘啾’提交留言按钮\n    onSubmit() {\n      // 保存输入的留言\n      this.$refs.emoji.referContent();\n\n      // 输入的留言保存在content中\n      this.content = this.$refs.emoji.content;\n\n      // 如果没有输入留言内容的话,直接return     \n      if (this.content.length === 0) return\n\n      // 输入留言的留言人名字、邮箱、内容、类型为1\n      this.oneMeg.name = this.ruleForm.name;\n      this.oneMeg.email = this.ruleForm.email;\n\n      if (!this.ruleForm.name) return alert('请输入昵称')\n      if (!this.ruleForm.email) return alert('请输入邮箱')\n\n      // 将this.content中的内容存到this.oneMeg.content中\n      this.oneMeg.content = this.content[this.content.length - 1];\n      this.oneMeg.type = this.type;\n\n\n\n      // 添加留言      this.rename == ''就是不是指回复别人的,而是自己添加留言\n      if (this.rename == '') {\n        addMessage(this.oneMeg)\n          .then((res) => {\n            if (res) {\n              console.log(res);\n              if (res.code == \"200\") {\n                this.$message({\n                  message: \"发布成功\",\n                  type: \"success\",\n                  duration: 1000,\n                });\n                // 将新项目添加到数组的开头\n                this.list.unshift({ megs: this.oneMeg });\n\n              } else {\n                this.$message({\n                  showClose: true,\n                  message: \"发布失败\",\n                  type: \"error\",\n                  duration: 1000,\n                });\n\n              }\n            }\n          })\n          .catch(function (error) {\n            console.log(error);\n            this.$message({\n              showClose: true,\n              message: \"发布失败\",\n              type: \"error\",\n              duration: 1000,\n            });\n\n          });\n        this.clearInfo()\n      }\n      // rename不为空   就是指回复的是别人的 rename就是@+别人的名字\n      else {\n        // this.oneMeg.name 就是输入的昵称 + rename\n        this.oneMeg.name += this.rename;\n        // 回复的那一条留言的uid\n        this.oneMeg.uid = this.uid;\n        console.log(\"回复this.oneMeg:\", this.oneMeg);\n        replyMessage(this.oneMeg)\n          .then((res) => {\n            if (res) {\n              console.log('回复别人的信息res', res);\n              if (res.code == \"200\") {\n                this.$message({\n                  message: \"发布成功\",\n                  type: \"success\",\n                  duration: 1000,\n                });\n                console.log('megBox.vue中的this.list.reply回复留言', this.list.reply);\n                // 把这条回复别人的回复添加到list里面的reply\n                this.list[this.reindex].reply.push(this.oneMeg);\n              } else {\n                this.$message({\n                  showClose: true,\n                  message: \"发布失败\",\n                  type: \"error\",\n                  duration: 1000,\n                });\n\n              }\n            }\n          })\n          .catch(function (error) {\n            console.log(error);\n            this.$message({\n              showClose: true,\n              message: \"发布失败\",\n              type: \"error\",\n              duration: 1000,\n            });\n\n          });\n        this.clearInfo()\n      }\n    },\n\n    // 点击回复， rename是要回复的那一条那个发言人的名字+@，rename会出现在留言框中\n    replyMessage(i, name) {\n      this.rename = '';\n\n      console.log('回复的那一条的索引:', i);\n      //   reindex 回复的那一条的索引\n      this.reindex = i;\n\n      let n = name.split(\"@\")[0];\n      console.log('n的值', n);\n\n      // 回复：  zs@li的格式\n      this.rename = `@${n}`;\n      console.log('rename的值', this.rename);\n\n      this.uid = this.list[i].megs.id;\n      console.log('回复的那一条留言的uid', this.uid);\n    },\n\n    // 点完提交后,清空昵称,邮箱,rename\n    clearInfo() {\n      this.ruleForm.name = ''\n      this.ruleForm.email = ''\n      this.rename = ''\n    }\n  },\n  components: {\n    Emoji,\n  },\n};\n\n\n</script>\n<style scoped lang=\"scss\">\n@import '../assets/css/base.scss';\n@import '../assets/css/mixin.scss';\n.megbox {\n  width: 100%;\n  margin: 0 auto;\n  margin-top: 20px;\n  padding: 0 10px;\n  box-sizing: border-box;\n  @include font_color();\n  @include bg_color();\n}\n.top {\n  margin-bottom: 20px;\n}\n.bottom {\n  width: 100%;\n  min-height: 600px;\n  margin-top: 20px;\n}\n.timeline {\n  width: 100%;\n  padding-bottom: 10px;\n  padding-left: 30px;\n  position: relative;\n  p {\n    span {\n      font-weight: bold;\n      margin-right: 5px;\n    }\n  }\n  .line {\n    width: 1px;\n    height: 100%;\n    background-color: #ccc;\n    position: absolute;\n    top: 0;\n    left: 8px;\n  }\n  .icon {\n    position: absolute;\n    top: 0;\n    left: -6px;\n    z-index: 99;\n    font-size: 30px;\n    color: #000;\n  }\n  .reply {\n    cursor: pointer;\n    font-size: 12px;\n    margin: 5px 0;\n  }\n  .rep {\n    padding-left: 40px;\n    position: relative;\n    .inicon {\n      position: absolute;\n      top: 0;\n      left: 0px;\n      z-index: 99;\n      font-size: 30px;\n      color: #000;\n    }\n  }\n}\n.content {\n  padding: 10px;\n  margin: 5px 0;\n  border-radius: 5px;\n  border: 1px solid #ccc;\n  // @include border_color();\n}\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MegBox.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MegBox.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./MegBox.vue?vue&type=template&id=213481d0&scoped=true&\"\nimport script from \"./MegBox.vue?vue&type=script&lang=js&\"\nexport * from \"./MegBox.vue?vue&type=script&lang=js&\"\nimport style0 from \"./MegBox.vue?vue&type=style&index=0&id=213481d0&scoped=true&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"213481d0\",\n  null\n  \n)\n\nexport default component.exports","// Main parser class\n\n'use strict';\n\n\nvar utils        = require('./common/utils');\nvar helpers      = require('./helpers');\nvar Renderer     = require('./renderer');\nvar ParserCore   = require('./parser_core');\nvar ParserBlock  = require('./parser_block');\nvar ParserInline = require('./parser_inline');\nvar LinkifyIt    = require('linkify-it');\nvar mdurl        = require('mdurl');\nvar punycode     = require('punycode');\n\n\nvar config = {\n  default: require('./presets/default'),\n  zero: require('./presets/zero'),\n  commonmark: require('./presets/commonmark')\n};\n\n////////////////////////////////////////////////////////////////////////////////\n//\n// This validator can prohibit more than really needed to prevent XSS. It's a\n// tradeoff to keep code simple and to be secure by default.\n//\n// If you need different setup - override validator method as you wish. Or\n// replace it with dummy function and use external sanitizer.\n//\n\nvar BAD_PROTO_RE = /^(vbscript|javascript|file|data):/;\nvar GOOD_DATA_RE = /^data:image\\/(gif|png|jpeg|webp);/;\n\nfunction validateLink(url) {\n  // url should be normalized at this point, and existing entities are decoded\n  var str = url.trim().toLowerCase();\n\n  return BAD_PROTO_RE.test(str) ? (GOOD_DATA_RE.test(str) ? true : false) : true;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n\nvar RECODE_HOSTNAME_FOR = [ 'http:', 'https:', 'mailto:' ];\n\nfunction normalizeLink(url) {\n  var parsed = mdurl.parse(url, true);\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toASCII(parsed.hostname);\n      } catch (er) { /**/ }\n    }\n  }\n\n  return mdurl.encode(mdurl.format(parsed));\n}\n\nfunction normalizeLinkText(url) {\n  var parsed = mdurl.parse(url, true);\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toUnicode(parsed.hostname);\n      } catch (er) { /**/ }\n    }\n  }\n\n  // add '%' to exclude list because of https://github.com/markdown-it/markdown-it/issues/720\n  return mdurl.decode(mdurl.format(parsed), mdurl.decode.defaultChars + '%');\n}\n\n\n/**\n * class MarkdownIt\n *\n * Main parser/renderer class.\n *\n * ##### Usage\n *\n * ```javascript\n * // node.js, \"classic\" way:\n * var MarkdownIt = require('markdown-it'),\n *     md = new MarkdownIt();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // node.js, the same, but with sugar:\n * var md = require('markdown-it')();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // browser without AMD, added to \"window\" on script load\n * // Note, there are no dash.\n * var md = window.markdownit();\n * var result = md.render('# markdown-it rulezz!');\n * ```\n *\n * Single line rendering, without paragraph wrap:\n *\n * ```javascript\n * var md = require('markdown-it')();\n * var result = md.renderInline('__markdown-it__ rulezz!');\n * ```\n **/\n\n/**\n * new MarkdownIt([presetName, options])\n * - presetName (String): optional, `commonmark` / `zero`\n * - options (Object)\n *\n * Creates parser instanse with given config. Can be called without `new`.\n *\n * ##### presetName\n *\n * MarkdownIt provides named presets as a convenience to quickly\n * enable/disable active syntax rules and options for common use cases.\n *\n * - [\"commonmark\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/commonmark.js) -\n *   configures parser to strict [CommonMark](http://commonmark.org/) mode.\n * - [default](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/default.js) -\n *   similar to GFM, used when no preset name given. Enables all available rules,\n *   but still without html, typographer & autolinker.\n * - [\"zero\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/zero.js) -\n *   all rules disabled. Useful to quickly setup your config via `.enable()`.\n *   For example, when you need only `bold` and `italic` markup and nothing else.\n *\n * ##### options:\n *\n * - __html__ - `false`. Set `true` to enable HTML tags in source. Be careful!\n *   That's not safe! You may need external sanitizer to protect output from XSS.\n *   It's better to extend features via plugins, instead of enabling HTML.\n * - __xhtmlOut__ - `false`. Set `true` to add '/' when closing single tags\n *   (`<br />`). This is needed only for full CommonMark compatibility. In real\n *   world you will need HTML output.\n * - __breaks__ - `false`. Set `true` to convert `\\n` in paragraphs into `<br>`.\n * - __langPrefix__ - `language-`. CSS language class prefix for fenced blocks.\n *   Can be useful for external highlighters.\n * - __linkify__ - `false`. Set `true` to autoconvert URL-like text to links.\n * - __typographer__  - `false`. Set `true` to enable [some language-neutral\n *   replacement](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/replacements.js) +\n *   quotes beautification (smartquotes).\n * - __quotes__ - `“”‘’`, String or Array. Double + single quotes replacement\n *   pairs, when typographer enabled and smartquotes on. For example, you can\n *   use `'«»„“'` for Russian, `'„“‚‘'` for German, and\n *   `['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›']` for French (including nbsp).\n * - __highlight__ - `null`. Highlighter function for fenced code blocks.\n *   Highlighter `function (str, lang)` should return escaped HTML. It can also\n *   return empty string if the source was not changed and should be escaped\n *   externaly. If result starts with <pre... internal wrapper is skipped.\n *\n * ##### Example\n *\n * ```javascript\n * // commonmark mode\n * var md = require('markdown-it')('commonmark');\n *\n * // default mode\n * var md = require('markdown-it')();\n *\n * // enable everything\n * var md = require('markdown-it')({\n *   html: true,\n *   linkify: true,\n *   typographer: true\n * });\n * ```\n *\n * ##### Syntax highlighting\n *\n * ```js\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return hljs.highlight(str, { language: lang, ignoreIllegals: true }).value;\n *       } catch (__) {}\n *     }\n *\n *     return ''; // use external default escaping\n *   }\n * });\n * ```\n *\n * Or with full wrapper override (if you need assign class to `<pre>`):\n *\n * ```javascript\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * // Actual default values\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return '<pre class=\"hljs\"><code>' +\n *                hljs.highlight(str, { language: lang, ignoreIllegals: true }).value +\n *                '</code></pre>';\n *       } catch (__) {}\n *     }\n *\n *     return '<pre class=\"hljs\"><code>' + md.utils.escapeHtml(str) + '</code></pre>';\n *   }\n * });\n * ```\n *\n **/\nfunction MarkdownIt(presetName, options) {\n  if (!(this instanceof MarkdownIt)) {\n    return new MarkdownIt(presetName, options);\n  }\n\n  if (!options) {\n    if (!utils.isString(presetName)) {\n      options = presetName || {};\n      presetName = 'default';\n    }\n  }\n\n  /**\n   * MarkdownIt#inline -> ParserInline\n   *\n   * Instance of [[ParserInline]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.inline = new ParserInline();\n\n  /**\n   * MarkdownIt#block -> ParserBlock\n   *\n   * Instance of [[ParserBlock]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.block = new ParserBlock();\n\n  /**\n   * MarkdownIt#core -> Core\n   *\n   * Instance of [[Core]] chain executor. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.core = new ParserCore();\n\n  /**\n   * MarkdownIt#renderer -> Renderer\n   *\n   * Instance of [[Renderer]]. Use it to modify output look. Or to add rendering\n   * rules for new token types, generated by plugins.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * function myToken(tokens, idx, options, env, self) {\n   *   //...\n   *   return result;\n   * };\n   *\n   * md.renderer.rules['my_token'] = myToken\n   * ```\n   *\n   * See [[Renderer]] docs and [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.js).\n   **/\n  this.renderer = new Renderer();\n\n  /**\n   * MarkdownIt#linkify -> LinkifyIt\n   *\n   * [linkify-it](https://github.com/markdown-it/linkify-it) instance.\n   * Used by [linkify](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/linkify.js)\n   * rule.\n   **/\n  this.linkify = new LinkifyIt();\n\n  /**\n   * MarkdownIt#validateLink(url) -> Boolean\n   *\n   * Link validation function. CommonMark allows too much in links. By default\n   * we disable `javascript:`, `vbscript:`, `file:` schemas, and almost all `data:...` schemas\n   * except some embedded image types.\n   *\n   * You can change this behaviour:\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   * // enable everything\n   * md.validateLink = function () { return true; }\n   * ```\n   **/\n  this.validateLink = validateLink;\n\n  /**\n   * MarkdownIt#normalizeLink(url) -> String\n   *\n   * Function used to encode link url to a machine-readable format,\n   * which includes url-encoding, punycode, etc.\n   **/\n  this.normalizeLink = normalizeLink;\n\n  /**\n   * MarkdownIt#normalizeLinkText(url) -> String\n   *\n   * Function used to decode link url to a human-readable format`\n   **/\n  this.normalizeLinkText = normalizeLinkText;\n\n\n  // Expose utils & helpers for easy acces from plugins\n\n  /**\n   * MarkdownIt#utils -> utils\n   *\n   * Assorted utility functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/common/utils.js).\n   **/\n  this.utils = utils;\n\n  /**\n   * MarkdownIt#helpers -> helpers\n   *\n   * Link components parser functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/helpers).\n   **/\n  this.helpers = utils.assign({}, helpers);\n\n\n  this.options = {};\n  this.configure(presetName);\n\n  if (options) { this.set(options); }\n}\n\n\n/** chainable\n * MarkdownIt.set(options)\n *\n * Set parser options (in the same format as in constructor). Probably, you\n * will never need it, but you can change options after constructor call.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .set({ html: true, breaks: true })\n *             .set({ typographer, true });\n * ```\n *\n * __Note:__ To achieve the best possible performance, don't modify a\n * `markdown-it` instance options on the fly. If you need multiple configurations\n * it's best to create multiple instances and initialize each with separate\n * config.\n **/\nMarkdownIt.prototype.set = function (options) {\n  utils.assign(this.options, options);\n  return this;\n};\n\n\n/** chainable, internal\n * MarkdownIt.configure(presets)\n *\n * Batch load of all options and compenent settings. This is internal method,\n * and you probably will not need it. But if you will - see available presets\n * and data structure [here](https://github.com/markdown-it/markdown-it/tree/master/lib/presets)\n *\n * We strongly recommend to use presets instead of direct config loads. That\n * will give better compatibility with next versions.\n **/\nMarkdownIt.prototype.configure = function (presets) {\n  var self = this, presetName;\n\n  if (utils.isString(presets)) {\n    presetName = presets;\n    presets = config[presetName];\n    if (!presets) { throw new Error('Wrong `markdown-it` preset \"' + presetName + '\", check name'); }\n  }\n\n  if (!presets) { throw new Error('Wrong `markdown-it` preset, can\\'t be empty'); }\n\n  if (presets.options) { self.set(presets.options); }\n\n  if (presets.components) {\n    Object.keys(presets.components).forEach(function (name) {\n      if (presets.components[name].rules) {\n        self[name].ruler.enableOnly(presets.components[name].rules);\n      }\n      if (presets.components[name].rules2) {\n        self[name].ruler2.enableOnly(presets.components[name].rules2);\n      }\n    });\n  }\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.enable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to enable\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable list or rules. It will automatically find appropriate components,\n * containing rules with given names. If rule not found, and `ignoreInvalid`\n * not set - throws exception.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .enable(['sub', 'sup'])\n *             .disable('smartquotes');\n * ```\n **/\nMarkdownIt.prototype.enable = function (list, ignoreInvalid) {\n  var result = [];\n\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  [ 'core', 'block', 'inline' ].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.enable(list, true));\n  }, this);\n\n  result = result.concat(this.inline.ruler2.enable(list, true));\n\n  var missed = list.filter(function (name) { return result.indexOf(name) < 0; });\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to enable unknown rule(s): ' + missed);\n  }\n\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.disable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * The same as [[MarkdownIt.enable]], but turn specified rules off.\n **/\nMarkdownIt.prototype.disable = function (list, ignoreInvalid) {\n  var result = [];\n\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  [ 'core', 'block', 'inline' ].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.disable(list, true));\n  }, this);\n\n  result = result.concat(this.inline.ruler2.disable(list, true));\n\n  var missed = list.filter(function (name) { return result.indexOf(name) < 0; });\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to disable unknown rule(s): ' + missed);\n  }\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.use(plugin, params)\n *\n * Load specified plugin with given params into current parser instance.\n * It's just a sugar to call `plugin(md, params)` with curring.\n *\n * ##### Example\n *\n * ```javascript\n * var iterator = require('markdown-it-for-inline');\n * var md = require('markdown-it')()\n *             .use(iterator, 'foo_replace', 'text', function (tokens, idx) {\n *               tokens[idx].content = tokens[idx].content.replace(/foo/g, 'bar');\n *             });\n * ```\n **/\nMarkdownIt.prototype.use = function (plugin /*, params, ... */) {\n  var args = [ this ].concat(Array.prototype.slice.call(arguments, 1));\n  plugin.apply(plugin, args);\n  return this;\n};\n\n\n/** internal\n * MarkdownIt.parse(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Parse input string and return list of block tokens (special token type\n * \"inline\" will contain list of inline tokens). You should not call this\n * method directly, until you write custom renderer (for example, to produce\n * AST).\n *\n * `env` is used to pass data between \"distributed\" rules and return additional\n * metadata like reference info, needed for the renderer. It also can be used to\n * inject data in specific cases. Usually, you will be ok to pass `{}`,\n * and then pass updated object to renderer.\n **/\nMarkdownIt.prototype.parse = function (src, env) {\n  if (typeof src !== 'string') {\n    throw new Error('Input data should be a String');\n  }\n\n  var state = new this.core.State(src, this, env);\n\n  this.core.process(state);\n\n  return state.tokens;\n};\n\n\n/**\n * MarkdownIt.render(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Render markdown string into html. It does all magic for you :).\n *\n * `env` can be used to inject additional metadata (`{}` by default).\n * But you will not need it with high probability. See also comment\n * in [[MarkdownIt.parse]].\n **/\nMarkdownIt.prototype.render = function (src, env) {\n  env = env || {};\n\n  return this.renderer.render(this.parse(src, env), this.options, env);\n};\n\n\n/** internal\n * MarkdownIt.parseInline(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * The same as [[MarkdownIt.parse]] but skip all block rules. It returns the\n * block tokens list with the single `inline` element, containing parsed inline\n * tokens in `children` property. Also updates `env` object.\n **/\nMarkdownIt.prototype.parseInline = function (src, env) {\n  var state = new this.core.State(src, this, env);\n\n  state.inlineMode = true;\n  this.core.process(state);\n\n  return state.tokens;\n};\n\n\n/**\n * MarkdownIt.renderInline(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Similar to [[MarkdownIt.render]] but for single paragraph content. Result\n * will NOT be wrapped into `<p>` tags.\n **/\nMarkdownIt.prototype.renderInline = function (src, env) {\n  env = env || {};\n\n  return this.renderer.render(this.parseInline(src, env), this.options, env);\n};\n\n\nmodule.exports = MarkdownIt;\n","// Token class\n\n'use strict';\n\n\n/**\n * class Token\n **/\n\n/**\n * new Token(type, tag, nesting)\n *\n * Create new token and fill passed properties.\n **/\nfunction Token(type, tag, nesting) {\n  /**\n   * Token#type -> String\n   *\n   * Type of the token (string, e.g. \"paragraph_open\")\n   **/\n  this.type     = type;\n\n  /**\n   * Token#tag -> String\n   *\n   * html tag name, e.g. \"p\"\n   **/\n  this.tag      = tag;\n\n  /**\n   * Token#attrs -> Array\n   *\n   * Html attributes. Format: `[ [ name1, value1 ], [ name2, value2 ] ]`\n   **/\n  this.attrs    = null;\n\n  /**\n   * Token#map -> Array\n   *\n   * Source map info. Format: `[ line_begin, line_end ]`\n   **/\n  this.map      = null;\n\n  /**\n   * Token#nesting -> Number\n   *\n   * Level change (number in {-1, 0, 1} set), where:\n   *\n   * -  `1` means the tag is opening\n   * -  `0` means the tag is self-closing\n   * - `-1` means the tag is closing\n   **/\n  this.nesting  = nesting;\n\n  /**\n   * Token#level -> Number\n   *\n   * nesting level, the same as `state.level`\n   **/\n  this.level    = 0;\n\n  /**\n   * Token#children -> Array\n   *\n   * An array of child nodes (inline and img tokens)\n   **/\n  this.children = null;\n\n  /**\n   * Token#content -> String\n   *\n   * In a case of self-closing tag (code, html, fence, etc.),\n   * it has contents of this tag.\n   **/\n  this.content  = '';\n\n  /**\n   * Token#markup -> String\n   *\n   * '*' or '_' for emphasis, fence string for fence, etc.\n   **/\n  this.markup   = '';\n\n  /**\n   * Token#info -> String\n   *\n   * Additional information:\n   *\n   * - Info string for \"fence\" tokens\n   * - The value \"auto\" for autolink \"link_open\" and \"link_close\" tokens\n   * - The string value of the item marker for ordered-list \"list_item_open\" tokens\n   **/\n  this.info     = '';\n\n  /**\n   * Token#meta -> Object\n   *\n   * A place for plugins to store an arbitrary data\n   **/\n  this.meta     = null;\n\n  /**\n   * Token#block -> Boolean\n   *\n   * True for block-level tokens, false for inline tokens.\n   * Used in renderer to calculate line breaks\n   **/\n  this.block    = false;\n\n  /**\n   * Token#hidden -> Boolean\n   *\n   * If it's true, ignore this element when rendering. Used for tight lists\n   * to hide paragraphs.\n   **/\n  this.hidden   = false;\n}\n\n\n/**\n * Token.attrIndex(name) -> Number\n *\n * Search attribute index by name.\n **/\nToken.prototype.attrIndex = function attrIndex(name) {\n  var attrs, i, len;\n\n  if (!this.attrs) { return -1; }\n\n  attrs = this.attrs;\n\n  for (i = 0, len = attrs.length; i < len; i++) {\n    if (attrs[i][0] === name) { return i; }\n  }\n  return -1;\n};\n\n\n/**\n * Token.attrPush(attrData)\n *\n * Add `[ name, value ]` attribute to list. Init attrs if necessary\n **/\nToken.prototype.attrPush = function attrPush(attrData) {\n  if (this.attrs) {\n    this.attrs.push(attrData);\n  } else {\n    this.attrs = [ attrData ];\n  }\n};\n\n\n/**\n * Token.attrSet(name, value)\n *\n * Set `name` attribute to `value`. Override old value if exists.\n **/\nToken.prototype.attrSet = function attrSet(name, value) {\n  var idx = this.attrIndex(name),\n      attrData = [ name, value ];\n\n  if (idx < 0) {\n    this.attrPush(attrData);\n  } else {\n    this.attrs[idx] = attrData;\n  }\n};\n\n\n/**\n * Token.attrGet(name)\n *\n * Get the value of attribute `name`, or null if it does not exist.\n **/\nToken.prototype.attrGet = function attrGet(name) {\n  var idx = this.attrIndex(name), value = null;\n  if (idx >= 0) {\n    value = this.attrs[idx][1];\n  }\n  return value;\n};\n\n\n/**\n * Token.attrJoin(name, value)\n *\n * Join value to existing attribute via space. Or create new attribute if not\n * exists. Useful to operate with token classes.\n **/\nToken.prototype.attrJoin = function attrJoin(name, value) {\n  var idx = this.attrIndex(name);\n\n  if (idx < 0) {\n    this.attrPush([ name, value ]);\n  } else {\n    this.attrs[idx][1] = this.attrs[idx][1] + ' ' + value;\n  }\n};\n\n\nmodule.exports = Token;\n","// Inline parser state\n\n'use strict';\n\n\nvar Token          = require('../token');\nvar isWhiteSpace   = require('../common/utils').isWhiteSpace;\nvar isPunctChar    = require('../common/utils').isPunctChar;\nvar isMdAsciiPunct = require('../common/utils').isMdAsciiPunct;\n\n\nfunction StateInline(src, md, env, outTokens) {\n  this.src = src;\n  this.env = env;\n  this.md = md;\n  this.tokens = outTokens;\n  this.tokens_meta = Array(outTokens.length);\n\n  this.pos = 0;\n  this.posMax = this.src.length;\n  this.level = 0;\n  this.pending = '';\n  this.pendingLevel = 0;\n\n  // Stores { start: end } pairs. Useful for backtrack\n  // optimization of pairs parse (emphasis, strikes).\n  this.cache = {};\n\n  // List of emphasis-like delimiters for current tag\n  this.delimiters = [];\n\n  // Stack of delimiter lists for upper level tags\n  this._prev_delimiters = [];\n\n  // backtick length => last seen position\n  this.backticks = {};\n  this.backticksScanned = false;\n}\n\n\n// Flush pending text\n//\nStateInline.prototype.pushPending = function () {\n  var token = new Token('text', '', 0);\n  token.content = this.pending;\n  token.level = this.pendingLevel;\n  this.tokens.push(token);\n  this.pending = '';\n  return token;\n};\n\n\n// Push new token to \"stream\".\n// If pending text exists - flush it as text token\n//\nStateInline.prototype.push = function (type, tag, nesting) {\n  if (this.pending) {\n    this.pushPending();\n  }\n\n  var token = new Token(type, tag, nesting);\n  var token_meta = null;\n\n  if (nesting < 0) {\n    // closing tag\n    this.level--;\n    this.delimiters = this._prev_delimiters.pop();\n  }\n\n  token.level = this.level;\n\n  if (nesting > 0) {\n    // opening tag\n    this.level++;\n    this._prev_delimiters.push(this.delimiters);\n    this.delimiters = [];\n    token_meta = { delimiters: this.delimiters };\n  }\n\n  this.pendingLevel = this.level;\n  this.tokens.push(token);\n  this.tokens_meta.push(token_meta);\n  return token;\n};\n\n\n// Scan a sequence of emphasis-like markers, and determine whether\n// it can start an emphasis sequence or end an emphasis sequence.\n//\n//  - start - position to scan from (it should point at a valid marker);\n//  - canSplitWord - determine if these markers can be found inside a word\n//\nStateInline.prototype.scanDelims = function (start, canSplitWord) {\n  var pos = start, lastChar, nextChar, count, can_open, can_close,\n      isLastWhiteSpace, isLastPunctChar,\n      isNextWhiteSpace, isNextPunctChar,\n      left_flanking = true,\n      right_flanking = true,\n      max = this.posMax,\n      marker = this.src.charCodeAt(start);\n\n  // treat beginning of the line as a whitespace\n  lastChar = start > 0 ? this.src.charCodeAt(start - 1) : 0x20;\n\n  while (pos < max && this.src.charCodeAt(pos) === marker) { pos++; }\n\n  count = pos - start;\n\n  // treat end of the line as a whitespace\n  nextChar = pos < max ? this.src.charCodeAt(pos) : 0x20;\n\n  isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));\n  isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));\n\n  isLastWhiteSpace = isWhiteSpace(lastChar);\n  isNextWhiteSpace = isWhiteSpace(nextChar);\n\n  if (isNextWhiteSpace) {\n    left_flanking = false;\n  } else if (isNextPunctChar) {\n    if (!(isLastWhiteSpace || isLastPunctChar)) {\n      left_flanking = false;\n    }\n  }\n\n  if (isLastWhiteSpace) {\n    right_flanking = false;\n  } else if (isLastPunctChar) {\n    if (!(isNextWhiteSpace || isNextPunctChar)) {\n      right_flanking = false;\n    }\n  }\n\n  if (!canSplitWord) {\n    can_open  = left_flanking  && (!right_flanking || isLastPunctChar);\n    can_close = right_flanking && (!left_flanking  || isNextPunctChar);\n  } else {\n    can_open  = left_flanking;\n    can_close = right_flanking;\n  }\n\n  return {\n    can_open:  can_open,\n    can_close: can_close,\n    length:    count\n  };\n};\n\n\n// re-export Token class to use in block rules\nStateInline.prototype.Token = Token;\n\n\nmodule.exports = StateInline;\n","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ShowArt.vue?vue&type=style&index=0&lang=scss&\"","/*! https://mths.be/punycode v1.4.1 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t!exports.nodeType && exports;\n\tvar freeModule = typeof module == 'object' && module &&\n\t\t!module.nodeType && module;\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (\n\t\tfreeGlobal.global === freeGlobal ||\n\t\tfreeGlobal.window === freeGlobal ||\n\t\tfreeGlobal.self === freeGlobal\n\t) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow new RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\tvar result = [];\n\t\twhile (length--) {\n\t\t\tresult[length] = fn(array[length]);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t * addresses.\n\t * @private\n\t * @param {String} domain The domain name or email address.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\tvar parts = string.split('@');\n\t\tvar result = '';\n\t\tif (parts.length > 1) {\n\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\tresult = parts[0] + '@';\n\t\t\tstring = parts[1];\n\t\t}\n\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\tvar labels = string.split('.');\n\t\tvar encoded = map(labels, fn).join('.');\n\t\treturn result + encoded;\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * https://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t * Punycode string of ASCII-only symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name or an email address\n\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t * it doesn't matter if you call it on a string that has already been\n\t * converted to Unicode.\n\t * @memberOf punycode\n\t * @param {String} input The Punycoded domain name or email address to\n\t * convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name or an email address to\n\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t * ASCII.\n\t * @memberOf punycode\n\t * @param {String} input The domain name or email address to convert, as a\n\t * Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name or\n\t * email address.\n\t */\n\tfunction toASCII(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.4.1',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine('punycode', function() {\n\t\t\treturn punycode;\n\t\t});\n\t} else if (freeExports && freeModule) {\n\t\tif (module.exports == freeExports) {\n\t\t\t// in Node.js, io.js, or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = punycode;\n\t\t} else {\n\t\t\t// in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (key in punycode) {\n\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// in Rhino or a web browser\n\t\troot.punycode = punycode;\n\t}\n\n}(this));\n","// lheading (---, ===)\n\n'use strict';\n\n\nmodule.exports = function lheading(state, startLine, endLine/*, silent*/) {\n  var content, terminate, i, l, token, pos, max, level, marker,\n      nextLine = startLine + 1, oldParentType,\n      terminatorRules = state.md.block.ruler.getRules('paragraph');\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  oldParentType = state.parentType;\n  state.parentType = 'paragraph'; // use paragraph to match terminatorRules\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    //\n    // Check for underline in setext header\n    //\n    if (state.sCount[nextLine] >= state.blkIndent) {\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n\n      if (pos < max) {\n        marker = state.src.charCodeAt(pos);\n\n        if (marker === 0x2D/* - */ || marker === 0x3D/* = */) {\n          pos = state.skipChars(pos, marker);\n          pos = state.skipSpaces(pos);\n\n          if (pos >= max) {\n            level = (marker === 0x3D/* = */ ? 1 : 2);\n            break;\n          }\n        }\n      }\n    }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  if (!level) {\n    // Didn't find valid underline\n    return false;\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n\n  state.line = nextLine + 1;\n\n  token          = state.push('heading_open', 'h' + String(level), 1);\n  token.markup   = String.fromCharCode(marker);\n  token.map      = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = content;\n  token.map      = [ startLine, state.line - 1 ];\n  token.children = [];\n\n  token          = state.push('heading_close', 'h' + String(level), -1);\n  token.markup   = String.fromCharCode(marker);\n\n  state.parentType = oldParentType;\n\n  return true;\n};\n","// \"Zero\" preset, with nothing enabled. Useful for manual configuring of simple\n// modes. For example, to parse bold/italic only.\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         false,        // Enable HTML tags in source\n    xhtmlOut:     false,        // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   20            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline'\n      ]\n    },\n\n    block: {\n      rules: [\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'text_collapse'\n      ]\n    }\n  }\n};\n","// Clean up tokens after emphasis and strikethrough postprocessing:\n// merge adjacent text nodes into one and re-calculate all token levels\n//\n// This is necessary because initially emphasis delimiter markers (*, _, ~)\n// are treated as their own separate text tokens. Then emphasis rule either\n// leaves them as text (needed to merge with adjacent text) or turns them\n// into opening/closing tags (which messes up levels inside).\n//\n'use strict';\n\n\nmodule.exports = function text_collapse(state) {\n  var curr, last,\n      level = 0,\n      tokens = state.tokens,\n      max = state.tokens.length;\n\n  for (curr = last = 0; curr < max; curr++) {\n    // re-calculate levels after emphasis/strikethrough turns some text nodes\n    // into opening/closing tags\n    if (tokens[curr].nesting < 0) level--; // closing tag\n    tokens[curr].level = level;\n    if (tokens[curr].nesting > 0) level++; // opening tag\n\n    if (tokens[curr].type === 'text' &&\n        curr + 1 < max &&\n        tokens[curr + 1].type === 'text') {\n\n      // collapse two adjacent text nodes\n      tokens[curr + 1].content = tokens[curr].content + tokens[curr + 1].content;\n    } else {\n      if (curr !== last) { tokens[last] = tokens[curr]; }\n\n      last++;\n    }\n  }\n\n  if (curr !== last) {\n    tokens.length = last;\n  }\n};\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"show animate__animated animate__bounceIn\"},[_c('div',{staticClass:\"detail\"},[_c('article',{staticClass:\"markdown-body\",staticStyle:{\"margin\":\"30px auto\"}},[_c('div',{staticClass:\"title\"},[_c('h1',[_vm._v(_vm._s(_vm.art.title))]),_c('ul',[_c('li',[_c('i',{staticClass:\"el-icon-user-solid\"}),_c('p',[_vm._v(_vm._s(_vm.art.author))])]),_c('li',[_c('i',{staticClass:\"el-icon-date\"}),_c('p',[_vm._v(_vm._s(_vm.art.updatedAt))])]),_c('li',[_c('i',{staticClass:\"el-icon-view\"}),_c('p',[_vm._v(_vm._s(_vm.art.views))])]),_c('li',[_c('i',{staticClass:\"el-icon-s-management\"}),_c('p',[_vm._v(_vm._s(_vm.art.classify))])])])]),_c('div',{staticStyle:{\"margin-top\":\"30px\"},domProps:{\"innerHTML\":_vm._s(_vm.content)}})]),_c('p',{staticStyle:{\"font-size\":\"20px\"}},[_vm._v(\"评论区\")]),_c('MegBox',{attrs:{\"list\":_vm.megContent,\"type\":_vm.id}})],1)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"reward\",on:{\"mouseover\":_vm.mouseOver,\"mouseleave\":_vm.mouseLeave}},[_c('div',{staticClass:\"button\"},[_vm._v(\" 赏 \")]),(_vm.isShow)?_c('div',{staticClass:\"pic\"},[_c('img',{attrs:{\"src\":_vm.picUrl,\"alt\":\"\"}}),_vm._m(0)]):_vm._e()])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"imgcontent\"},[_c('p',[_vm._v(\"支付宝\")]),_c('p',[_vm._v(\"微信\")])])}]\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"reward\" @mouseover=\"mouseOver\"\n      @mouseleave=\"mouseLeave\">\n      <div class=\"button\">\n          赏\n      </div>\n      <div class=\"pic\" v-if=\"isShow\">\n          <img :src=\"picUrl\" alt=\"\">\n          <div class=\"imgcontent\">\n          <p>支付宝</p>\n          <p>微信</p>\n        </div>\n      </div>\n  </div>\n</template>\n<script>\nimport url from '../assets/images/money.png'\n  export default {\n    name: 'Reward',\n    data() {\n      return {\n        picUrl: url,\n        isShow:false\n      }\n    },\n    methods:{\n        mouseOver(){\n            this.isShow = true\n            console.log(\"hhh\");\n        },\n        mouseLeave(){\n            this.isShow = false\n        }\n    }\n  };\n</script>\n<style lang=\"scss\">\n@import \"../assets/css/base.scss\";\n@import \"../assets/css/mixin.scss\";\n@import \"../assets/css/variable.scss\";\n.button{\n    width: 40px;\n    height: 40px;\n    border-radius: 50%;\n    @include font_active_color();\n    border: 1px solid #000;\n    @include border_color();\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    cursor: pointer;\n}\n.pic img{\n    margin-top: 10px;\n    width: 350px;\n}\n.imgcontent{\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  width: 100%;\n  p{\n    margin: 0;\n  }\n}\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Reward.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Reward.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Reward.vue?vue&type=template&id=12fa0f4e&\"\nimport script from \"./Reward.vue?vue&type=script&lang=js&\"\nexport * from \"./Reward.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Reward.vue?vue&type=style&index=0&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\n  <div class=\"show animate__animated animate__bounceIn\">\n    <div class=\"detail\">\n      <!-- 文章详情 -->\n      <article class=\"markdown-body\" style=\"margin: 30px auto\">\n        <div class=\"title\">\n          <!-- 标题 -->\n          <h1>{{ art.title }}</h1>\n          <ul>\n            <li>\n              <i class=\"el-icon-user-solid\"></i>\n              <p>{{ art.author }}</p>\n            </li>\n            <li>\n              <i class=\"el-icon-date\"></i>\n              <p>{{ art.updatedAt }}</p>\n            </li>\n            <li>\n              <i class=\"el-icon-view\"></i>\n              <p>{{ art.views }}</p>\n            </li>\n            <li>\n              <i class=\"el-icon-s-management\"></i>\n              <p>{{ art.classify }}</p>\n            </li>\n          </ul>\n        </div>\n\n        <!-- 标签也可以被渲染 文章具体内容-->\n        <div v-html=\"content\" style=\"margin-top: 30px\"></div>\n      </article>\n      <!-- 赏 -->\n      <!-- <div class=\"reward\">\n        <Reward></Reward>\n      </div> -->\n      <p style=\"font-size: 20px\">评论区</p>\n      <!-- 留言板 -->\n      <MegBox :list=\"megContent\" :type=\"id\" />\n    </div>\n  </div>\n</template>\n\n<script>\nimport MegBox from \"../components/MegBox\";\n// 赏\nimport Reward from \"../components/Reward\";\nimport { getArt, getMessage } from \"../api/index\";\n// main.js\nimport { highlightCode } from \"../main\"\n\nexport default {\n  data() {\n    return {\n      // 文章信息，不包括content\n      art: {},\n      // 内容\n      content: \"\",\n      // 留言内容\n      megContent: [],\n      // 文章的id\n      id: \"\",\n    };\n  },\n  components: {\n    MegBox,\n    Reward\n  },\n  created() {\n    // 获取文章\n    this.id = this.$route.query.id;\n    getArt(this.id)\n      .then((data) => {\n        this.art = data.data[0];\n        var MarkdownIt = require(\"markdown-it\"),\n          md = new MarkdownIt();\n        this.content = md.render(this.art.content);\n        console.log(\"ShowArt文章：\", this.art);\n\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n    //获取留言 \n    getMessage(this.id)\n      .then((res) => {\n        console.log('获取文章对应的留言', res.data);\n        this.megContent = res.data;\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  },\n  mounted() {\n    highlightCode();\n\n  },\n  updated() {\n    highlightCode();\n  },\n};\n</script>\n<style lang=\"scss\">\n@import '../assets/css/base.scss';\n@import '../assets/css/mixin.scss';\n@import '../assets/css/variable.scss';\n\n.show {\n  width: 100%;\n  height: auto;\n  margin-top: 20px;\n}\n.detail {\n  width: 80%;\n  min-height: 300px;\n  margin: 0 auto;\n  @include font_color();\n  @include bg_color();\n  padding: 10px;\n  position: relative;\n  .title {\n    margin-bottom: 10px;\n    ul {\n      width: 400px;\n      display: flex;\n      justify-content: space-between;\n      margin: 0 auto;\n      padding: 0;\n      li {\n        display: flex;\n        align-items: center;\n        p {\n          margin: 0;\n          margin-left: 5px;\n        }\n      }\n    }\n    h1 {\n      width: 100%;\n      text-align: center;\n      margin: 0;\n      padding: 0;\n      border: none;\n    }\n  }\n}\n.markdown-body {\n  box-sizing: border-box;\n  min-width: 200px;\n  max-width: 980px;\n  margin: 0 auto;\n  padding: 45px;\n  @include font_color();\n  font-size: 15px;\n  h2 {\n    border: none;\n  }\n}\n.markdown-body pre,\ncode {\n  @include bg_app_color();\n}\n@media (max-width: 767px) {\n  .markdown-body {\n    padding: 10px;\n  }\n  .detail .title ul {\n    display: block;\n  }\n  .detail {\n    width: 95%;\n  }\n}\n.reward {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  padding-bottom: 10px;\n}\n.judge {\n  width: 100%;\n  position: absolute;\n  left: 0;\n  bottom: -20px;\n  padding-left: 10px;\n  @include font_color();\n  @include bg_color();\n}\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ShowArt.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ShowArt.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ShowArt.vue?vue&type=template&id=23260d89&\"\nimport script from \"./ShowArt.vue?vue&type=script&lang=js&\"\nexport * from \"./ShowArt.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ShowArt.vue?vue&type=style&index=0&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","// Process autolinks '<protocol:...>'\n\n'use strict';\n\n\n/*eslint max-len:0*/\nvar EMAIL_RE    = /^([a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)$/;\nvar AUTOLINK_RE = /^([a-zA-Z][a-zA-Z0-9+.\\-]{1,31}):([^<>\\x00-\\x20]*)$/;\n\n\nmodule.exports = function autolink(state, silent) {\n  var url, fullUrl, token, ch, start, max,\n      pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }\n\n  start = state.pos;\n  max = state.posMax;\n\n  for (;;) {\n    if (++pos >= max) return false;\n\n    ch = state.src.charCodeAt(pos);\n\n    if (ch === 0x3C /* < */) return false;\n    if (ch === 0x3E /* > */) break;\n  }\n\n  url = state.src.slice(start + 1, pos);\n\n  if (AUTOLINK_RE.test(url)) {\n    fullUrl = state.md.normalizeLink(url);\n    if (!state.md.validateLink(fullUrl)) { return false; }\n\n    if (!silent) {\n      token         = state.push('link_open', 'a', 1);\n      token.attrs   = [ [ 'href', fullUrl ] ];\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n\n      token         = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n\n      token         = state.push('link_close', 'a', -1);\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n    }\n\n    state.pos += url.length + 2;\n    return true;\n  }\n\n  if (EMAIL_RE.test(url)) {\n    fullUrl = state.md.normalizeLink('mailto:' + url);\n    if (!state.md.validateLink(fullUrl)) { return false; }\n\n    if (!silent) {\n      token         = state.push('link_open', 'a', 1);\n      token.attrs   = [ [ 'href', fullUrl ] ];\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n\n      token         = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n\n      token         = state.push('link_close', 'a', -1);\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n    }\n\n    state.pos += url.length + 2;\n    return true;\n  }\n\n  return false;\n};\n","'use strict';\n\n\nmodule.exports = function block(state) {\n  var token;\n\n  if (state.inlineMode) {\n    token          = new state.Token('inline', '', 0);\n    token.content  = state.src;\n    token.map      = [ 0, 1 ];\n    token.children = [];\n    state.tokens.push(token);\n  } else {\n    state.md.block.parse(state.src, state.md, state.env, state.tokens);\n  }\n};\n","// Proceess '\\n'\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function newline(state, silent) {\n  var pmax, max, ws, pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x0A/* \\n */) { return false; }\n\n  pmax = state.pending.length - 1;\n  max = state.posMax;\n\n  // '  \\n' -> hardbreak\n  // Lookup in pending chars is bad practice! Don't copy to other rules!\n  // Pending string is stored in concat mode, indexed lookups will cause\n  // convertion to flat mode.\n  if (!silent) {\n    if (pmax >= 0 && state.pending.charCodeAt(pmax) === 0x20) {\n      if (pmax >= 1 && state.pending.charCodeAt(pmax - 1) === 0x20) {\n        // Find whitespaces tail of pending chars.\n        ws = pmax - 1;\n        while (ws >= 1 && state.pending.charCodeAt(ws - 1) === 0x20) ws--;\n\n        state.pending = state.pending.slice(0, ws);\n        state.push('hardbreak', 'br', 0);\n      } else {\n        state.pending = state.pending.slice(0, -1);\n        state.push('softbreak', 'br', 0);\n      }\n\n    } else {\n      state.push('softbreak', 'br', 0);\n    }\n  }\n\n  pos++;\n\n  // skip heading spaces for next line\n  while (pos < max && isSpace(state.src.charCodeAt(pos))) { pos++; }\n\n  state.pos = pos;\n  return true;\n};\n","// Commonmark default options\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         true,         // Enable HTML tags in source\n    xhtmlOut:     true,         // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   20            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline'\n      ]\n    },\n\n    block: {\n      rules: [\n        'blockquote',\n        'code',\n        'fence',\n        'heading',\n        'hr',\n        'html_block',\n        'lheading',\n        'list',\n        'reference',\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'autolink',\n        'backticks',\n        'emphasis',\n        'entity',\n        'escape',\n        'html_inline',\n        'image',\n        'link',\n        'newline',\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'emphasis',\n        'text_collapse'\n      ]\n    }\n  }\n};\n","\n'use strict';\n\n\nmodule.exports = function format(url) {\n  var result = '';\n\n  result += url.protocol || '';\n  result += url.slashes ? '//' : '';\n  result += url.auth ? url.auth + '@' : '';\n\n  if (url.hostname && url.hostname.indexOf(':') !== -1) {\n    // ipv6 address\n    result += '[' + url.hostname + ']';\n  } else {\n    result += url.hostname || '';\n  }\n\n  result += url.port ? ':' + url.port : '';\n  result += url.pathname || '';\n  result += url.search || '';\n  result += url.hash || '';\n\n  return result;\n};\n","// Paragraph\n\n'use strict';\n\n\nmodule.exports = function paragraph(state, startLine/*, endLine*/) {\n  var content, terminate, i, l, token, oldParentType,\n      nextLine = startLine + 1,\n      terminatorRules = state.md.block.ruler.getRules('paragraph'),\n      endLine = state.lineMax;\n\n  oldParentType = state.parentType;\n  state.parentType = 'paragraph';\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n\n  state.line = nextLine;\n\n  token          = state.push('paragraph_open', 'p', 1);\n  token.map      = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = content;\n  token.map      = [ startLine, state.line ];\n  token.children = [];\n\n  token          = state.push('paragraph_close', 'p', -1);\n\n  state.parentType = oldParentType;\n\n  return true;\n};\n","/**\n * class Ruler\n *\n * Helper class, used by [[MarkdownIt#core]], [[MarkdownIt#block]] and\n * [[MarkdownIt#inline]] to manage sequences of functions (rules):\n *\n * - keep rules in defined order\n * - assign the name to each rule\n * - enable/disable rules\n * - add/replace rules\n * - allow assign rules to additional named chains (in the same)\n * - cacheing lists of active rules\n *\n * You will not need use this class directly until write plugins. For simple\n * rules control use [[MarkdownIt.disable]], [[MarkdownIt.enable]] and\n * [[MarkdownIt.use]].\n **/\n'use strict';\n\n\n/**\n * new Ruler()\n **/\nfunction Ruler() {\n  // List of added rules. Each element is:\n  //\n  // {\n  //   name: XXX,\n  //   enabled: Boolean,\n  //   fn: Function(),\n  //   alt: [ name2, name3 ]\n  // }\n  //\n  this.__rules__ = [];\n\n  // Cached rule chains.\n  //\n  // First level - chain name, '' for default.\n  // Second level - diginal anchor for fast filtering by charcodes.\n  //\n  this.__cache__ = null;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// Helper methods, should not be used directly\n\n\n// Find rule index by name\n//\nRuler.prototype.__find__ = function (name) {\n  for (var i = 0; i < this.__rules__.length; i++) {\n    if (this.__rules__[i].name === name) {\n      return i;\n    }\n  }\n  return -1;\n};\n\n\n// Build rules lookup cache\n//\nRuler.prototype.__compile__ = function () {\n  var self = this;\n  var chains = [ '' ];\n\n  // collect unique names\n  self.__rules__.forEach(function (rule) {\n    if (!rule.enabled) { return; }\n\n    rule.alt.forEach(function (altName) {\n      if (chains.indexOf(altName) < 0) {\n        chains.push(altName);\n      }\n    });\n  });\n\n  self.__cache__ = {};\n\n  chains.forEach(function (chain) {\n    self.__cache__[chain] = [];\n    self.__rules__.forEach(function (rule) {\n      if (!rule.enabled) { return; }\n\n      if (chain && rule.alt.indexOf(chain) < 0) { return; }\n\n      self.__cache__[chain].push(rule.fn);\n    });\n  });\n};\n\n\n/**\n * Ruler.at(name, fn [, options])\n * - name (String): rule name to replace.\n * - fn (Function): new rule function.\n * - options (Object): new rule options (not mandatory).\n *\n * Replace rule by name with new function & options. Throws error if name not\n * found.\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * Replace existing typographer replacement rule with new one:\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.at('replacements', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.at = function (name, fn, options) {\n  var index = this.__find__(name);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + name); }\n\n  this.__rules__[index].fn = fn;\n  this.__rules__[index].alt = opt.alt || [];\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.before(beforeName, ruleName, fn [, options])\n * - beforeName (String): new rule will be added before this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain before one with given name. See also\n * [[Ruler.after]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.block.ruler.before('paragraph', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.before = function (beforeName, ruleName, fn, options) {\n  var index = this.__find__(beforeName);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + beforeName); }\n\n  this.__rules__.splice(index, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.after(afterName, ruleName, fn [, options])\n * - afterName (String): new rule will be added after this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain after one with given name. See also\n * [[Ruler.before]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.inline.ruler.after('text', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.after = function (afterName, ruleName, fn, options) {\n  var index = this.__find__(afterName);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + afterName); }\n\n  this.__rules__.splice(index + 1, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n/**\n * Ruler.push(ruleName, fn [, options])\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Push new rule to the end of chain. See also\n * [[Ruler.before]], [[Ruler.after]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.push('my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.push = function (ruleName, fn, options) {\n  var opt = options || {};\n\n  this.__rules__.push({\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.enable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to enable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.disable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.enable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  var result = [];\n\n  // Search by name and enable\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return; }\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n    this.__rules__[idx].enabled = true;\n    result.push(name);\n  }, this);\n\n  this.__cache__ = null;\n  return result;\n};\n\n\n/**\n * Ruler.enableOnly(list [, ignoreInvalid])\n * - list (String|Array): list of rule names to enable (whitelist).\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names, and disable everything else. If any rule name\n * not found - throw Error. Errors can be disabled by second param.\n *\n * See also [[Ruler.disable]], [[Ruler.enable]].\n **/\nRuler.prototype.enableOnly = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  this.__rules__.forEach(function (rule) { rule.enabled = false; });\n\n  this.enable(list, ignoreInvalid);\n};\n\n\n/**\n * Ruler.disable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Disable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.enable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.disable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  var result = [];\n\n  // Search by name and disable\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return; }\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n    this.__rules__[idx].enabled = false;\n    result.push(name);\n  }, this);\n\n  this.__cache__ = null;\n  return result;\n};\n\n\n/**\n * Ruler.getRules(chainName) -> Array\n *\n * Return array of active functions (rules) for given chain name. It analyzes\n * rules configuration, compiles caches if not exists and returns result.\n *\n * Default chain name is `''` (empty string). It can't be skipped. That's\n * done intentionally, to keep signature monomorphic for high speed.\n **/\nRuler.prototype.getRules = function (chainName) {\n  if (this.__cache__ === null) {\n    this.__compile__();\n  }\n\n  // Chain can be empty, if rules disabled. But we still have to return Array.\n  return this.__cache__[chainName] || [];\n};\n\nmodule.exports = Ruler;\n","// Parse backticks\n\n'use strict';\n\n\nmodule.exports = function backtick(state, silent) {\n  var start, max, marker, token, matchStart, matchEnd, openerLength, closerLength,\n      pos = state.pos,\n      ch = state.src.charCodeAt(pos);\n\n  if (ch !== 0x60/* ` */) { return false; }\n\n  start = pos;\n  pos++;\n  max = state.posMax;\n\n  // scan marker length\n  while (pos < max && state.src.charCodeAt(pos) === 0x60/* ` */) { pos++; }\n\n  marker = state.src.slice(start, pos);\n  openerLength = marker.length;\n\n  if (state.backticksScanned && (state.backticks[openerLength] || 0) <= start) {\n    if (!silent) state.pending += marker;\n    state.pos += openerLength;\n    return true;\n  }\n\n  matchStart = matchEnd = pos;\n\n  // Nothing found in the cache, scan until the end of the line (or until marker is found)\n  while ((matchStart = state.src.indexOf('`', matchEnd)) !== -1) {\n    matchEnd = matchStart + 1;\n\n    // scan marker length\n    while (matchEnd < max && state.src.charCodeAt(matchEnd) === 0x60/* ` */) { matchEnd++; }\n\n    closerLength = matchEnd - matchStart;\n\n    if (closerLength === openerLength) {\n      // Found matching closer length.\n      if (!silent) {\n        token     = state.push('code_inline', 'code', 0);\n        token.markup  = marker;\n        token.content = state.src.slice(pos, matchStart)\n          .replace(/\\n/g, ' ')\n          .replace(/^ (.+) $/, '$1');\n      }\n      state.pos = matchEnd;\n      return true;\n    }\n\n    // Some different length found, put it in cache as upper limit of where closer can be found\n    state.backticks[closerLength] = matchStart;\n  }\n\n  // Scanned through the end, didn't find anything\n  state.backticksScanned = true;\n\n  if (!silent) state.pending += marker;\n  state.pos += openerLength;\n  return true;\n};\n","// Lists\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\n// Search `[-+*][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipBulletListMarker(state, startLine) {\n  var marker, pos, max, ch;\n\n  pos = state.bMarks[startLine] + state.tShift[startLine];\n  max = state.eMarks[startLine];\n\n  marker = state.src.charCodeAt(pos++);\n  // Check bullet\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x2B/* + */) {\n    return -1;\n  }\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      // \" -test \" - is not a list item\n      return -1;\n    }\n  }\n\n  return pos;\n}\n\n// Search `\\d+[.)][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipOrderedListMarker(state, startLine) {\n  var ch,\n      start = state.bMarks[startLine] + state.tShift[startLine],\n      pos = start,\n      max = state.eMarks[startLine];\n\n  // List marker should have at least 2 chars (digit + dot)\n  if (pos + 1 >= max) { return -1; }\n\n  ch = state.src.charCodeAt(pos++);\n\n  if (ch < 0x30/* 0 */ || ch > 0x39/* 9 */) { return -1; }\n\n  for (;;) {\n    // EOL -> fail\n    if (pos >= max) { return -1; }\n\n    ch = state.src.charCodeAt(pos++);\n\n    if (ch >= 0x30/* 0 */ && ch <= 0x39/* 9 */) {\n\n      // List marker should have no more than 9 digits\n      // (prevents integer overflow in browsers)\n      if (pos - start >= 10) { return -1; }\n\n      continue;\n    }\n\n    // found valid marker\n    if (ch === 0x29/* ) */ || ch === 0x2e/* . */) {\n      break;\n    }\n\n    return -1;\n  }\n\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      // \" 1.test \" - is not a list item\n      return -1;\n    }\n  }\n  return pos;\n}\n\nfunction markTightParagraphs(state, idx) {\n  var i, l,\n      level = state.level + 2;\n\n  for (i = idx + 2, l = state.tokens.length - 2; i < l; i++) {\n    if (state.tokens[i].level === level && state.tokens[i].type === 'paragraph_open') {\n      state.tokens[i + 2].hidden = true;\n      state.tokens[i].hidden = true;\n      i += 2;\n    }\n  }\n}\n\n\nmodule.exports = function list(state, startLine, endLine, silent) {\n  var ch,\n      contentStart,\n      i,\n      indent,\n      indentAfterMarker,\n      initial,\n      isOrdered,\n      itemLines,\n      l,\n      listLines,\n      listTokIdx,\n      markerCharCode,\n      markerValue,\n      max,\n      nextLine,\n      offset,\n      oldListIndent,\n      oldParentType,\n      oldSCount,\n      oldTShift,\n      oldTight,\n      pos,\n      posAfterMarker,\n      prevEmptyEnd,\n      start,\n      terminate,\n      terminatorRules,\n      token,\n      isTerminatingParagraph = false,\n      tight = true;\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  // Special case:\n  //  - item 1\n  //   - item 2\n  //    - item 3\n  //     - item 4\n  //      - this one is a paragraph continuation\n  if (state.listIndent >= 0 &&\n      state.sCount[startLine] - state.listIndent >= 4 &&\n      state.sCount[startLine] < state.blkIndent) {\n    return false;\n  }\n\n  // limit conditions when list can interrupt\n  // a paragraph (validation mode only)\n  if (silent && state.parentType === 'paragraph') {\n    // Next list item should still terminate previous list item;\n    //\n    // This code can fail if plugins use blkIndent as well as lists,\n    // but I hope the spec gets fixed long before that happens.\n    //\n    if (state.sCount[startLine] >= state.blkIndent) {\n      isTerminatingParagraph = true;\n    }\n  }\n\n  // Detect list type and position after marker\n  if ((posAfterMarker = skipOrderedListMarker(state, startLine)) >= 0) {\n    isOrdered = true;\n    start = state.bMarks[startLine] + state.tShift[startLine];\n    markerValue = Number(state.src.slice(start, posAfterMarker - 1));\n\n    // If we're starting a new ordered list right after\n    // a paragraph, it should start with 1.\n    if (isTerminatingParagraph && markerValue !== 1) return false;\n\n  } else if ((posAfterMarker = skipBulletListMarker(state, startLine)) >= 0) {\n    isOrdered = false;\n\n  } else {\n    return false;\n  }\n\n  // If we're starting a new unordered list right after\n  // a paragraph, first line should not be empty.\n  if (isTerminatingParagraph) {\n    if (state.skipSpaces(posAfterMarker) >= state.eMarks[startLine]) return false;\n  }\n\n  // We should terminate list on style change. Remember first one to compare.\n  markerCharCode = state.src.charCodeAt(posAfterMarker - 1);\n\n  // For validation mode we can terminate immediately\n  if (silent) { return true; }\n\n  // Start list\n  listTokIdx = state.tokens.length;\n\n  if (isOrdered) {\n    token       = state.push('ordered_list_open', 'ol', 1);\n    if (markerValue !== 1) {\n      token.attrs = [ [ 'start', markerValue ] ];\n    }\n\n  } else {\n    token       = state.push('bullet_list_open', 'ul', 1);\n  }\n\n  token.map    = listLines = [ startLine, 0 ];\n  token.markup = String.fromCharCode(markerCharCode);\n\n  //\n  // Iterate list items\n  //\n\n  nextLine = startLine;\n  prevEmptyEnd = false;\n  terminatorRules = state.md.block.ruler.getRules('list');\n\n  oldParentType = state.parentType;\n  state.parentType = 'list';\n\n  while (nextLine < endLine) {\n    pos = posAfterMarker;\n    max = state.eMarks[nextLine];\n\n    initial = offset = state.sCount[nextLine] + posAfterMarker - (state.bMarks[startLine] + state.tShift[startLine]);\n\n    while (pos < max) {\n      ch = state.src.charCodeAt(pos);\n\n      if (ch === 0x09) {\n        offset += 4 - (offset + state.bsCount[nextLine]) % 4;\n      } else if (ch === 0x20) {\n        offset++;\n      } else {\n        break;\n      }\n\n      pos++;\n    }\n\n    contentStart = pos;\n\n    if (contentStart >= max) {\n      // trimming space in \"-    \\n  3\" case, indent is 1 here\n      indentAfterMarker = 1;\n    } else {\n      indentAfterMarker = offset - initial;\n    }\n\n    // If we have more than 4 spaces, the indent is 1\n    // (the rest is just indented code block)\n    if (indentAfterMarker > 4) { indentAfterMarker = 1; }\n\n    // \"  -  test\"\n    //  ^^^^^ - calculating total length of this thing\n    indent = initial + indentAfterMarker;\n\n    // Run subparser & write tokens\n    token        = state.push('list_item_open', 'li', 1);\n    token.markup = String.fromCharCode(markerCharCode);\n    token.map    = itemLines = [ startLine, 0 ];\n    if (isOrdered) {\n      token.info = state.src.slice(start, posAfterMarker - 1);\n    }\n\n    // change current state, then restore it after parser subcall\n    oldTight = state.tight;\n    oldTShift = state.tShift[startLine];\n    oldSCount = state.sCount[startLine];\n\n    //  - example list\n    // ^ listIndent position will be here\n    //   ^ blkIndent position will be here\n    //\n    oldListIndent = state.listIndent;\n    state.listIndent = state.blkIndent;\n    state.blkIndent = indent;\n\n    state.tight = true;\n    state.tShift[startLine] = contentStart - state.bMarks[startLine];\n    state.sCount[startLine] = offset;\n\n    if (contentStart >= max && state.isEmpty(startLine + 1)) {\n      // workaround for this case\n      // (list item is empty, list terminates before \"foo\"):\n      // ~~~~~~~~\n      //   -\n      //\n      //     foo\n      // ~~~~~~~~\n      state.line = Math.min(state.line + 2, endLine);\n    } else {\n      state.md.block.tokenize(state, startLine, endLine, true);\n    }\n\n    // If any of list item is tight, mark list as tight\n    if (!state.tight || prevEmptyEnd) {\n      tight = false;\n    }\n    // Item become loose if finish with empty line,\n    // but we should filter last element, because it means list finish\n    prevEmptyEnd = (state.line - startLine) > 1 && state.isEmpty(state.line - 1);\n\n    state.blkIndent = state.listIndent;\n    state.listIndent = oldListIndent;\n    state.tShift[startLine] = oldTShift;\n    state.sCount[startLine] = oldSCount;\n    state.tight = oldTight;\n\n    token        = state.push('list_item_close', 'li', -1);\n    token.markup = String.fromCharCode(markerCharCode);\n\n    nextLine = startLine = state.line;\n    itemLines[1] = nextLine;\n    contentStart = state.bMarks[startLine];\n\n    if (nextLine >= endLine) { break; }\n\n    //\n    // Try to check if list is terminated or continued.\n    //\n    if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n    // if it's indented more than 3 spaces, it should be a code block\n    if (state.sCount[startLine] - state.blkIndent >= 4) { break; }\n\n    // fail if terminating block found\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n\n    // fail if list has another type\n    if (isOrdered) {\n      posAfterMarker = skipOrderedListMarker(state, nextLine);\n      if (posAfterMarker < 0) { break; }\n      start = state.bMarks[nextLine] + state.tShift[nextLine];\n    } else {\n      posAfterMarker = skipBulletListMarker(state, nextLine);\n      if (posAfterMarker < 0) { break; }\n    }\n\n    if (markerCharCode !== state.src.charCodeAt(posAfterMarker - 1)) { break; }\n  }\n\n  // Finalize list\n  if (isOrdered) {\n    token = state.push('ordered_list_close', 'ol', -1);\n  } else {\n    token = state.push('bullet_list_close', 'ul', -1);\n  }\n  token.markup = String.fromCharCode(markerCharCode);\n\n  listLines[1] = nextLine;\n  state.line = nextLine;\n\n  state.parentType = oldParentType;\n\n  // mark paragraphs tight if needed\n  if (tight) {\n    markTightParagraphs(state, listTokIdx);\n  }\n\n  return true;\n};\n","// Normalize input string\n\n'use strict';\n\n\n// https://spec.commonmark.org/0.29/#line-ending\nvar NEWLINES_RE  = /\\r\\n?|\\n/g;\nvar NULL_RE      = /\\0/g;\n\n\nmodule.exports = function normalize(state) {\n  var str;\n\n  // Normalize newlines\n  str = state.src.replace(NEWLINES_RE, '\\n');\n\n  // Replace NULL characters\n  str = str.replace(NULL_RE, '\\uFFFD');\n\n  state.src = str;\n};\n","/** internal\n * class ParserInline\n *\n * Tokenizes paragraph content.\n **/\n'use strict';\n\n\nvar Ruler           = require('./ruler');\n\n\n////////////////////////////////////////////////////////////////////////////////\n// Parser rules\n\nvar _rules = [\n  [ 'text',            require('./rules_inline/text') ],\n  [ 'newline',         require('./rules_inline/newline') ],\n  [ 'escape',          require('./rules_inline/escape') ],\n  [ 'backticks',       require('./rules_inline/backticks') ],\n  [ 'strikethrough',   require('./rules_inline/strikethrough').tokenize ],\n  [ 'emphasis',        require('./rules_inline/emphasis').tokenize ],\n  [ 'link',            require('./rules_inline/link') ],\n  [ 'image',           require('./rules_inline/image') ],\n  [ 'autolink',        require('./rules_inline/autolink') ],\n  [ 'html_inline',     require('./rules_inline/html_inline') ],\n  [ 'entity',          require('./rules_inline/entity') ]\n];\n\nvar _rules2 = [\n  [ 'balance_pairs',   require('./rules_inline/balance_pairs') ],\n  [ 'strikethrough',   require('./rules_inline/strikethrough').postProcess ],\n  [ 'emphasis',        require('./rules_inline/emphasis').postProcess ],\n  [ 'text_collapse',   require('./rules_inline/text_collapse') ]\n];\n\n\n/**\n * new ParserInline()\n **/\nfunction ParserInline() {\n  var i;\n\n  /**\n   * ParserInline#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of inline rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n\n  /**\n   * ParserInline#ruler2 -> Ruler\n   *\n   * [[Ruler]] instance. Second ruler used for post-processing\n   * (e.g. in emphasis-like rules).\n   **/\n  this.ruler2 = new Ruler();\n\n  for (i = 0; i < _rules2.length; i++) {\n    this.ruler2.push(_rules2[i][0], _rules2[i][1]);\n  }\n}\n\n\n// Skip single token by running all rules in validation mode;\n// returns `true` if any rule reported success\n//\nParserInline.prototype.skipToken = function (state) {\n  var ok, i, pos = state.pos,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      maxNesting = state.md.options.maxNesting,\n      cache = state.cache;\n\n\n  if (typeof cache[pos] !== 'undefined') {\n    state.pos = cache[pos];\n    return;\n  }\n\n  if (state.level < maxNesting) {\n    for (i = 0; i < len; i++) {\n      // Increment state.level and decrement it later to limit recursion.\n      // It's harmless to do here, because no tokens are created. But ideally,\n      // we'd need a separate private state variable for this purpose.\n      //\n      state.level++;\n      ok = rules[i](state, true);\n      state.level--;\n\n      if (ok) { break; }\n    }\n  } else {\n    // Too much nesting, just skip until the end of the paragraph.\n    //\n    // NOTE: this will cause links to behave incorrectly in the following case,\n    //       when an amount of `[` is exactly equal to `maxNesting + 1`:\n    //\n    //       [[[[[[[[[[[[[[[[[[[[[foo]()\n    //\n    // TODO: remove this workaround when CM standard will allow nested links\n    //       (we can replace it by preventing links from being parsed in\n    //       validation mode)\n    //\n    state.pos = state.posMax;\n  }\n\n  if (!ok) { state.pos++; }\n  cache[pos] = state.pos;\n};\n\n\n// Generate tokens for input range\n//\nParserInline.prototype.tokenize = function (state) {\n  var ok, i,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      end = state.posMax,\n      maxNesting = state.md.options.maxNesting;\n\n  while (state.pos < end) {\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.pos`\n    // - update `state.tokens`\n    // - return true\n\n    if (state.level < maxNesting) {\n      for (i = 0; i < len; i++) {\n        ok = rules[i](state, false);\n        if (ok) { break; }\n      }\n    }\n\n    if (ok) {\n      if (state.pos >= end) { break; }\n      continue;\n    }\n\n    state.pending += state.src[state.pos++];\n  }\n\n  if (state.pending) {\n    state.pushPending();\n  }\n};\n\n\n/**\n * ParserInline.parse(str, md, env, outTokens)\n *\n * Process input string and push inline tokens into `outTokens`\n **/\nParserInline.prototype.parse = function (str, md, env, outTokens) {\n  var i, rules, len;\n  var state = new this.State(str, md, env, outTokens);\n\n  this.tokenize(state);\n\n  rules = this.ruler2.getRules('');\n  len = rules.length;\n\n  for (i = 0; i < len; i++) {\n    rules[i](state);\n  }\n};\n\n\nParserInline.prototype.State = require('./rules_inline/state_inline');\n\n\nmodule.exports = ParserInline;\n","module.exports=/[ \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000]/","// Just a shortcut for bulk export\n'use strict';\n\n\nexports.parseLinkLabel       = require('./parse_link_label');\nexports.parseLinkDestination = require('./parse_link_destination');\nexports.parseLinkTitle       = require('./parse_link_title');\n","// Regexps to match html elements\n\n'use strict';\n\nvar attr_name     = '[a-zA-Z_:][a-zA-Z0-9:._-]*';\n\nvar unquoted      = '[^\"\\'=<>`\\\\x00-\\\\x20]+';\nvar single_quoted = \"'[^']*'\";\nvar double_quoted = '\"[^\"]*\"';\n\nvar attr_value  = '(?:' + unquoted + '|' + single_quoted + '|' + double_quoted + ')';\n\nvar attribute   = '(?:\\\\s+' + attr_name + '(?:\\\\s*=\\\\s*' + attr_value + ')?)';\n\nvar open_tag    = '<[A-Za-z][A-Za-z0-9\\\\-]*' + attribute + '*\\\\s*\\\\/?>';\n\nvar close_tag   = '<\\\\/[A-Za-z][A-Za-z0-9\\\\-]*\\\\s*>';\nvar comment     = '<!---->|<!--(?:-?[^>-])(?:-?[^-])*-->';\nvar processing  = '<[?][\\\\s\\\\S]*?[?]>';\nvar declaration = '<![A-Z]+\\\\s+[^>]*>';\nvar cdata       = '<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>';\n\nvar HTML_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + '|' + comment +\n                        '|' + processing + '|' + declaration + '|' + cdata + ')');\nvar HTML_OPEN_CLOSE_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + ')');\n\nmodule.exports.HTML_TAG_RE = HTML_TAG_RE;\nmodule.exports.HTML_OPEN_CLOSE_TAG_RE = HTML_OPEN_CLOSE_TAG_RE;\n","// Process html entity - &#123;, &#xAF;, &quot;, ...\n\n'use strict';\n\nvar entities          = require('../common/entities');\nvar has               = require('../common/utils').has;\nvar isValidEntityCode = require('../common/utils').isValidEntityCode;\nvar fromCodePoint     = require('../common/utils').fromCodePoint;\n\n\nvar DIGITAL_RE = /^&#((?:x[a-f0-9]{1,6}|[0-9]{1,7}));/i;\nvar NAMED_RE   = /^&([a-z][a-z0-9]{1,31});/i;\n\n\nmodule.exports = function entity(state, silent) {\n  var ch, code, match, pos = state.pos, max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x26/* & */) { return false; }\n\n  if (pos + 1 < max) {\n    ch = state.src.charCodeAt(pos + 1);\n\n    if (ch === 0x23 /* # */) {\n      match = state.src.slice(pos).match(DIGITAL_RE);\n      if (match) {\n        if (!silent) {\n          code = match[1][0].toLowerCase() === 'x' ? parseInt(match[1].slice(1), 16) : parseInt(match[1], 10);\n          state.pending += isValidEntityCode(code) ? fromCodePoint(code) : fromCodePoint(0xFFFD);\n        }\n        state.pos += match[0].length;\n        return true;\n      }\n    } else {\n      match = state.src.slice(pos).match(NAMED_RE);\n      if (match) {\n        if (has(entities, match[1])) {\n          if (!silent) { state.pending += entities[match[1]]; }\n          state.pos += match[0].length;\n          return true;\n        }\n      }\n    }\n  }\n\n  if (!silent) { state.pending += '&'; }\n  state.pos++;\n  return true;\n};\n","// HTML block\n\n'use strict';\n\n\nvar block_names = require('../common/html_blocks');\nvar HTML_OPEN_CLOSE_TAG_RE = require('../common/html_re').HTML_OPEN_CLOSE_TAG_RE;\n\n// An array of opening and corresponding closing sequences for html tags,\n// last argument defines whether it can terminate a paragraph or not\n//\nvar HTML_SEQUENCES = [\n  [ /^<(script|pre|style|textarea)(?=(\\s|>|$))/i, /<\\/(script|pre|style|textarea)>/i, true ],\n  [ /^<!--/,        /-->/,   true ],\n  [ /^<\\?/,         /\\?>/,   true ],\n  [ /^<![A-Z]/,     />/,     true ],\n  [ /^<!\\[CDATA\\[/, /\\]\\]>/, true ],\n  [ new RegExp('^</?(' + block_names.join('|') + ')(?=(\\\\s|/?>|$))', 'i'), /^$/, true ],\n  [ new RegExp(HTML_OPEN_CLOSE_TAG_RE.source + '\\\\s*$'),  /^$/, false ]\n];\n\n\nmodule.exports = function html_block(state, startLine, endLine, silent) {\n  var i, nextLine, token, lineText,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (!state.md.options.html) { return false; }\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }\n\n  lineText = state.src.slice(pos, max);\n\n  for (i = 0; i < HTML_SEQUENCES.length; i++) {\n    if (HTML_SEQUENCES[i][0].test(lineText)) { break; }\n  }\n\n  if (i === HTML_SEQUENCES.length) { return false; }\n\n  if (silent) {\n    // true if this sequence can be a terminator, false otherwise\n    return HTML_SEQUENCES[i][2];\n  }\n\n  nextLine = startLine + 1;\n\n  // If we are here - we detected HTML block.\n  // Let's roll down till block end.\n  if (!HTML_SEQUENCES[i][1].test(lineText)) {\n    for (; nextLine < endLine; nextLine++) {\n      if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n      lineText = state.src.slice(pos, max);\n\n      if (HTML_SEQUENCES[i][1].test(lineText)) {\n        if (lineText.length !== 0) { nextLine++; }\n        break;\n      }\n    }\n  }\n\n  state.line = nextLine;\n\n  token         = state.push('html_block', '', 0);\n  token.map     = [ startLine, nextLine ];\n  token.content = state.getLines(startLine, nextLine, state.blkIndent, true);\n\n  return true;\n};\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","// Process escaped chars and hardbreaks\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\nvar ESCAPED = [];\n\nfor (var i = 0; i < 256; i++) { ESCAPED.push(0); }\n\n'\\\\!\"#$%&\\'()*+,./:;<=>?@[]^_`{|}~-'\n  .split('').forEach(function (ch) { ESCAPED[ch.charCodeAt(0)] = 1; });\n\n\nmodule.exports = function escape(state, silent) {\n  var ch, pos = state.pos, max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x5C/* \\ */) { return false; }\n\n  pos++;\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (ch < 256 && ESCAPED[ch] !== 0) {\n      if (!silent) { state.pending += state.src[pos]; }\n      state.pos += 2;\n      return true;\n    }\n\n    if (ch === 0x0A) {\n      if (!silent) {\n        state.push('hardbreak', 'br', 0);\n      }\n\n      pos++;\n      // skip leading whitespaces from next line\n      while (pos < max) {\n        ch = state.src.charCodeAt(pos);\n        if (!isSpace(ch)) { break; }\n        pos++;\n      }\n\n      state.pos = pos;\n      return true;\n    }\n  }\n\n  if (!silent) { state.pending += '\\\\'; }\n  state.pos++;\n  return true;\n};\n","module.exports=/[\\xAD\\u0600-\\u0605\\u061C\\u06DD\\u070F\\u08E2\\u180E\\u200B-\\u200F\\u202A-\\u202E\\u2060-\\u2064\\u2066-\\u206F\\uFEFF\\uFFF9-\\uFFFB]|\\uD804[\\uDCBD\\uDCCD]|\\uD82F[\\uDCA0-\\uDCA3]|\\uD834[\\uDD73-\\uDD7A]|\\uDB40[\\uDC01\\uDC20-\\uDC7F]/","// Core state object\n//\n'use strict';\n\nvar Token = require('../token');\n\n\nfunction StateCore(src, md, env) {\n  this.src = src;\n  this.env = env;\n  this.tokens = [];\n  this.inlineMode = false;\n  this.md = md; // link to parser instance\n}\n\n// re-export Token class to use in core rules\nStateCore.prototype.Token = Token;\n\n\nmodule.exports = StateCore;\n","/** internal\n * class ParserBlock\n *\n * Block-level tokenizer.\n **/\n'use strict';\n\n\nvar Ruler           = require('./ruler');\n\n\nvar _rules = [\n  // First 2 params - rule name & source. Secondary array - list of rules,\n  // which can be terminated by this one.\n  [ 'table',      require('./rules_block/table'),      [ 'paragraph', 'reference' ] ],\n  [ 'code',       require('./rules_block/code') ],\n  [ 'fence',      require('./rules_block/fence'),      [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'blockquote', require('./rules_block/blockquote'), [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'hr',         require('./rules_block/hr'),         [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'list',       require('./rules_block/list'),       [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'reference',  require('./rules_block/reference') ],\n  [ 'html_block', require('./rules_block/html_block'), [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'heading',    require('./rules_block/heading'),    [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'lheading',   require('./rules_block/lheading') ],\n  [ 'paragraph',  require('./rules_block/paragraph') ]\n];\n\n\n/**\n * new ParserBlock()\n **/\nfunction ParserBlock() {\n  /**\n   * ParserBlock#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of block rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1], { alt: (_rules[i][2] || []).slice() });\n  }\n}\n\n\n// Generate tokens for input range\n//\nParserBlock.prototype.tokenize = function (state, startLine, endLine) {\n  var ok, i,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      line = startLine,\n      hasEmptyLines = false,\n      maxNesting = state.md.options.maxNesting;\n\n  while (line < endLine) {\n    state.line = line = state.skipEmptyLines(line);\n    if (line >= endLine) { break; }\n\n    // Termination condition for nested calls.\n    // Nested calls currently used for blockquotes & lists\n    if (state.sCount[line] < state.blkIndent) { break; }\n\n    // If nesting level exceeded - skip tail to the end. That's not ordinary\n    // situation and we should not care about content.\n    if (state.level >= maxNesting) {\n      state.line = endLine;\n      break;\n    }\n\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.line`\n    // - update `state.tokens`\n    // - return true\n\n    for (i = 0; i < len; i++) {\n      ok = rules[i](state, line, endLine, false);\n      if (ok) { break; }\n    }\n\n    // set state.tight if we had an empty line before current tag\n    // i.e. latest empty line should not count\n    state.tight = !hasEmptyLines;\n\n    // paragraph might \"eat\" one newline after it in nested lists\n    if (state.isEmpty(state.line - 1)) {\n      hasEmptyLines = true;\n    }\n\n    line = state.line;\n\n    if (line < endLine && state.isEmpty(line)) {\n      hasEmptyLines = true;\n      line++;\n      state.line = line;\n    }\n  }\n};\n\n\n/**\n * ParserBlock.parse(str, md, env, outTokens)\n *\n * Process input string and push block tokens into `outTokens`\n **/\nParserBlock.prototype.parse = function (src, md, env, outTokens) {\n  var state;\n\n  if (!src) { return; }\n\n  state = new this.State(src, md, env, outTokens);\n\n  this.tokenize(state, state.line, state.lineMax);\n};\n\n\nParserBlock.prototype.State = require('./rules_block/state_block');\n\n\nmodule.exports = ParserBlock;\n","module.exports=/[!-#%-\\*,-\\/:;\\?@\\[-\\]_\\{\\}\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166D\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4E\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]|\\uD800[\\uDD00-\\uDD02\\uDF9F\\uDFD0]|\\uD801\\uDD6F|\\uD802[\\uDC57\\uDD1F\\uDD3F\\uDE50-\\uDE58\\uDE7F\\uDEF0-\\uDEF6\\uDF39-\\uDF3F\\uDF99-\\uDF9C]|\\uD803[\\uDF55-\\uDF59]|\\uD804[\\uDC47-\\uDC4D\\uDCBB\\uDCBC\\uDCBE-\\uDCC1\\uDD40-\\uDD43\\uDD74\\uDD75\\uDDC5-\\uDDC8\\uDDCD\\uDDDB\\uDDDD-\\uDDDF\\uDE38-\\uDE3D\\uDEA9]|\\uD805[\\uDC4B-\\uDC4F\\uDC5B\\uDC5D\\uDCC6\\uDDC1-\\uDDD7\\uDE41-\\uDE43\\uDE60-\\uDE6C\\uDF3C-\\uDF3E]|\\uD806[\\uDC3B\\uDE3F-\\uDE46\\uDE9A-\\uDE9C\\uDE9E-\\uDEA2]|\\uD807[\\uDC41-\\uDC45\\uDC70\\uDC71\\uDEF7\\uDEF8]|\\uD809[\\uDC70-\\uDC74]|\\uD81A[\\uDE6E\\uDE6F\\uDEF5\\uDF37-\\uDF3B\\uDF44]|\\uD81B[\\uDE97-\\uDE9A]|\\uD82F\\uDC9F|\\uD836[\\uDE87-\\uDE8B]|\\uD83A[\\uDD5E\\uDD5F]/","/**\n * class Renderer\n *\n * Generates HTML from parsed token stream. Each instance has independent\n * copy of rules. Those can be rewritten with ease. Also, you can add new\n * rules if you create plugin and adds new token types.\n **/\n'use strict';\n\n\nvar assign          = require('./common/utils').assign;\nvar unescapeAll     = require('./common/utils').unescapeAll;\nvar escapeHtml      = require('./common/utils').escapeHtml;\n\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar default_rules = {};\n\n\ndefault_rules.code_inline = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  return  '<code' + slf.renderAttrs(token) + '>' +\n          escapeHtml(tokens[idx].content) +\n          '</code>';\n};\n\n\ndefault_rules.code_block = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  return  '<pre' + slf.renderAttrs(token) + '><code>' +\n          escapeHtml(tokens[idx].content) +\n          '</code></pre>\\n';\n};\n\n\ndefault_rules.fence = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx],\n      info = token.info ? unescapeAll(token.info).trim() : '',\n      langName = '',\n      langAttrs = '',\n      highlighted, i, arr, tmpAttrs, tmpToken;\n\n  if (info) {\n    arr = info.split(/(\\s+)/g);\n    langName = arr[0];\n    langAttrs = arr.slice(2).join('');\n  }\n\n  if (options.highlight) {\n    highlighted = options.highlight(token.content, langName, langAttrs) || escapeHtml(token.content);\n  } else {\n    highlighted = escapeHtml(token.content);\n  }\n\n  if (highlighted.indexOf('<pre') === 0) {\n    return highlighted + '\\n';\n  }\n\n  // If language exists, inject class gently, without modifying original token.\n  // May be, one day we will add .deepClone() for token and simplify this part, but\n  // now we prefer to keep things local.\n  if (info) {\n    i        = token.attrIndex('class');\n    tmpAttrs = token.attrs ? token.attrs.slice() : [];\n\n    if (i < 0) {\n      tmpAttrs.push([ 'class', options.langPrefix + langName ]);\n    } else {\n      tmpAttrs[i] = tmpAttrs[i].slice();\n      tmpAttrs[i][1] += ' ' + options.langPrefix + langName;\n    }\n\n    // Fake token just to render attributes\n    tmpToken = {\n      attrs: tmpAttrs\n    };\n\n    return  '<pre><code' + slf.renderAttrs(tmpToken) + '>'\n          + highlighted\n          + '</code></pre>\\n';\n  }\n\n\n  return  '<pre><code' + slf.renderAttrs(token) + '>'\n        + highlighted\n        + '</code></pre>\\n';\n};\n\n\ndefault_rules.image = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  // \"alt\" attr MUST be set, even if empty. Because it's mandatory and\n  // should be placed on proper position for tests.\n  //\n  // Replace content with actual value\n\n  token.attrs[token.attrIndex('alt')][1] =\n    slf.renderInlineAsText(token.children, options, env);\n\n  return slf.renderToken(tokens, idx, options);\n};\n\n\ndefault_rules.hardbreak = function (tokens, idx, options /*, env */) {\n  return options.xhtmlOut ? '<br />\\n' : '<br>\\n';\n};\ndefault_rules.softbreak = function (tokens, idx, options /*, env */) {\n  return options.breaks ? (options.xhtmlOut ? '<br />\\n' : '<br>\\n') : '\\n';\n};\n\n\ndefault_rules.text = function (tokens, idx /*, options, env */) {\n  return escapeHtml(tokens[idx].content);\n};\n\n\ndefault_rules.html_block = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\ndefault_rules.html_inline = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\n\n\n/**\n * new Renderer()\n *\n * Creates new [[Renderer]] instance and fill [[Renderer#rules]] with defaults.\n **/\nfunction Renderer() {\n\n  /**\n   * Renderer#rules -> Object\n   *\n   * Contains render rules for tokens. Can be updated and extended.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * md.renderer.rules.strong_open  = function () { return '<b>'; };\n   * md.renderer.rules.strong_close = function () { return '</b>'; };\n   *\n   * var result = md.renderInline(...);\n   * ```\n   *\n   * Each rule is called as independent static function with fixed signature:\n   *\n   * ```javascript\n   * function my_token_render(tokens, idx, options, env, renderer) {\n   *   // ...\n   *   return renderedHTML;\n   * }\n   * ```\n   *\n   * See [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.js)\n   * for more details and examples.\n   **/\n  this.rules = assign({}, default_rules);\n}\n\n\n/**\n * Renderer.renderAttrs(token) -> String\n *\n * Render token attributes to string.\n **/\nRenderer.prototype.renderAttrs = function renderAttrs(token) {\n  var i, l, result;\n\n  if (!token.attrs) { return ''; }\n\n  result = '';\n\n  for (i = 0, l = token.attrs.length; i < l; i++) {\n    result += ' ' + escapeHtml(token.attrs[i][0]) + '=\"' + escapeHtml(token.attrs[i][1]) + '\"';\n  }\n\n  return result;\n};\n\n\n/**\n * Renderer.renderToken(tokens, idx, options) -> String\n * - tokens (Array): list of tokens\n * - idx (Numbed): token index to render\n * - options (Object): params of parser instance\n *\n * Default token renderer. Can be overriden by custom function\n * in [[Renderer#rules]].\n **/\nRenderer.prototype.renderToken = function renderToken(tokens, idx, options) {\n  var nextToken,\n      result = '',\n      needLf = false,\n      token = tokens[idx];\n\n  // Tight list paragraphs\n  if (token.hidden) {\n    return '';\n  }\n\n  // Insert a newline between hidden paragraph and subsequent opening\n  // block-level tag.\n  //\n  // For example, here we should insert a newline before blockquote:\n  //  - a\n  //    >\n  //\n  if (token.block && token.nesting !== -1 && idx && tokens[idx - 1].hidden) {\n    result += '\\n';\n  }\n\n  // Add token name, e.g. `<img`\n  result += (token.nesting === -1 ? '</' : '<') + token.tag;\n\n  // Encode attributes, e.g. `<img src=\"foo\"`\n  result += this.renderAttrs(token);\n\n  // Add a slash for self-closing tags, e.g. `<img src=\"foo\" /`\n  if (token.nesting === 0 && options.xhtmlOut) {\n    result += ' /';\n  }\n\n  // Check if we need to add a newline after this tag\n  if (token.block) {\n    needLf = true;\n\n    if (token.nesting === 1) {\n      if (idx + 1 < tokens.length) {\n        nextToken = tokens[idx + 1];\n\n        if (nextToken.type === 'inline' || nextToken.hidden) {\n          // Block-level tag containing an inline tag.\n          //\n          needLf = false;\n\n        } else if (nextToken.nesting === -1 && nextToken.tag === token.tag) {\n          // Opening tag + closing tag of the same type. E.g. `<li></li>`.\n          //\n          needLf = false;\n        }\n      }\n    }\n  }\n\n  result += needLf ? '>\\n' : '>';\n\n  return result;\n};\n\n\n/**\n * Renderer.renderInline(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * The same as [[Renderer.render]], but for single token of `inline` type.\n **/\nRenderer.prototype.renderInline = function (tokens, options, env) {\n  var type,\n      result = '',\n      rules = this.rules;\n\n  for (var i = 0, len = tokens.length; i < len; i++) {\n    type = tokens[i].type;\n\n    if (typeof rules[type] !== 'undefined') {\n      result += rules[type](tokens, i, options, env, this);\n    } else {\n      result += this.renderToken(tokens, i, options);\n    }\n  }\n\n  return result;\n};\n\n\n/** internal\n * Renderer.renderInlineAsText(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Special kludge for image `alt` attributes to conform CommonMark spec.\n * Don't try to use it! Spec requires to show `alt` content with stripped markup,\n * instead of simple escaping.\n **/\nRenderer.prototype.renderInlineAsText = function (tokens, options, env) {\n  var result = '';\n\n  for (var i = 0, len = tokens.length; i < len; i++) {\n    if (tokens[i].type === 'text') {\n      result += tokens[i].content;\n    } else if (tokens[i].type === 'image') {\n      result += this.renderInlineAsText(tokens[i].children, options, env);\n    } else if (tokens[i].type === 'softbreak') {\n      result += '\\n';\n    }\n  }\n\n  return result;\n};\n\n\n/**\n * Renderer.render(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Takes token stream and generates HTML. Probably, you will never need to call\n * this method directly.\n **/\nRenderer.prototype.render = function (tokens, options, env) {\n  var i, len, type,\n      result = '',\n      rules = this.rules;\n\n  for (i = 0, len = tokens.length; i < len; i++) {\n    type = tokens[i].type;\n\n    if (type === 'inline') {\n      result += this.renderInline(tokens[i].children, options, env);\n    } else if (typeof rules[type] !== 'undefined') {\n      result += rules[tokens[i].type](tokens, i, options, env, this);\n    } else {\n      result += this.renderToken(tokens, i, options, env);\n    }\n  }\n\n  return result;\n};\n\nmodule.exports = Renderer;\n","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MegBox.vue?vue&type=style&index=0&id=213481d0&scoped=true&lang=scss&\"","// Parse link title\n//\n'use strict';\n\n\nvar unescapeAll = require('../common/utils').unescapeAll;\n\n\nmodule.exports = function parseLinkTitle(str, pos, max) {\n  var code,\n      marker,\n      lines = 0,\n      start = pos,\n      result = {\n        ok: false,\n        pos: 0,\n        lines: 0,\n        str: ''\n      };\n\n  if (pos >= max) { return result; }\n\n  marker = str.charCodeAt(pos);\n\n  if (marker !== 0x22 /* \" */ && marker !== 0x27 /* ' */ && marker !== 0x28 /* ( */) { return result; }\n\n  pos++;\n\n  // if opening marker is \"(\", switch it to closing marker \")\"\n  if (marker === 0x28) { marker = 0x29; }\n\n  while (pos < max) {\n    code = str.charCodeAt(pos);\n    if (code === marker) {\n      result.pos = pos + 1;\n      result.lines = lines;\n      result.str = unescapeAll(str.slice(start + 1, pos));\n      result.ok = true;\n      return result;\n    } else if (code === 0x28 /* ( */ && marker === 0x29 /* ) */) {\n      return result;\n    } else if (code === 0x0A) {\n      lines++;\n    } else if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      pos++;\n      if (str.charCodeAt(pos) === 0x0A) {\n        lines++;\n      }\n    }\n\n    pos++;\n  }\n\n  return result;\n};\n","// GFM table, https://github.github.com/gfm/#tables-extension-\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nfunction getLine(state, line) {\n  var pos = state.bMarks[line] + state.tShift[line],\n      max = state.eMarks[line];\n\n  return state.src.substr(pos, max - pos);\n}\n\nfunction escapedSplit(str) {\n  var result = [],\n      pos = 0,\n      max = str.length,\n      ch,\n      isEscaped = false,\n      lastPos = 0,\n      current = '';\n\n  ch  = str.charCodeAt(pos);\n\n  while (pos < max) {\n    if (ch === 0x7c/* | */) {\n      if (!isEscaped) {\n        // pipe separating cells, '|'\n        result.push(current + str.substring(lastPos, pos));\n        current = '';\n        lastPos = pos + 1;\n      } else {\n        // escaped pipe, '\\|'\n        current += str.substring(lastPos, pos - 1);\n        lastPos = pos;\n      }\n    }\n\n    isEscaped = (ch === 0x5c/* \\ */);\n    pos++;\n\n    ch = str.charCodeAt(pos);\n  }\n\n  result.push(current + str.substring(lastPos));\n\n  return result;\n}\n\n\nmodule.exports = function table(state, startLine, endLine, silent) {\n  var ch, lineText, pos, i, l, nextLine, columns, columnCount, token,\n      aligns, t, tableLines, tbodyLines, oldParentType, terminate,\n      terminatorRules, firstCh, secondCh;\n\n  // should have at least two lines\n  if (startLine + 2 > endLine) { return false; }\n\n  nextLine = startLine + 1;\n\n  if (state.sCount[nextLine] < state.blkIndent) { return false; }\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[nextLine] - state.blkIndent >= 4) { return false; }\n\n  // first character of the second line should be '|', '-', ':',\n  // and no other characters are allowed but spaces;\n  // basically, this is the equivalent of /^[-:|][-:|\\s]*$/ regexp\n\n  pos = state.bMarks[nextLine] + state.tShift[nextLine];\n  if (pos >= state.eMarks[nextLine]) { return false; }\n\n  firstCh = state.src.charCodeAt(pos++);\n  if (firstCh !== 0x7C/* | */ && firstCh !== 0x2D/* - */ && firstCh !== 0x3A/* : */) { return false; }\n\n  if (pos >= state.eMarks[nextLine]) { return false; }\n\n  secondCh = state.src.charCodeAt(pos++);\n  if (secondCh !== 0x7C/* | */ && secondCh !== 0x2D/* - */ && secondCh !== 0x3A/* : */ && !isSpace(secondCh)) {\n    return false;\n  }\n\n  // if first character is '-', then second character must not be a space\n  // (due to parsing ambiguity with list)\n  if (firstCh === 0x2D/* - */ && isSpace(secondCh)) { return false; }\n\n  while (pos < state.eMarks[nextLine]) {\n    ch = state.src.charCodeAt(pos);\n\n    if (ch !== 0x7C/* | */ && ch !== 0x2D/* - */ && ch !== 0x3A/* : */ && !isSpace(ch)) { return false; }\n\n    pos++;\n  }\n\n  lineText = getLine(state, startLine + 1);\n\n  columns = lineText.split('|');\n  aligns = [];\n  for (i = 0; i < columns.length; i++) {\n    t = columns[i].trim();\n    if (!t) {\n      // allow empty columns before and after table, but not in between columns;\n      // e.g. allow ` |---| `, disallow ` ---||--- `\n      if (i === 0 || i === columns.length - 1) {\n        continue;\n      } else {\n        return false;\n      }\n    }\n\n    if (!/^:?-+:?$/.test(t)) { return false; }\n    if (t.charCodeAt(t.length - 1) === 0x3A/* : */) {\n      aligns.push(t.charCodeAt(0) === 0x3A/* : */ ? 'center' : 'right');\n    } else if (t.charCodeAt(0) === 0x3A/* : */) {\n      aligns.push('left');\n    } else {\n      aligns.push('');\n    }\n  }\n\n  lineText = getLine(state, startLine).trim();\n  if (lineText.indexOf('|') === -1) { return false; }\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n  columns = escapedSplit(lineText);\n  if (columns.length && columns[0] === '') columns.shift();\n  if (columns.length && columns[columns.length - 1] === '') columns.pop();\n\n  // header row will define an amount of columns in the entire table,\n  // and align row should be exactly the same (the rest of the rows can differ)\n  columnCount = columns.length;\n  if (columnCount === 0 || columnCount !== aligns.length) { return false; }\n\n  if (silent) { return true; }\n\n  oldParentType = state.parentType;\n  state.parentType = 'table';\n\n  // use 'blockquote' lists for termination because it's\n  // the most similar to tables\n  terminatorRules = state.md.block.ruler.getRules('blockquote');\n\n  token     = state.push('table_open', 'table', 1);\n  token.map = tableLines = [ startLine, 0 ];\n\n  token     = state.push('thead_open', 'thead', 1);\n  token.map = [ startLine, startLine + 1 ];\n\n  token     = state.push('tr_open', 'tr', 1);\n  token.map = [ startLine, startLine + 1 ];\n\n  for (i = 0; i < columns.length; i++) {\n    token          = state.push('th_open', 'th', 1);\n    if (aligns[i]) {\n      token.attrs  = [ [ 'style', 'text-align:' + aligns[i] ] ];\n    }\n\n    token          = state.push('inline', '', 0);\n    token.content  = columns[i].trim();\n    token.children = [];\n\n    token          = state.push('th_close', 'th', -1);\n  }\n\n  token     = state.push('tr_close', 'tr', -1);\n  token     = state.push('thead_close', 'thead', -1);\n\n  for (nextLine = startLine + 2; nextLine < endLine; nextLine++) {\n    if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) { break; }\n    lineText = getLine(state, nextLine).trim();\n    if (!lineText) { break; }\n    if (state.sCount[nextLine] - state.blkIndent >= 4) { break; }\n    columns = escapedSplit(lineText);\n    if (columns.length && columns[0] === '') columns.shift();\n    if (columns.length && columns[columns.length - 1] === '') columns.pop();\n\n    if (nextLine === startLine + 2) {\n      token     = state.push('tbody_open', 'tbody', 1);\n      token.map = tbodyLines = [ startLine + 2, 0 ];\n    }\n\n    token     = state.push('tr_open', 'tr', 1);\n    token.map = [ nextLine, nextLine + 1 ];\n\n    for (i = 0; i < columnCount; i++) {\n      token          = state.push('td_open', 'td', 1);\n      if (aligns[i]) {\n        token.attrs  = [ [ 'style', 'text-align:' + aligns[i] ] ];\n      }\n\n      token          = state.push('inline', '', 0);\n      token.content  = columns[i] ? columns[i].trim() : '';\n      token.children = [];\n\n      token          = state.push('td_close', 'td', -1);\n    }\n    token = state.push('tr_close', 'tr', -1);\n  }\n\n  if (tbodyLines) {\n    token = state.push('tbody_close', 'tbody', -1);\n    tbodyLines[1] = nextLine;\n  }\n\n  token = state.push('table_close', 'table', -1);\n  tableLines[1] = nextLine;\n\n  state.parentType = oldParentType;\n  state.line = nextLine;\n  return true;\n};\n","// Parser state class\n\n'use strict';\n\nvar Token = require('../token');\nvar isSpace = require('../common/utils').isSpace;\n\n\nfunction StateBlock(src, md, env, tokens) {\n  var ch, s, start, pos, len, indent, offset, indent_found;\n\n  this.src = src;\n\n  // link to parser instance\n  this.md     = md;\n\n  this.env = env;\n\n  //\n  // Internal state vartiables\n  //\n\n  this.tokens = tokens;\n\n  this.bMarks = [];  // line begin offsets for fast jumps\n  this.eMarks = [];  // line end offsets for fast jumps\n  this.tShift = [];  // offsets of the first non-space characters (tabs not expanded)\n  this.sCount = [];  // indents for each line (tabs expanded)\n\n  // An amount of virtual spaces (tabs expanded) between beginning\n  // of each line (bMarks) and real beginning of that line.\n  //\n  // It exists only as a hack because blockquotes override bMarks\n  // losing information in the process.\n  //\n  // It's used only when expanding tabs, you can think about it as\n  // an initial tab length, e.g. bsCount=21 applied to string `\\t123`\n  // means first tab should be expanded to 4-21%4 === 3 spaces.\n  //\n  this.bsCount = [];\n\n  // block parser variables\n  this.blkIndent  = 0; // required block content indent (for example, if we are\n                       // inside a list, it would be positioned after list marker)\n  this.line       = 0; // line index in src\n  this.lineMax    = 0; // lines count\n  this.tight      = false;  // loose/tight mode for lists\n  this.ddIndent   = -1; // indent of the current dd block (-1 if there isn't any)\n  this.listIndent = -1; // indent of the current list block (-1 if there isn't any)\n\n  // can be 'blockquote', 'list', 'root', 'paragraph' or 'reference'\n  // used in lists to determine if they interrupt a paragraph\n  this.parentType = 'root';\n\n  this.level = 0;\n\n  // renderer\n  this.result = '';\n\n  // Create caches\n  // Generate markers.\n  s = this.src;\n  indent_found = false;\n\n  for (start = pos = indent = offset = 0, len = s.length; pos < len; pos++) {\n    ch = s.charCodeAt(pos);\n\n    if (!indent_found) {\n      if (isSpace(ch)) {\n        indent++;\n\n        if (ch === 0x09) {\n          offset += 4 - offset % 4;\n        } else {\n          offset++;\n        }\n        continue;\n      } else {\n        indent_found = true;\n      }\n    }\n\n    if (ch === 0x0A || pos === len - 1) {\n      if (ch !== 0x0A) { pos++; }\n      this.bMarks.push(start);\n      this.eMarks.push(pos);\n      this.tShift.push(indent);\n      this.sCount.push(offset);\n      this.bsCount.push(0);\n\n      indent_found = false;\n      indent = 0;\n      offset = 0;\n      start = pos + 1;\n    }\n  }\n\n  // Push fake entry to simplify cache bounds checks\n  this.bMarks.push(s.length);\n  this.eMarks.push(s.length);\n  this.tShift.push(0);\n  this.sCount.push(0);\n  this.bsCount.push(0);\n\n  this.lineMax = this.bMarks.length - 1; // don't count last fake line\n}\n\n// Push new token to \"stream\".\n//\nStateBlock.prototype.push = function (type, tag, nesting) {\n  var token = new Token(type, tag, nesting);\n  token.block = true;\n\n  if (nesting < 0) this.level--; // closing tag\n  token.level = this.level;\n  if (nesting > 0) this.level++; // opening tag\n\n  this.tokens.push(token);\n  return token;\n};\n\nStateBlock.prototype.isEmpty = function isEmpty(line) {\n  return this.bMarks[line] + this.tShift[line] >= this.eMarks[line];\n};\n\nStateBlock.prototype.skipEmptyLines = function skipEmptyLines(from) {\n  for (var max = this.lineMax; from < max; from++) {\n    if (this.bMarks[from] + this.tShift[from] < this.eMarks[from]) {\n      break;\n    }\n  }\n  return from;\n};\n\n// Skip spaces from given position.\nStateBlock.prototype.skipSpaces = function skipSpaces(pos) {\n  var ch;\n\n  for (var max = this.src.length; pos < max; pos++) {\n    ch = this.src.charCodeAt(pos);\n    if (!isSpace(ch)) { break; }\n  }\n  return pos;\n};\n\n// Skip spaces from given position in reverse.\nStateBlock.prototype.skipSpacesBack = function skipSpacesBack(pos, min) {\n  if (pos <= min) { return pos; }\n\n  while (pos > min) {\n    if (!isSpace(this.src.charCodeAt(--pos))) { return pos + 1; }\n  }\n  return pos;\n};\n\n// Skip char codes from given position\nStateBlock.prototype.skipChars = function skipChars(pos, code) {\n  for (var max = this.src.length; pos < max; pos++) {\n    if (this.src.charCodeAt(pos) !== code) { break; }\n  }\n  return pos;\n};\n\n// Skip char codes reverse from given position - 1\nStateBlock.prototype.skipCharsBack = function skipCharsBack(pos, code, min) {\n  if (pos <= min) { return pos; }\n\n  while (pos > min) {\n    if (code !== this.src.charCodeAt(--pos)) { return pos + 1; }\n  }\n  return pos;\n};\n\n// cut lines range from source.\nStateBlock.prototype.getLines = function getLines(begin, end, indent, keepLastLF) {\n  var i, lineIndent, ch, first, last, queue, lineStart,\n      line = begin;\n\n  if (begin >= end) {\n    return '';\n  }\n\n  queue = new Array(end - begin);\n\n  for (i = 0; line < end; line++, i++) {\n    lineIndent = 0;\n    lineStart = first = this.bMarks[line];\n\n    if (line + 1 < end || keepLastLF) {\n      // No need for bounds check because we have fake entry on tail.\n      last = this.eMarks[line] + 1;\n    } else {\n      last = this.eMarks[line];\n    }\n\n    while (first < last && lineIndent < indent) {\n      ch = this.src.charCodeAt(first);\n\n      if (isSpace(ch)) {\n        if (ch === 0x09) {\n          lineIndent += 4 - (lineIndent + this.bsCount[line]) % 4;\n        } else {\n          lineIndent++;\n        }\n      } else if (first - lineStart < this.tShift[line]) {\n        // patched tShift masked characters to look like spaces (blockquotes, list markers)\n        lineIndent++;\n      } else {\n        break;\n      }\n\n      first++;\n    }\n\n    if (lineIndent > indent) {\n      // partially expanding tabs in code blocks, e.g '\\t\\tfoobar'\n      // with indent=2 becomes '  \\tfoobar'\n      queue[i] = new Array(lineIndent - indent + 1).join(' ') + this.src.slice(first, last);\n    } else {\n      queue[i] = this.src.slice(first, last);\n    }\n  }\n\n  return queue.join('');\n};\n\n// re-export Token class to use in block rules\nStateBlock.prototype.Token = Token;\n\n\nmodule.exports = StateBlock;\n","// For each opening emphasis-like marker find a matching closing one\n//\n'use strict';\n\n\nfunction processDelimiters(state, delimiters) {\n  var closerIdx, openerIdx, closer, opener, minOpenerIdx, newMinOpenerIdx,\n      isOddMatch, lastJump,\n      openersBottom = {},\n      max = delimiters.length;\n\n  if (!max) return;\n\n  // headerIdx is the first delimiter of the current (where closer is) delimiter run\n  var headerIdx = 0;\n  var lastTokenIdx = -2; // needs any value lower than -1\n  var jumps = [];\n\n  for (closerIdx = 0; closerIdx < max; closerIdx++) {\n    closer = delimiters[closerIdx];\n\n    jumps.push(0);\n\n    // markers belong to same delimiter run if:\n    //  - they have adjacent tokens\n    //  - AND markers are the same\n    //\n    if (delimiters[headerIdx].marker !== closer.marker || lastTokenIdx !== closer.token - 1) {\n      headerIdx = closerIdx;\n    }\n\n    lastTokenIdx = closer.token;\n\n    // Length is only used for emphasis-specific \"rule of 3\",\n    // if it's not defined (in strikethrough or 3rd party plugins),\n    // we can default it to 0 to disable those checks.\n    //\n    closer.length = closer.length || 0;\n\n    if (!closer.close) continue;\n\n    // Previously calculated lower bounds (previous fails)\n    // for each marker, each delimiter length modulo 3,\n    // and for whether this closer can be an opener;\n    // https://github.com/commonmark/cmark/commit/34250e12ccebdc6372b8b49c44fab57c72443460\n    if (!openersBottom.hasOwnProperty(closer.marker)) {\n      openersBottom[closer.marker] = [ -1, -1, -1, -1, -1, -1 ];\n    }\n\n    minOpenerIdx = openersBottom[closer.marker][(closer.open ? 3 : 0) + (closer.length % 3)];\n\n    openerIdx = headerIdx - jumps[headerIdx] - 1;\n\n    newMinOpenerIdx = openerIdx;\n\n    for (; openerIdx > minOpenerIdx; openerIdx -= jumps[openerIdx] + 1) {\n      opener = delimiters[openerIdx];\n\n      if (opener.marker !== closer.marker) continue;\n\n      if (opener.open && opener.end < 0) {\n\n        isOddMatch = false;\n\n        // from spec:\n        //\n        // If one of the delimiters can both open and close emphasis, then the\n        // sum of the lengths of the delimiter runs containing the opening and\n        // closing delimiters must not be a multiple of 3 unless both lengths\n        // are multiples of 3.\n        //\n        if (opener.close || closer.open) {\n          if ((opener.length + closer.length) % 3 === 0) {\n            if (opener.length % 3 !== 0 || closer.length % 3 !== 0) {\n              isOddMatch = true;\n            }\n          }\n        }\n\n        if (!isOddMatch) {\n          // If previous delimiter cannot be an opener, we can safely skip\n          // the entire sequence in future checks. This is required to make\n          // sure algorithm has linear complexity (see *_*_*_*_*_... case).\n          //\n          lastJump = openerIdx > 0 && !delimiters[openerIdx - 1].open ?\n            jumps[openerIdx - 1] + 1 :\n            0;\n\n          jumps[closerIdx] = closerIdx - openerIdx + lastJump;\n          jumps[openerIdx] = lastJump;\n\n          closer.open  = false;\n          opener.end   = closerIdx;\n          opener.close = false;\n          newMinOpenerIdx = -1;\n          // treat next token as start of run,\n          // it optimizes skips in **<...>**a**<...>** pathological case\n          lastTokenIdx = -2;\n          break;\n        }\n      }\n    }\n\n    if (newMinOpenerIdx !== -1) {\n      // If match for this delimiter run failed, we want to set lower bound for\n      // future lookups. This is required to make sure algorithm has linear\n      // complexity.\n      //\n      // See details here:\n      // https://github.com/commonmark/cmark/issues/178#issuecomment-270417442\n      //\n      openersBottom[closer.marker][(closer.open ? 3 : 0) + ((closer.length || 0) % 3)] = newMinOpenerIdx;\n    }\n  }\n}\n\n\nmodule.exports = function link_pairs(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  processDelimiters(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      processDelimiters(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","// markdown-it default options\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         false,        // Enable HTML tags in source\n    xhtmlOut:     false,        // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   100            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {},\n    block: {},\n    inline: {}\n  }\n};\n","\n'use strict';\n\n\n/* eslint-disable no-bitwise */\n\nvar decodeCache = {};\n\nfunction getDecodeCache(exclude) {\n  var i, ch, cache = decodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = decodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n    cache.push(ch);\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    ch = exclude.charCodeAt(i);\n    cache[ch] = '%' + ('0' + ch.toString(16).toUpperCase()).slice(-2);\n  }\n\n  return cache;\n}\n\n\n// Decode percent-encoded string.\n//\nfunction decode(string, exclude) {\n  var cache;\n\n  if (typeof exclude !== 'string') {\n    exclude = decode.defaultChars;\n  }\n\n  cache = getDecodeCache(exclude);\n\n  return string.replace(/(%[a-f0-9]{2})+/gi, function(seq) {\n    var i, l, b1, b2, b3, b4, chr,\n        result = '';\n\n    for (i = 0, l = seq.length; i < l; i += 3) {\n      b1 = parseInt(seq.slice(i + 1, i + 3), 16);\n\n      if (b1 < 0x80) {\n        result += cache[b1];\n        continue;\n      }\n\n      if ((b1 & 0xE0) === 0xC0 && (i + 3 < l)) {\n        // 110xxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n\n        if ((b2 & 0xC0) === 0x80) {\n          chr = ((b1 << 6) & 0x7C0) | (b2 & 0x3F);\n\n          if (chr < 0x80) {\n            result += '\\ufffd\\ufffd';\n          } else {\n            result += String.fromCharCode(chr);\n          }\n\n          i += 3;\n          continue;\n        }\n      }\n\n      if ((b1 & 0xF0) === 0xE0 && (i + 6 < l)) {\n        // 1110xxxx 10xxxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n        b3 = parseInt(seq.slice(i + 7, i + 9), 16);\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n          chr = ((b1 << 12) & 0xF000) | ((b2 << 6) & 0xFC0) | (b3 & 0x3F);\n\n          if (chr < 0x800 || (chr >= 0xD800 && chr <= 0xDFFF)) {\n            result += '\\ufffd\\ufffd\\ufffd';\n          } else {\n            result += String.fromCharCode(chr);\n          }\n\n          i += 6;\n          continue;\n        }\n      }\n\n      if ((b1 & 0xF8) === 0xF0 && (i + 9 < l)) {\n        // 111110xx 10xxxxxx 10xxxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n        b3 = parseInt(seq.slice(i + 7, i + 9), 16);\n        b4 = parseInt(seq.slice(i + 10, i + 12), 16);\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80 && (b4 & 0xC0) === 0x80) {\n          chr = ((b1 << 18) & 0x1C0000) | ((b2 << 12) & 0x3F000) | ((b3 << 6) & 0xFC0) | (b4 & 0x3F);\n\n          if (chr < 0x10000 || chr > 0x10FFFF) {\n            result += '\\ufffd\\ufffd\\ufffd\\ufffd';\n          } else {\n            chr -= 0x10000;\n            result += String.fromCharCode(0xD800 + (chr >> 10), 0xDC00 + (chr & 0x3FF));\n          }\n\n          i += 9;\n          continue;\n        }\n      }\n\n      result += '\\ufffd';\n    }\n\n    return result;\n  });\n}\n\n\ndecode.defaultChars   = ';/?:@&=+$,#';\ndecode.componentChars = '';\n\n\nmodule.exports = decode;\n","// ~~strike through~~\n//\n'use strict';\n\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nmodule.exports.tokenize = function strikethrough(state, silent) {\n  var i, scanned, token, len, ch,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (silent) { return false; }\n\n  if (marker !== 0x7E/* ~ */) { return false; }\n\n  scanned = state.scanDelims(state.pos, true);\n  len = scanned.length;\n  ch = String.fromCharCode(marker);\n\n  if (len < 2) { return false; }\n\n  if (len % 2) {\n    token         = state.push('text', '', 0);\n    token.content = ch;\n    len--;\n  }\n\n  for (i = 0; i < len; i += 2) {\n    token         = state.push('text', '', 0);\n    token.content = ch + ch;\n\n    state.delimiters.push({\n      marker: marker,\n      length: 0,     // disable \"rule of 3\" length checks meant for emphasis\n      token:  state.tokens.length - 1,\n      end:    -1,\n      open:   scanned.can_open,\n      close:  scanned.can_close\n    });\n  }\n\n  state.pos += scanned.length;\n\n  return true;\n};\n\n\nfunction postProcess(state, delimiters) {\n  var i, j,\n      startDelim,\n      endDelim,\n      token,\n      loneMarkers = [],\n      max = delimiters.length;\n\n  for (i = 0; i < max; i++) {\n    startDelim = delimiters[i];\n\n    if (startDelim.marker !== 0x7E/* ~ */) {\n      continue;\n    }\n\n    if (startDelim.end === -1) {\n      continue;\n    }\n\n    endDelim = delimiters[startDelim.end];\n\n    token         = state.tokens[startDelim.token];\n    token.type    = 's_open';\n    token.tag     = 's';\n    token.nesting = 1;\n    token.markup  = '~~';\n    token.content = '';\n\n    token         = state.tokens[endDelim.token];\n    token.type    = 's_close';\n    token.tag     = 's';\n    token.nesting = -1;\n    token.markup  = '~~';\n    token.content = '';\n\n    if (state.tokens[endDelim.token - 1].type === 'text' &&\n        state.tokens[endDelim.token - 1].content === '~') {\n\n      loneMarkers.push(endDelim.token - 1);\n    }\n  }\n\n  // If a marker sequence has an odd number of characters, it's splitted\n  // like this: `~~~~~` -> `~` + `~~` + `~~`, leaving one marker at the\n  // start of the sequence.\n  //\n  // So, we have to move all those markers after subsequent s_close tags.\n  //\n  while (loneMarkers.length) {\n    i = loneMarkers.pop();\n    j = i + 1;\n\n    while (j < state.tokens.length && state.tokens[j].type === 's_close') {\n      j++;\n    }\n\n    j--;\n\n    if (i !== j) {\n      token = state.tokens[j];\n      state.tokens[j] = state.tokens[i];\n      state.tokens[i] = token;\n    }\n  }\n}\n\n\n// Walk through delimiter list and replace text tokens with tags\n//\nmodule.exports.postProcess = function strikethrough(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  postProcess(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","// Process ![image](<src> \"title\")\n\n'use strict';\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function image(state, silent) {\n  var attrs,\n      code,\n      content,\n      label,\n      labelEnd,\n      labelStart,\n      pos,\n      ref,\n      res,\n      title,\n      token,\n      tokens,\n      start,\n      href = '',\n      oldPos = state.pos,\n      max = state.posMax;\n\n  if (state.src.charCodeAt(state.pos) !== 0x21/* ! */) { return false; }\n  if (state.src.charCodeAt(state.pos + 1) !== 0x5B/* [ */) { return false; }\n\n  labelStart = state.pos + 2;\n  labelEnd = state.md.helpers.parseLinkLabel(state, state.pos + 1, false);\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false; }\n\n  pos = labelEnd + 1;\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n    if (pos >= max) { return false; }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos;\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str);\n      if (state.md.validateLink(href)) {\n        pos = res.pos;\n      } else {\n        href = '';\n      }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                ^^ skipping these spaces\n    start = pos;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                  ^^^^^^^ parsing link title\n    res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n    if (pos < max && start !== pos && res.ok) {\n      title = res.str;\n      pos = res.pos;\n\n      // [link](  <href>  \"title\"  )\n      //                         ^^ skipping these spaces\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (!isSpace(code) && code !== 0x0A) { break; }\n      }\n    } else {\n      title = '';\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      state.pos = oldPos;\n      return false;\n    }\n    pos++;\n  } else {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false; }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1;\n      pos = state.md.helpers.parseLinkLabel(state, pos);\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++);\n      } else {\n        pos = labelEnd + 1;\n      }\n    } else {\n      pos = labelEnd + 1;\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd); }\n\n    ref = state.env.references[normalizeReference(label)];\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n    href = ref.href;\n    title = ref.title;\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    content = state.src.slice(labelStart, labelEnd);\n\n    state.md.inline.parse(\n      content,\n      state.md,\n      state.env,\n      tokens = []\n    );\n\n    token          = state.push('image', 'img', 0);\n    token.attrs    = attrs = [ [ 'src', href ], [ 'alt', '' ] ];\n    token.children = tokens;\n    token.content  = content;\n\n    if (title) {\n      attrs.push([ 'title', title ]);\n    }\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};\n","// Replace link-like texts with link nodes.\n//\n// Currently restricted by `md.validateLink()` to http/https/ftp\n//\n'use strict';\n\n\nvar arrayReplaceAt = require('../common/utils').arrayReplaceAt;\n\n\nfunction isLinkOpen(str) {\n  return /^<a[>\\s]/i.test(str);\n}\nfunction isLinkClose(str) {\n  return /^<\\/a\\s*>/i.test(str);\n}\n\n\nmodule.exports = function linkify(state) {\n  var i, j, l, tokens, token, currentToken, nodes, ln, text, pos, lastPos,\n      level, htmlLinkLevel, url, fullUrl, urlText,\n      blockTokens = state.tokens,\n      links;\n\n  if (!state.md.options.linkify) { return; }\n\n  for (j = 0, l = blockTokens.length; j < l; j++) {\n    if (blockTokens[j].type !== 'inline' ||\n        !state.md.linkify.pretest(blockTokens[j].content)) {\n      continue;\n    }\n\n    tokens = blockTokens[j].children;\n\n    htmlLinkLevel = 0;\n\n    // We scan from the end, to keep position when new tags added.\n    // Use reversed logic in links start/end match\n    for (i = tokens.length - 1; i >= 0; i--) {\n      currentToken = tokens[i];\n\n      // Skip content of markdown links\n      if (currentToken.type === 'link_close') {\n        i--;\n        while (tokens[i].level !== currentToken.level && tokens[i].type !== 'link_open') {\n          i--;\n        }\n        continue;\n      }\n\n      // Skip content of html tag links\n      if (currentToken.type === 'html_inline') {\n        if (isLinkOpen(currentToken.content) && htmlLinkLevel > 0) {\n          htmlLinkLevel--;\n        }\n        if (isLinkClose(currentToken.content)) {\n          htmlLinkLevel++;\n        }\n      }\n      if (htmlLinkLevel > 0) { continue; }\n\n      if (currentToken.type === 'text' && state.md.linkify.test(currentToken.content)) {\n\n        text = currentToken.content;\n        links = state.md.linkify.match(text);\n\n        // Now split string to nodes\n        nodes = [];\n        level = currentToken.level;\n        lastPos = 0;\n\n        for (ln = 0; ln < links.length; ln++) {\n\n          url = links[ln].url;\n          fullUrl = state.md.normalizeLink(url);\n          if (!state.md.validateLink(fullUrl)) { continue; }\n\n          urlText = links[ln].text;\n\n          // Linkifier might send raw hostnames like \"example.com\", where url\n          // starts with domain name. So we prepend http:// in those cases,\n          // and remove it afterwards.\n          //\n          if (!links[ln].schema) {\n            urlText = state.md.normalizeLinkText('http://' + urlText).replace(/^http:\\/\\//, '');\n          } else if (links[ln].schema === 'mailto:' && !/^mailto:/i.test(urlText)) {\n            urlText = state.md.normalizeLinkText('mailto:' + urlText).replace(/^mailto:/, '');\n          } else {\n            urlText = state.md.normalizeLinkText(urlText);\n          }\n\n          pos = links[ln].index;\n\n          if (pos > lastPos) {\n            token         = new state.Token('text', '', 0);\n            token.content = text.slice(lastPos, pos);\n            token.level   = level;\n            nodes.push(token);\n          }\n\n          token         = new state.Token('link_open', 'a', 1);\n          token.attrs   = [ [ 'href', fullUrl ] ];\n          token.level   = level++;\n          token.markup  = 'linkify';\n          token.info    = 'auto';\n          nodes.push(token);\n\n          token         = new state.Token('text', '', 0);\n          token.content = urlText;\n          token.level   = level;\n          nodes.push(token);\n\n          token         = new state.Token('link_close', 'a', -1);\n          token.level   = --level;\n          token.markup  = 'linkify';\n          token.info    = 'auto';\n          nodes.push(token);\n\n          lastPos = links[ln].lastIndex;\n        }\n        if (lastPos < text.length) {\n          token         = new state.Token('text', '', 0);\n          token.content = text.slice(lastPos);\n          token.level   = level;\n          nodes.push(token);\n        }\n\n        // replace current node\n        blockTokens[j].children = tokens = arrayReplaceAt(tokens, i, nodes);\n      }\n    }\n  }\n};\n","// Code block (4 spaces padded)\n\n'use strict';\n\n\nmodule.exports = function code(state, startLine, endLine/*, silent*/) {\n  var nextLine, last, token;\n\n  if (state.sCount[startLine] - state.blkIndent < 4) { return false; }\n\n  last = nextLine = startLine + 1;\n\n  while (nextLine < endLine) {\n    if (state.isEmpty(nextLine)) {\n      nextLine++;\n      continue;\n    }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      nextLine++;\n      last = nextLine;\n      continue;\n    }\n    break;\n  }\n\n  state.line = last;\n\n  token         = state.push('code_block', 'code', 0);\n  token.content = state.getLines(startLine, last, 4 + state.blkIndent, false) + '\\n';\n  token.map     = [ startLine, state.line ];\n\n  return true;\n};\n","'use strict';\n\nmodule.exports = function inline(state) {\n  var tokens = state.tokens, tok, i, l;\n\n  // Parse inlines\n  for (i = 0, l = tokens.length; i < l; i++) {\n    tok = tokens[i];\n    if (tok.type === 'inline') {\n      state.md.inline.parse(tok.content, state.md, state.env, tok.children);\n    }\n  }\n};\n","module.exports=/[\\0-\\x1F\\x7F-\\x9F]/","/** internal\n * class Core\n *\n * Top-level rules executor. Glues block/inline parsers and does intermediate\n * transformations.\n **/\n'use strict';\n\n\nvar Ruler  = require('./ruler');\n\n\nvar _rules = [\n  [ 'normalize',      require('./rules_core/normalize')      ],\n  [ 'block',          require('./rules_core/block')          ],\n  [ 'inline',         require('./rules_core/inline')         ],\n  [ 'linkify',        require('./rules_core/linkify')        ],\n  [ 'replacements',   require('./rules_core/replacements')   ],\n  [ 'smartquotes',    require('./rules_core/smartquotes')    ]\n];\n\n\n/**\n * new Core()\n **/\nfunction Core() {\n  /**\n   * Core#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of core rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n}\n\n\n/**\n * Core.process(state)\n *\n * Executes core chain rules.\n **/\nCore.prototype.process = function (state) {\n  var i, l, rules;\n\n  rules = this.ruler.getRules('');\n\n  for (i = 0, l = rules.length; i < l; i++) {\n    rules[i](state);\n  }\n};\n\nCore.prototype.State = require('./rules_core/state_core');\n\n\nmodule.exports = Core;\n","// Convert straight quotation marks to typographic ones\n//\n'use strict';\n\n\nvar isWhiteSpace   = require('../common/utils').isWhiteSpace;\nvar isPunctChar    = require('../common/utils').isPunctChar;\nvar isMdAsciiPunct = require('../common/utils').isMdAsciiPunct;\n\nvar QUOTE_TEST_RE = /['\"]/;\nvar QUOTE_RE = /['\"]/g;\nvar APOSTROPHE = '\\u2019'; /* ’ */\n\n\nfunction replaceAt(str, index, ch) {\n  return str.substr(0, index) + ch + str.substr(index + 1);\n}\n\nfunction process_inlines(tokens, state) {\n  var i, token, text, t, pos, max, thisLevel, item, lastChar, nextChar,\n      isLastPunctChar, isNextPunctChar, isLastWhiteSpace, isNextWhiteSpace,\n      canOpen, canClose, j, isSingle, stack, openQuote, closeQuote;\n\n  stack = [];\n\n  for (i = 0; i < tokens.length; i++) {\n    token = tokens[i];\n\n    thisLevel = tokens[i].level;\n\n    for (j = stack.length - 1; j >= 0; j--) {\n      if (stack[j].level <= thisLevel) { break; }\n    }\n    stack.length = j + 1;\n\n    if (token.type !== 'text') { continue; }\n\n    text = token.content;\n    pos = 0;\n    max = text.length;\n\n    /*eslint no-labels:0,block-scoped-var:0*/\n    OUTER:\n    while (pos < max) {\n      QUOTE_RE.lastIndex = pos;\n      t = QUOTE_RE.exec(text);\n      if (!t) { break; }\n\n      canOpen = canClose = true;\n      pos = t.index + 1;\n      isSingle = (t[0] === \"'\");\n\n      // Find previous character,\n      // default to space if it's the beginning of the line\n      //\n      lastChar = 0x20;\n\n      if (t.index - 1 >= 0) {\n        lastChar = text.charCodeAt(t.index - 1);\n      } else {\n        for (j = i - 1; j >= 0; j--) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break; // lastChar defaults to 0x20\n          if (!tokens[j].content) continue; // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          lastChar = tokens[j].content.charCodeAt(tokens[j].content.length - 1);\n          break;\n        }\n      }\n\n      // Find next character,\n      // default to space if it's the end of the line\n      //\n      nextChar = 0x20;\n\n      if (pos < max) {\n        nextChar = text.charCodeAt(pos);\n      } else {\n        for (j = i + 1; j < tokens.length; j++) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break; // nextChar defaults to 0x20\n          if (!tokens[j].content) continue; // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          nextChar = tokens[j].content.charCodeAt(0);\n          break;\n        }\n      }\n\n      isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));\n      isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));\n\n      isLastWhiteSpace = isWhiteSpace(lastChar);\n      isNextWhiteSpace = isWhiteSpace(nextChar);\n\n      if (isNextWhiteSpace) {\n        canOpen = false;\n      } else if (isNextPunctChar) {\n        if (!(isLastWhiteSpace || isLastPunctChar)) {\n          canOpen = false;\n        }\n      }\n\n      if (isLastWhiteSpace) {\n        canClose = false;\n      } else if (isLastPunctChar) {\n        if (!(isNextWhiteSpace || isNextPunctChar)) {\n          canClose = false;\n        }\n      }\n\n      if (nextChar === 0x22 /* \" */ && t[0] === '\"') {\n        if (lastChar >= 0x30 /* 0 */ && lastChar <= 0x39 /* 9 */) {\n          // special case: 1\"\" - count first quote as an inch\n          canClose = canOpen = false;\n        }\n      }\n\n      if (canOpen && canClose) {\n        // Replace quotes in the middle of punctuation sequence, but not\n        // in the middle of the words, i.e.:\n        //\n        // 1. foo \" bar \" baz - not replaced\n        // 2. foo-\"-bar-\"-baz - replaced\n        // 3. foo\"bar\"baz     - not replaced\n        //\n        canOpen = isLastPunctChar;\n        canClose = isNextPunctChar;\n      }\n\n      if (!canOpen && !canClose) {\n        // middle of word\n        if (isSingle) {\n          token.content = replaceAt(token.content, t.index, APOSTROPHE);\n        }\n        continue;\n      }\n\n      if (canClose) {\n        // this could be a closing quote, rewind the stack to get a match\n        for (j = stack.length - 1; j >= 0; j--) {\n          item = stack[j];\n          if (stack[j].level < thisLevel) { break; }\n          if (item.single === isSingle && stack[j].level === thisLevel) {\n            item = stack[j];\n\n            if (isSingle) {\n              openQuote = state.md.options.quotes[2];\n              closeQuote = state.md.options.quotes[3];\n            } else {\n              openQuote = state.md.options.quotes[0];\n              closeQuote = state.md.options.quotes[1];\n            }\n\n            // replace token.content *before* tokens[item.token].content,\n            // because, if they are pointing at the same token, replaceAt\n            // could mess up indices when quote length != 1\n            token.content = replaceAt(token.content, t.index, closeQuote);\n            tokens[item.token].content = replaceAt(\n              tokens[item.token].content, item.pos, openQuote);\n\n            pos += closeQuote.length - 1;\n            if (item.token === i) { pos += openQuote.length - 1; }\n\n            text = token.content;\n            max = text.length;\n\n            stack.length = j;\n            continue OUTER;\n          }\n        }\n      }\n\n      if (canOpen) {\n        stack.push({\n          token: i,\n          pos: t.index,\n          single: isSingle,\n          level: thisLevel\n        });\n      } else if (canClose && isSingle) {\n        token.content = replaceAt(token.content, t.index, APOSTROPHE);\n      }\n    }\n  }\n}\n\n\nmodule.exports = function smartquotes(state) {\n  /*eslint max-depth:0*/\n  var blkIdx;\n\n  if (!state.md.options.typographer) { return; }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n\n    if (state.tokens[blkIdx].type !== 'inline' ||\n        !QUOTE_TEST_RE.test(state.tokens[blkIdx].content)) {\n      continue;\n    }\n\n    process_inlines(state.tokens[blkIdx].children, state);\n  }\n};\n","'use strict';\n\n\nmodule.exports = function (opts) {\n  var re = {};\n\n  // Use direct extract instead of `regenerate` to reduse browserified size\n  re.src_Any = require('uc.micro/properties/Any/regex').source;\n  re.src_Cc  = require('uc.micro/categories/Cc/regex').source;\n  re.src_Z   = require('uc.micro/categories/Z/regex').source;\n  re.src_P   = require('uc.micro/categories/P/regex').source;\n\n  // \\p{\\Z\\P\\Cc\\CF} (white spaces + control + format + punctuation)\n  re.src_ZPCc = [ re.src_Z, re.src_P, re.src_Cc ].join('|');\n\n  // \\p{\\Z\\Cc} (white spaces + control)\n  re.src_ZCc = [ re.src_Z, re.src_Cc ].join('|');\n\n  // Experimental. List of chars, completely prohibited in links\n  // because can separate it from other part of text\n  var text_separators = '[><\\uff5c]';\n\n  // All possible word characters (everything without punctuation, spaces & controls)\n  // Defined via punctuation & spaces to save space\n  // Should be something like \\p{\\L\\N\\S\\M} (\\w but without `_`)\n  re.src_pseudo_letter       = '(?:(?!' + text_separators + '|' + re.src_ZPCc + ')' + re.src_Any + ')';\n  // The same as abothe but without [0-9]\n  // var src_pseudo_letter_non_d = '(?:(?![0-9]|' + src_ZPCc + ')' + src_Any + ')';\n\n  ////////////////////////////////////////////////////////////////////////////////\n\n  re.src_ip4 =\n\n    '(?:(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)';\n\n  // Prohibit any of \"@/[]()\" in user/pass to avoid wrong domain fetch.\n  re.src_auth    = '(?:(?:(?!' + re.src_ZCc + '|[@/\\\\[\\\\]()]).)+@)?';\n\n  re.src_port =\n\n    '(?::(?:6(?:[0-4]\\\\d{3}|5(?:[0-4]\\\\d{2}|5(?:[0-2]\\\\d|3[0-5])))|[1-5]?\\\\d{1,4}))?';\n\n  re.src_host_terminator =\n\n    '(?=$|' + text_separators + '|' + re.src_ZPCc + ')(?!-|_|:\\\\d|\\\\.-|\\\\.(?!$|' + re.src_ZPCc + '))';\n\n  re.src_path =\n\n    '(?:' +\n      '[/?#]' +\n        '(?:' +\n          '(?!' + re.src_ZCc + '|' + text_separators + '|[()[\\\\]{}.,\"\\'?!\\\\-;]).|' +\n          '\\\\[(?:(?!' + re.src_ZCc + '|\\\\]).)*\\\\]|' +\n          '\\\\((?:(?!' + re.src_ZCc + '|[)]).)*\\\\)|' +\n          '\\\\{(?:(?!' + re.src_ZCc + '|[}]).)*\\\\}|' +\n          '\\\\\"(?:(?!' + re.src_ZCc + '|[\"]).)+\\\\\"|' +\n          \"\\\\'(?:(?!\" + re.src_ZCc + \"|[']).)+\\\\'|\" +\n          \"\\\\'(?=\" + re.src_pseudo_letter + '|[-]).|' +  // allow `I'm_king` if no pair found\n          '\\\\.{2,}[a-zA-Z0-9%/&]|' + // google has many dots in \"google search\" links (#66, #81).\n                                     // github has ... in commit range links,\n                                     // Restrict to\n                                     // - english\n                                     // - percent-encoded\n                                     // - parts of file path\n                                     // - params separator\n                                     // until more examples found.\n          '\\\\.(?!' + re.src_ZCc + '|[.]).|' +\n          (opts && opts['---'] ?\n            '\\\\-(?!--(?:[^-]|$))(?:-*)|' // `---` => long dash, terminate\n            :\n            '\\\\-+|'\n          ) +\n          ',(?!' + re.src_ZCc + ').|' +       // allow `,,,` in paths\n          ';(?!' + re.src_ZCc + ').|' +       // allow `;` if not followed by space-like char\n          '\\\\!+(?!' + re.src_ZCc + '|[!]).|' +  // allow `!!!` in paths, but not at the end\n          '\\\\?(?!' + re.src_ZCc + '|[?]).' +\n        ')+' +\n      '|\\\\/' +\n    ')?';\n\n  // Allow anything in markdown spec, forbid quote (\") at the first position\n  // because emails enclosed in quotes are far more common\n  re.src_email_name =\n\n    '[\\\\-;:&=\\\\+\\\\$,\\\\.a-zA-Z0-9_][\\\\-;:&=\\\\+\\\\$,\\\\\"\\\\.a-zA-Z0-9_]*';\n\n  re.src_xn =\n\n    'xn--[a-z0-9\\\\-]{1,59}';\n\n  // More to read about domain names\n  // http://serverfault.com/questions/638260/\n\n  re.src_domain_root =\n\n    // Allow letters & digits (http://test1)\n    '(?:' +\n      re.src_xn +\n      '|' +\n      re.src_pseudo_letter + '{1,63}' +\n    ')';\n\n  re.src_domain =\n\n    '(?:' +\n      re.src_xn +\n      '|' +\n      '(?:' + re.src_pseudo_letter + ')' +\n      '|' +\n      '(?:' + re.src_pseudo_letter + '(?:-|' + re.src_pseudo_letter + '){0,61}' + re.src_pseudo_letter + ')' +\n    ')';\n\n  re.src_host =\n\n    '(?:' +\n    // Don't need IP check, because digits are already allowed in normal domain names\n    //   src_ip4 +\n    // '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)*' + re.src_domain/*_root*/ + ')' +\n    ')';\n\n  re.tpl_host_fuzzy =\n\n    '(?:' +\n      re.src_ip4 +\n    '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))' +\n    ')';\n\n  re.tpl_host_no_ip_fuzzy =\n\n    '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))';\n\n  re.src_host_strict =\n\n    re.src_host + re.src_host_terminator;\n\n  re.tpl_host_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_host_terminator;\n\n  re.src_host_port_strict =\n\n    re.src_host + re.src_port + re.src_host_terminator;\n\n  re.tpl_host_port_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_port + re.src_host_terminator;\n\n  re.tpl_host_port_no_ip_fuzzy_strict =\n\n    re.tpl_host_no_ip_fuzzy + re.src_port + re.src_host_terminator;\n\n\n  ////////////////////////////////////////////////////////////////////////////////\n  // Main rules\n\n  // Rude test fuzzy links by host, for quick deny\n  re.tpl_host_fuzzy_test =\n\n    'localhost|www\\\\.|\\\\.\\\\d{1,3}\\\\.|(?:\\\\.(?:%TLDS%)(?:' + re.src_ZPCc + '|>|$))';\n\n  re.tpl_email_fuzzy =\n\n      '(^|' + text_separators + '|\"|\\\\(|' + re.src_ZCc + ')' +\n      '(' + re.src_email_name + '@' + re.tpl_host_fuzzy_strict + ')';\n\n  re.tpl_link_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_fuzzy_strict + re.src_path + ')';\n\n  re.tpl_link_no_ip_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_no_ip_fuzzy_strict + re.src_path + ')';\n\n  return re;\n};\n","module.exports = __webpack_public_path__ + \"img/money.6c34e1ae.png\";","// Skip text characters for text token, place those to pending buffer\n// and increment current pos\n\n'use strict';\n\n\n// Rule to skip pure text\n// '{}$%@~+=:' reserved for extentions\n\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n\n// !!!! Don't confuse with \"Markdown ASCII Punctuation\" chars\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\nfunction isTerminatorChar(ch) {\n  switch (ch) {\n    case 0x0A/* \\n */:\n    case 0x21/* ! */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2D/* - */:\n    case 0x3A/* : */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true;\n    default:\n      return false;\n  }\n}\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos;\n\n  while (pos < state.posMax && !isTerminatorChar(state.src.charCodeAt(pos))) {\n    pos++;\n  }\n\n  if (pos === state.pos) { return false; }\n\n  if (!silent) { state.pending += state.src.slice(state.pos, pos); }\n\n  state.pos = pos;\n\n  return true;\n};\n\n// Alternative implementation, for memory.\n//\n// It costs 10% of performance, but allows extend terminators list, if place it\n// to `ParcerInline` property. Probably, will switch to it sometime, such\n// flexibility required.\n\n/*\nvar TERMINATOR_RE = /[\\n!#$%&*+\\-:<=>@[\\\\\\]^_`{}~]/;\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos,\n      idx = state.src.slice(pos).search(TERMINATOR_RE);\n\n  // first char is terminator -> empty text\n  if (idx === 0) { return false; }\n\n  // no terminator -> text till end of string\n  if (idx < 0) {\n    if (!silent) { state.pending += state.src.slice(pos); }\n    state.pos = state.src.length;\n    return true;\n  }\n\n  if (!silent) { state.pending += state.src.slice(pos, pos + idx); }\n\n  state.pos += idx;\n\n  return true;\n};*/\n","// Simple typographic replacements\n//\n// (c) (C) → ©\n// (tm) (TM) → ™\n// (r) (R) → ®\n// +- → ±\n// (p) (P) -> §\n// ... → … (also ?.... → ?.., !.... → !..)\n// ???????? → ???, !!!!! → !!!, `,,` → `,`\n// -- → &ndash;, --- → &mdash;\n//\n'use strict';\n\n// TODO:\n// - fractionals 1/2, 1/4, 3/4 -> ½, ¼, ¾\n// - miltiplication 2 x 4 -> 2 × 4\n\nvar RARE_RE = /\\+-|\\.\\.|\\?\\?\\?\\?|!!!!|,,|--/;\n\n// Workaround for phantomjs - need regex without /g flag,\n// or root check will fail every second time\nvar SCOPED_ABBR_TEST_RE = /\\((c|tm|r|p)\\)/i;\n\nvar SCOPED_ABBR_RE = /\\((c|tm|r|p)\\)/ig;\nvar SCOPED_ABBR = {\n  c: '©',\n  r: '®',\n  p: '§',\n  tm: '™'\n};\n\nfunction replaceFn(match, name) {\n  return SCOPED_ABBR[name.toLowerCase()];\n}\n\nfunction replace_scoped(inlineTokens) {\n  var i, token, inside_autolink = 0;\n\n  for (i = inlineTokens.length - 1; i >= 0; i--) {\n    token = inlineTokens[i];\n\n    if (token.type === 'text' && !inside_autolink) {\n      token.content = token.content.replace(SCOPED_ABBR_RE, replaceFn);\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--;\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++;\n    }\n  }\n}\n\nfunction replace_rare(inlineTokens) {\n  var i, token, inside_autolink = 0;\n\n  for (i = inlineTokens.length - 1; i >= 0; i--) {\n    token = inlineTokens[i];\n\n    if (token.type === 'text' && !inside_autolink) {\n      if (RARE_RE.test(token.content)) {\n        token.content = token.content\n          .replace(/\\+-/g, '±')\n          // .., ..., ....... -> …\n          // but ?..... & !..... -> ?.. & !..\n          .replace(/\\.{2,}/g, '…').replace(/([?!])…/g, '$1..')\n          .replace(/([?!]){4,}/g, '$1$1$1').replace(/,{2,}/g, ',')\n          // em-dash\n          .replace(/(^|[^-])---(?=[^-]|$)/mg, '$1\\u2014')\n          // en-dash\n          .replace(/(^|\\s)--(?=\\s|$)/mg, '$1\\u2013')\n          .replace(/(^|[^-\\s])--(?=[^-\\s]|$)/mg, '$1\\u2013');\n      }\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--;\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++;\n    }\n  }\n}\n\n\nmodule.exports = function replace(state) {\n  var blkIdx;\n\n  if (!state.md.options.typographer) { return; }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n\n    if (state.tokens[blkIdx].type !== 'inline') { continue; }\n\n    if (SCOPED_ABBR_TEST_RE.test(state.tokens[blkIdx].content)) {\n      replace_scoped(state.tokens[blkIdx].children);\n    }\n\n    if (RARE_RE.test(state.tokens[blkIdx].content)) {\n      replace_rare(state.tokens[blkIdx].children);\n    }\n\n  }\n};\n","// HTML5 entities map: { name -> utf16string }\n//\n'use strict';\n\n/*eslint quotes:0*/\nmodule.exports = require('entities/lib/maps/entities.json');\n","// fences (``` lang, ~~~ lang)\n\n'use strict';\n\n\nmodule.exports = function fence(state, startLine, endLine, silent) {\n  var marker, len, params, nextLine, mem, token, markup,\n      haveEndMarker = false,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (pos + 3 > max) { return false; }\n\n  marker = state.src.charCodeAt(pos);\n\n  if (marker !== 0x7E/* ~ */ && marker !== 0x60 /* ` */) {\n    return false;\n  }\n\n  // scan marker length\n  mem = pos;\n  pos = state.skipChars(pos, marker);\n\n  len = pos - mem;\n\n  if (len < 3) { return false; }\n\n  markup = state.src.slice(mem, pos);\n  params = state.src.slice(pos, max);\n\n  if (marker === 0x60 /* ` */) {\n    if (params.indexOf(String.fromCharCode(marker)) >= 0) {\n      return false;\n    }\n  }\n\n  // Since start is found, we can report success here in validation mode\n  if (silent) { return true; }\n\n  // search end of block\n  nextLine = startLine;\n\n  for (;;) {\n    nextLine++;\n    if (nextLine >= endLine) {\n      // unclosed block should be autoclosed by end of document.\n      // also block seems to be autoclosed by end of parent\n      break;\n    }\n\n    pos = mem = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos < max && state.sCount[nextLine] < state.blkIndent) {\n      // non-empty line with negative indent should stop the list:\n      // - ```\n      //  test\n      break;\n    }\n\n    if (state.src.charCodeAt(pos) !== marker) { continue; }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      // closing fence should be indented less than 4 spaces\n      continue;\n    }\n\n    pos = state.skipChars(pos, marker);\n\n    // closing code fence must be at least as long as the opening one\n    if (pos - mem < len) { continue; }\n\n    // make sure tail has spaces only\n    pos = state.skipSpaces(pos);\n\n    if (pos < max) { continue; }\n\n    haveEndMarker = true;\n    // found!\n    break;\n  }\n\n  // If a fence has heading spaces, they should be removed from its inner block\n  len = state.sCount[startLine];\n\n  state.line = nextLine + (haveEndMarker ? 1 : 0);\n\n  token         = state.push('fence', 'code', 0);\n  token.info    = params;\n  token.content = state.getLines(startLine + 1, nextLine, len, true);\n  token.markup  = markup;\n  token.map     = [ startLine, state.line ];\n\n  return true;\n};\n","// Process html tags\n\n'use strict';\n\n\nvar HTML_TAG_RE = require('../common/html_re').HTML_TAG_RE;\n\n\nfunction isLetter(ch) {\n  /*eslint no-bitwise:0*/\n  var lc = ch | 0x20; // to lower case\n  return (lc >= 0x61/* a */) && (lc <= 0x7a/* z */);\n}\n\n\nmodule.exports = function html_inline(state, silent) {\n  var ch, match, max, token,\n      pos = state.pos;\n\n  if (!state.md.options.html) { return false; }\n\n  // Check start\n  max = state.posMax;\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */ ||\n      pos + 2 >= max) {\n    return false;\n  }\n\n  // Quick fail on second char\n  ch = state.src.charCodeAt(pos + 1);\n  if (ch !== 0x21/* ! */ &&\n      ch !== 0x3F/* ? */ &&\n      ch !== 0x2F/* / */ &&\n      !isLetter(ch)) {\n    return false;\n  }\n\n  match = state.src.slice(pos).match(HTML_TAG_RE);\n  if (!match) { return false; }\n\n  if (!silent) {\n    token         = state.push('html_inline', '', 0);\n    token.content = state.src.slice(pos, pos + match[0].length);\n  }\n  state.pos += match[0].length;\n  return true;\n};\n","\n'use strict';\n\n\nvar encodeCache = {};\n\n\n// Create a lookup array where anything but characters in `chars` string\n// and alphanumeric chars is percent-encoded.\n//\nfunction getEncodeCache(exclude) {\n  var i, ch, cache = encodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = encodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n\n    if (/^[0-9a-z]$/i.test(ch)) {\n      // always allow unencoded alphanumeric characters\n      cache.push(ch);\n    } else {\n      cache.push('%' + ('0' + i.toString(16).toUpperCase()).slice(-2));\n    }\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    cache[exclude.charCodeAt(i)] = exclude[i];\n  }\n\n  return cache;\n}\n\n\n// Encode unsafe characters with percent-encoding, skipping already\n// encoded sequences.\n//\n//  - string       - string to encode\n//  - exclude      - list of characters to ignore (in addition to a-zA-Z0-9)\n//  - keepEscaped  - don't encode '%' in a correct escape sequence (default: true)\n//\nfunction encode(string, exclude, keepEscaped) {\n  var i, l, code, nextCode, cache,\n      result = '';\n\n  if (typeof exclude !== 'string') {\n    // encode(string, keepEscaped)\n    keepEscaped  = exclude;\n    exclude = encode.defaultChars;\n  }\n\n  if (typeof keepEscaped === 'undefined') {\n    keepEscaped = true;\n  }\n\n  cache = getEncodeCache(exclude);\n\n  for (i = 0, l = string.length; i < l; i++) {\n    code = string.charCodeAt(i);\n\n    if (keepEscaped && code === 0x25 /* % */ && i + 2 < l) {\n      if (/^[0-9a-f]{2}$/i.test(string.slice(i + 1, i + 3))) {\n        result += string.slice(i, i + 3);\n        i += 2;\n        continue;\n      }\n    }\n\n    if (code < 128) {\n      result += cache[code];\n      continue;\n    }\n\n    if (code >= 0xD800 && code <= 0xDFFF) {\n      if (code >= 0xD800 && code <= 0xDBFF && i + 1 < l) {\n        nextCode = string.charCodeAt(i + 1);\n        if (nextCode >= 0xDC00 && nextCode <= 0xDFFF) {\n          result += encodeURIComponent(string[i] + string[i + 1]);\n          i++;\n          continue;\n        }\n      }\n      result += '%EF%BF%BD';\n      continue;\n    }\n\n    result += encodeURIComponent(string[i]);\n  }\n\n  return result;\n}\n\nencode.defaultChars   = \";/?:@&=+$,-_.!~*'()#\";\nencode.componentChars = \"-_.!~*'()\";\n\n\nmodule.exports = encode;\n","// Process *this* and _that_\n//\n'use strict';\n\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nmodule.exports.tokenize = function emphasis(state, silent) {\n  var i, scanned, token,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (silent) { return false; }\n\n  if (marker !== 0x5F /* _ */ && marker !== 0x2A /* * */) { return false; }\n\n  scanned = state.scanDelims(state.pos, marker === 0x2A);\n\n  for (i = 0; i < scanned.length; i++) {\n    token         = state.push('text', '', 0);\n    token.content = String.fromCharCode(marker);\n\n    state.delimiters.push({\n      // Char code of the starting marker (number).\n      //\n      marker: marker,\n\n      // Total length of these series of delimiters.\n      //\n      length: scanned.length,\n\n      // A position of the token this delimiter corresponds to.\n      //\n      token:  state.tokens.length - 1,\n\n      // If this delimiter is matched as a valid opener, `end` will be\n      // equal to its position, otherwise it's `-1`.\n      //\n      end:    -1,\n\n      // Boolean flags that determine if this delimiter could open or close\n      // an emphasis.\n      //\n      open:   scanned.can_open,\n      close:  scanned.can_close\n    });\n  }\n\n  state.pos += scanned.length;\n\n  return true;\n};\n\n\nfunction postProcess(state, delimiters) {\n  var i,\n      startDelim,\n      endDelim,\n      token,\n      ch,\n      isStrong,\n      max = delimiters.length;\n\n  for (i = max - 1; i >= 0; i--) {\n    startDelim = delimiters[i];\n\n    if (startDelim.marker !== 0x5F/* _ */ && startDelim.marker !== 0x2A/* * */) {\n      continue;\n    }\n\n    // Process only opening markers\n    if (startDelim.end === -1) {\n      continue;\n    }\n\n    endDelim = delimiters[startDelim.end];\n\n    // If the previous delimiter has the same marker and is adjacent to this one,\n    // merge those into one strong delimiter.\n    //\n    // `<em><em>whatever</em></em>` -> `<strong>whatever</strong>`\n    //\n    isStrong = i > 0 &&\n               delimiters[i - 1].end === startDelim.end + 1 &&\n               // check that first two markers match and adjacent\n               delimiters[i - 1].marker === startDelim.marker &&\n               delimiters[i - 1].token === startDelim.token - 1 &&\n               // check that last two markers are adjacent (we can safely assume they match)\n               delimiters[startDelim.end + 1].token === endDelim.token + 1;\n\n    ch = String.fromCharCode(startDelim.marker);\n\n    token         = state.tokens[startDelim.token];\n    token.type    = isStrong ? 'strong_open' : 'em_open';\n    token.tag     = isStrong ? 'strong' : 'em';\n    token.nesting = 1;\n    token.markup  = isStrong ? ch + ch : ch;\n    token.content = '';\n\n    token         = state.tokens[endDelim.token];\n    token.type    = isStrong ? 'strong_close' : 'em_close';\n    token.tag     = isStrong ? 'strong' : 'em';\n    token.nesting = -1;\n    token.markup  = isStrong ? ch + ch : ch;\n    token.content = '';\n\n    if (isStrong) {\n      state.tokens[delimiters[i - 1].token].content = '';\n      state.tokens[delimiters[startDelim.end + 1].token].content = '';\n      i--;\n    }\n  }\n}\n\n\n// Walk through delimiter list and replace text tokens with tags\n//\nmodule.exports.postProcess = function emphasis(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  postProcess(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","module.exports=/[\\0-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/","// Process [link](<to> \"stuff\")\n\n'use strict';\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function link(state, silent) {\n  var attrs,\n      code,\n      label,\n      labelEnd,\n      labelStart,\n      pos,\n      res,\n      ref,\n      token,\n      href = '',\n      title = '',\n      oldPos = state.pos,\n      max = state.posMax,\n      start = state.pos,\n      parseReference = true;\n\n  if (state.src.charCodeAt(state.pos) !== 0x5B/* [ */) { return false; }\n\n  labelStart = state.pos + 1;\n  labelEnd = state.md.helpers.parseLinkLabel(state, state.pos, true);\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false; }\n\n  pos = labelEnd + 1;\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // might have found a valid shortcut link, disable reference parsing\n    parseReference = false;\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n    if (pos >= max) { return false; }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos;\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str);\n      if (state.md.validateLink(href)) {\n        pos = res.pos;\n      } else {\n        href = '';\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                ^^ skipping these spaces\n      start = pos;\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (!isSpace(code) && code !== 0x0A) { break; }\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                  ^^^^^^^ parsing link title\n      res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n      if (pos < max && start !== pos && res.ok) {\n        title = res.str;\n        pos = res.pos;\n\n        // [link](  <href>  \"title\"  )\n        //                         ^^ skipping these spaces\n        for (; pos < max; pos++) {\n          code = state.src.charCodeAt(pos);\n          if (!isSpace(code) && code !== 0x0A) { break; }\n        }\n      }\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      // parsing a valid shortcut link failed, fallback to reference\n      parseReference = true;\n    }\n    pos++;\n  }\n\n  if (parseReference) {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false; }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1;\n      pos = state.md.helpers.parseLinkLabel(state, pos);\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++);\n      } else {\n        pos = labelEnd + 1;\n      }\n    } else {\n      pos = labelEnd + 1;\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd); }\n\n    ref = state.env.references[normalizeReference(label)];\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n    href = ref.href;\n    title = ref.title;\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    state.pos = labelStart;\n    state.posMax = labelEnd;\n\n    token        = state.push('link_open', 'a', 1);\n    token.attrs  = attrs = [ [ 'href', href ] ];\n    if (title) {\n      attrs.push([ 'title', title ]);\n    }\n\n    state.md.inline.tokenize(state);\n\n    token        = state.push('link_close', 'a', -1);\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};\n","'use strict';\n\n\nmodule.exports = require('./lib/');\n","'use strict';\n\nexports.Any = require('./properties/Any/regex');\nexports.Cc  = require('./categories/Cc/regex');\nexports.Cf  = require('./categories/Cf/regex');\nexports.P   = require('./categories/P/regex');\nexports.Z   = require('./categories/Z/regex');\n","'use strict';\n\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function reference(state, startLine, _endLine, silent) {\n  var ch,\n      destEndPos,\n      destEndLineNo,\n      endLine,\n      href,\n      i,\n      l,\n      label,\n      labelEnd,\n      oldParentType,\n      res,\n      start,\n      str,\n      terminate,\n      terminatorRules,\n      title,\n      lines = 0,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine],\n      nextLine = startLine + 1;\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (state.src.charCodeAt(pos) !== 0x5B/* [ */) { return false; }\n\n  // Simple check to quickly interrupt scan on [link](url) at the start of line.\n  // Can be useful on practice: https://github.com/markdown-it/markdown-it/issues/54\n  while (++pos < max) {\n    if (state.src.charCodeAt(pos) === 0x5D /* ] */ &&\n        state.src.charCodeAt(pos - 1) !== 0x5C/* \\ */) {\n      if (pos + 1 === max) { return false; }\n      if (state.src.charCodeAt(pos + 1) !== 0x3A/* : */) { return false; }\n      break;\n    }\n  }\n\n  endLine = state.lineMax;\n\n  // jump line-by-line until empty one or EOF\n  terminatorRules = state.md.block.ruler.getRules('reference');\n\n  oldParentType = state.parentType;\n  state.parentType = 'reference';\n\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  str = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n  max = str.length;\n\n  for (pos = 1; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x5B /* [ */) {\n      return false;\n    } else if (ch === 0x5D /* ] */) {\n      labelEnd = pos;\n      break;\n    } else if (ch === 0x0A /* \\n */) {\n      lines++;\n    } else if (ch === 0x5C /* \\ */) {\n      pos++;\n      if (pos < max && str.charCodeAt(pos) === 0x0A) {\n        lines++;\n      }\n    }\n  }\n\n  if (labelEnd < 0 || str.charCodeAt(labelEnd + 1) !== 0x3A/* : */) { return false; }\n\n  // [label]:   destination   'title'\n  //         ^^^ skip optional whitespace here\n  for (pos = labelEnd + 2; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x0A) {\n      lines++;\n    } else if (isSpace(ch)) {\n      /*eslint no-empty:0*/\n    } else {\n      break;\n    }\n  }\n\n  // [label]:   destination   'title'\n  //            ^^^^^^^^^^^ parse this\n  res = state.md.helpers.parseLinkDestination(str, pos, max);\n  if (!res.ok) { return false; }\n\n  href = state.md.normalizeLink(res.str);\n  if (!state.md.validateLink(href)) { return false; }\n\n  pos = res.pos;\n  lines += res.lines;\n\n  // save cursor state, we could require to rollback later\n  destEndPos = pos;\n  destEndLineNo = lines;\n\n  // [label]:   destination   'title'\n  //                       ^^^ skipping those spaces\n  start = pos;\n  for (; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x0A) {\n      lines++;\n    } else if (isSpace(ch)) {\n      /*eslint no-empty:0*/\n    } else {\n      break;\n    }\n  }\n\n  // [label]:   destination   'title'\n  //                          ^^^^^^^ parse this\n  res = state.md.helpers.parseLinkTitle(str, pos, max);\n  if (pos < max && start !== pos && res.ok) {\n    title = res.str;\n    pos = res.pos;\n    lines += res.lines;\n  } else {\n    title = '';\n    pos = destEndPos;\n    lines = destEndLineNo;\n  }\n\n  // skip trailing spaces until the rest of the line\n  while (pos < max) {\n    ch = str.charCodeAt(pos);\n    if (!isSpace(ch)) { break; }\n    pos++;\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    if (title) {\n      // garbage at the end of the line after title,\n      // but it could still be a valid reference if we roll back\n      title = '';\n      pos = destEndPos;\n      lines = destEndLineNo;\n      while (pos < max) {\n        ch = str.charCodeAt(pos);\n        if (!isSpace(ch)) { break; }\n        pos++;\n      }\n    }\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    // garbage at the end of the line\n    return false;\n  }\n\n  label = normalizeReference(str.slice(1, labelEnd));\n  if (!label) {\n    // CommonMark 0.20 disallows empty labels\n    return false;\n  }\n\n  // Reference can not terminate anything. This check is for safety only.\n  /*istanbul ignore if*/\n  if (silent) { return true; }\n\n  if (typeof state.env.references === 'undefined') {\n    state.env.references = {};\n  }\n  if (typeof state.env.references[label] === 'undefined') {\n    state.env.references[label] = { title: title, href: href };\n  }\n\n  state.parentType = oldParentType;\n\n  state.line = startLine + lines + 1;\n  return true;\n};\n","'use strict';\n\n\nmodule.exports.encode = require('./encode');\nmodule.exports.decode = require('./decode');\nmodule.exports.format = require('./format');\nmodule.exports.parse  = require('./parse');\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n//\n// Changes from joyent/node:\n//\n// 1. No leading slash in paths,\n//    e.g. in `url.parse('http://foo?bar')` pathname is ``, not `/`\n//\n// 2. Backslashes are not replaced with slashes,\n//    so `http:\\\\example.org\\` is treated like a relative path\n//\n// 3. Trailing colon is treated like a part of the path,\n//    i.e. in `http://example.org:foo` pathname is `:foo`\n//\n// 4. Nothing is URL-encoded in the resulting object,\n//    (in joyent/node some chars in auth and paths are encoded)\n//\n// 5. `url.parse()` does not have `parseQueryString` argument\n//\n// 6. Removed extraneous result properties: `host`, `path`, `query`, etc.,\n//    which can be constructed using other parts of the url.\n//\n\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.pathname = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // Special case for a simple path URL\n    simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = [ '<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t' ],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = [ '{', '}', '|', '\\\\', '^', '`' ].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = [ '\\'' ].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = [ '%', '/', '?', ';', '#' ].concat(autoEscape),\n    hostEndingChars = [ '/', '?', '#' ],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    /* eslint-disable no-script-url */\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    };\n    /* eslint-enable no-script-url */\n\nfunction urlParse(url, slashesDenoteHost) {\n  if (url && url instanceof Url) { return url; }\n\n  var u = new Url();\n  u.parse(url, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, slashesDenoteHost) {\n  var i, l, lowerProto, hec, slashes,\n      rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    lowerProto = proto.toLowerCase();\n    this.protocol = proto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (i = 0; i < hostEndingChars.length; i++) {\n      hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec;\n      }\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = auth;\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (i = 0; i < nonHostChars.length; i++) {\n      hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec;\n      }\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1) {\n      hostEnd = rest.length;\n    }\n\n    if (rest[hostEnd - 1] === ':') { hostEnd--; }\n    var host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost(host);\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) { continue; }\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    }\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n    }\n  }\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    rest = rest.slice(0, qm);\n  }\n  if (rest) { this.pathname = rest; }\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '';\n  }\n\n  return this;\n};\n\nUrl.prototype.parseHost = function(host) {\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) { this.hostname = host; }\n};\n\nmodule.exports = urlParse;\n","// Parse link label\n//\n// this function assumes that first character (\"[\") already matches;\n// returns the end of the label\n//\n'use strict';\n\nmodule.exports = function parseLinkLabel(state, start, disableNested) {\n  var level, found, marker, prevPos,\n      labelEnd = -1,\n      max = state.posMax,\n      oldPos = state.pos;\n\n  state.pos = start + 1;\n  level = 1;\n\n  while (state.pos < max) {\n    marker = state.src.charCodeAt(state.pos);\n    if (marker === 0x5D /* ] */) {\n      level--;\n      if (level === 0) {\n        found = true;\n        break;\n      }\n    }\n\n    prevPos = state.pos;\n    state.md.inline.skipToken(state);\n    if (marker === 0x5B /* [ */) {\n      if (prevPos === state.pos - 1) {\n        // increase level if we find text `[`, which is not a part of any token\n        level++;\n      } else if (disableNested) {\n        state.pos = oldPos;\n        return -1;\n      }\n    }\n  }\n\n  if (found) {\n    labelEnd = state.pos;\n  }\n\n  // restore old state\n  state.pos = oldPos;\n\n  return labelEnd;\n};\n","// List of valid html blocks names, accorting to commonmark spec\n// http://jgm.github.io/CommonMark/spec.html#html-blocks\n\n'use strict';\n\n\nmodule.exports = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'section',\n  'source',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n];\n","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Reward.vue?vue&type=style&index=0&lang=scss&\"","// Parse link destination\n//\n'use strict';\n\n\nvar unescapeAll = require('../common/utils').unescapeAll;\n\n\nmodule.exports = function parseLinkDestination(str, pos, max) {\n  var code, level,\n      lines = 0,\n      start = pos,\n      result = {\n        ok: false,\n        pos: 0,\n        lines: 0,\n        str: ''\n      };\n\n  if (str.charCodeAt(pos) === 0x3C /* < */) {\n    pos++;\n    while (pos < max) {\n      code = str.charCodeAt(pos);\n      if (code === 0x0A /* \\n */) { return result; }\n      if (code === 0x3C /* < */) { return result; }\n      if (code === 0x3E /* > */) {\n        result.pos = pos + 1;\n        result.str = unescapeAll(str.slice(start + 1, pos));\n        result.ok = true;\n        return result;\n      }\n      if (code === 0x5C /* \\ */ && pos + 1 < max) {\n        pos += 2;\n        continue;\n      }\n\n      pos++;\n    }\n\n    // no closing '>'\n    return result;\n  }\n\n  // this should be ... } else { ... branch\n\n  level = 0;\n  while (pos < max) {\n    code = str.charCodeAt(pos);\n\n    if (code === 0x20) { break; }\n\n    // ascii control characters\n    if (code < 0x20 || code === 0x7F) { break; }\n\n    if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      if (str.charCodeAt(pos + 1) === 0x20) { break; }\n      pos += 2;\n      continue;\n    }\n\n    if (code === 0x28 /* ( */) {\n      level++;\n      if (level > 32) { return result; }\n    }\n\n    if (code === 0x29 /* ) */) {\n      if (level === 0) { break; }\n      level--;\n    }\n\n    pos++;\n  }\n\n  if (start === pos) { return result; }\n  if (level !== 0) { return result; }\n\n  result.str = unescapeAll(str.slice(start, pos));\n  result.lines = lines;\n  result.pos = pos;\n  result.ok = true;\n  return result;\n};\n","// Block quotes\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function blockquote(state, startLine, endLine, silent) {\n  var adjustTab,\n      ch,\n      i,\n      initial,\n      l,\n      lastLineEmpty,\n      lines,\n      nextLine,\n      offset,\n      oldBMarks,\n      oldBSCount,\n      oldIndent,\n      oldParentType,\n      oldSCount,\n      oldTShift,\n      spaceAfterMarker,\n      terminate,\n      terminatorRules,\n      token,\n      isOutdented,\n      oldLineMax = state.lineMax,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  // check the block quote marker\n  if (state.src.charCodeAt(pos++) !== 0x3E/* > */) { return false; }\n\n  // we know that it's going to be a valid blockquote,\n  // so no point trying to find the end of it in silent mode\n  if (silent) { return true; }\n\n  // set offset past spaces and \">\"\n  initial = offset = state.sCount[startLine] + 1;\n\n  // skip one optional space after '>'\n  if (state.src.charCodeAt(pos) === 0x20 /* space */) {\n    // ' >   test '\n    //     ^ -- position start of line here:\n    pos++;\n    initial++;\n    offset++;\n    adjustTab = false;\n    spaceAfterMarker = true;\n  } else if (state.src.charCodeAt(pos) === 0x09 /* tab */) {\n    spaceAfterMarker = true;\n\n    if ((state.bsCount[startLine] + offset) % 4 === 3) {\n      // '  >\\t  test '\n      //       ^ -- position start of line here (tab has width===1)\n      pos++;\n      initial++;\n      offset++;\n      adjustTab = false;\n    } else {\n      // ' >\\t  test '\n      //    ^ -- position start of line here + shift bsCount slightly\n      //         to make extra space appear\n      adjustTab = true;\n    }\n  } else {\n    spaceAfterMarker = false;\n  }\n\n  oldBMarks = [ state.bMarks[startLine] ];\n  state.bMarks[startLine] = pos;\n\n  while (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (isSpace(ch)) {\n      if (ch === 0x09) {\n        offset += 4 - (offset + state.bsCount[startLine] + (adjustTab ? 1 : 0)) % 4;\n      } else {\n        offset++;\n      }\n    } else {\n      break;\n    }\n\n    pos++;\n  }\n\n  oldBSCount = [ state.bsCount[startLine] ];\n  state.bsCount[startLine] = state.sCount[startLine] + 1 + (spaceAfterMarker ? 1 : 0);\n\n  lastLineEmpty = pos >= max;\n\n  oldSCount = [ state.sCount[startLine] ];\n  state.sCount[startLine] = offset - initial;\n\n  oldTShift = [ state.tShift[startLine] ];\n  state.tShift[startLine] = pos - state.bMarks[startLine];\n\n  terminatorRules = state.md.block.ruler.getRules('blockquote');\n\n  oldParentType = state.parentType;\n  state.parentType = 'blockquote';\n\n  // Search the end of the block\n  //\n  // Block ends with either:\n  //  1. an empty line outside:\n  //     ```\n  //     > test\n  //\n  //     ```\n  //  2. an empty line inside:\n  //     ```\n  //     >\n  //     test\n  //     ```\n  //  3. another tag:\n  //     ```\n  //     > test\n  //      - - -\n  //     ```\n  for (nextLine = startLine + 1; nextLine < endLine; nextLine++) {\n    // check if it's outdented, i.e. it's inside list item and indented\n    // less than said list item:\n    //\n    // ```\n    // 1. anything\n    //    > current blockquote\n    // 2. checking this line\n    // ```\n    isOutdented = state.sCount[nextLine] < state.blkIndent;\n\n    pos = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos >= max) {\n      // Case 1: line is not inside the blockquote, and this line is empty.\n      break;\n    }\n\n    if (state.src.charCodeAt(pos++) === 0x3E/* > */ && !isOutdented) {\n      // This line is inside the blockquote.\n\n      // set offset past spaces and \">\"\n      initial = offset = state.sCount[nextLine] + 1;\n\n      // skip one optional space after '>'\n      if (state.src.charCodeAt(pos) === 0x20 /* space */) {\n        // ' >   test '\n        //     ^ -- position start of line here:\n        pos++;\n        initial++;\n        offset++;\n        adjustTab = false;\n        spaceAfterMarker = true;\n      } else if (state.src.charCodeAt(pos) === 0x09 /* tab */) {\n        spaceAfterMarker = true;\n\n        if ((state.bsCount[nextLine] + offset) % 4 === 3) {\n          // '  >\\t  test '\n          //       ^ -- position start of line here (tab has width===1)\n          pos++;\n          initial++;\n          offset++;\n          adjustTab = false;\n        } else {\n          // ' >\\t  test '\n          //    ^ -- position start of line here + shift bsCount slightly\n          //         to make extra space appear\n          adjustTab = true;\n        }\n      } else {\n        spaceAfterMarker = false;\n      }\n\n      oldBMarks.push(state.bMarks[nextLine]);\n      state.bMarks[nextLine] = pos;\n\n      while (pos < max) {\n        ch = state.src.charCodeAt(pos);\n\n        if (isSpace(ch)) {\n          if (ch === 0x09) {\n            offset += 4 - (offset + state.bsCount[nextLine] + (adjustTab ? 1 : 0)) % 4;\n          } else {\n            offset++;\n          }\n        } else {\n          break;\n        }\n\n        pos++;\n      }\n\n      lastLineEmpty = pos >= max;\n\n      oldBSCount.push(state.bsCount[nextLine]);\n      state.bsCount[nextLine] = state.sCount[nextLine] + 1 + (spaceAfterMarker ? 1 : 0);\n\n      oldSCount.push(state.sCount[nextLine]);\n      state.sCount[nextLine] = offset - initial;\n\n      oldTShift.push(state.tShift[nextLine]);\n      state.tShift[nextLine] = pos - state.bMarks[nextLine];\n      continue;\n    }\n\n    // Case 2: line is not inside the blockquote, and the last line was empty.\n    if (lastLineEmpty) { break; }\n\n    // Case 3: another tag found.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) {\n      // Quirk to enforce \"hard termination mode\" for paragraphs;\n      // normally if you call `tokenize(state, startLine, nextLine)`,\n      // paragraphs will look below nextLine for paragraph continuation,\n      // but if blockquote is terminated by another tag, they shouldn't\n      state.lineMax = nextLine;\n\n      if (state.blkIndent !== 0) {\n        // state.blkIndent was non-zero, we now set it to zero,\n        // so we need to re-calculate all offsets to appear as\n        // if indent wasn't changed\n        oldBMarks.push(state.bMarks[nextLine]);\n        oldBSCount.push(state.bsCount[nextLine]);\n        oldTShift.push(state.tShift[nextLine]);\n        oldSCount.push(state.sCount[nextLine]);\n        state.sCount[nextLine] -= state.blkIndent;\n      }\n\n      break;\n    }\n\n    oldBMarks.push(state.bMarks[nextLine]);\n    oldBSCount.push(state.bsCount[nextLine]);\n    oldTShift.push(state.tShift[nextLine]);\n    oldSCount.push(state.sCount[nextLine]);\n\n    // A negative indentation means that this is a paragraph continuation\n    //\n    state.sCount[nextLine] = -1;\n  }\n\n  oldIndent = state.blkIndent;\n  state.blkIndent = 0;\n\n  token        = state.push('blockquote_open', 'blockquote', 1);\n  token.markup = '>';\n  token.map    = lines = [ startLine, 0 ];\n\n  state.md.block.tokenize(state, startLine, nextLine);\n\n  token        = state.push('blockquote_close', 'blockquote', -1);\n  token.markup = '>';\n\n  state.lineMax = oldLineMax;\n  state.parentType = oldParentType;\n  lines[1] = state.line;\n\n  // Restore original tShift; this might not be necessary since the parser\n  // has already been here, but just to make sure we can do that.\n  for (i = 0; i < oldTShift.length; i++) {\n    state.bMarks[i + startLine] = oldBMarks[i];\n    state.tShift[i + startLine] = oldTShift[i];\n    state.sCount[i + startLine] = oldSCount[i];\n    state.bsCount[i + startLine] = oldBSCount[i];\n  }\n  state.blkIndent = oldIndent;\n\n  return true;\n};\n","'use strict';\n\n\n////////////////////////////////////////////////////////////////////////////////\n// Helpers\n\n// Merge objects\n//\nfunction assign(obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n\n  sources.forEach(function (source) {\n    if (!source) { return; }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n\n  return obj;\n}\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\nfunction isString(obj) { return _class(obj) === '[object String]'; }\nfunction isObject(obj) { return _class(obj) === '[object Object]'; }\nfunction isRegExp(obj) { return _class(obj) === '[object RegExp]'; }\nfunction isFunction(obj) { return _class(obj) === '[object Function]'; }\n\n\nfunction escapeRE(str) { return str.replace(/[.?*+^$[\\]\\\\(){}|-]/g, '\\\\$&'); }\n\n////////////////////////////////////////////////////////////////////////////////\n\n\nvar defaultOptions = {\n  fuzzyLink: true,\n  fuzzyEmail: true,\n  fuzzyIP: false\n};\n\n\nfunction isOptionsObj(obj) {\n  return Object.keys(obj || {}).reduce(function (acc, k) {\n    return acc || defaultOptions.hasOwnProperty(k);\n  }, false);\n}\n\n\nvar defaultSchemas = {\n  'http:': {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.http) {\n        // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.http =  new RegExp(\n          '^\\\\/\\\\/' + self.re.src_auth + self.re.src_host_port_strict + self.re.src_path, 'i'\n        );\n      }\n      if (self.re.http.test(tail)) {\n        return tail.match(self.re.http)[0].length;\n      }\n      return 0;\n    }\n  },\n  'https:':  'http:',\n  'ftp:':    'http:',\n  '//':      {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.no_http) {\n      // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.no_http =  new RegExp(\n          '^' +\n          self.re.src_auth +\n          // Don't allow single-level domains, because of false positives like '//test'\n          // with code comments\n          '(?:localhost|(?:(?:' + self.re.src_domain + ')\\\\.)+' + self.re.src_domain_root + ')' +\n          self.re.src_port +\n          self.re.src_host_terminator +\n          self.re.src_path,\n\n          'i'\n        );\n      }\n\n      if (self.re.no_http.test(tail)) {\n        // should not be `://` & `///`, that protects from errors in protocol name\n        if (pos >= 3 && text[pos - 3] === ':') { return 0; }\n        if (pos >= 3 && text[pos - 3] === '/') { return 0; }\n        return tail.match(self.re.no_http)[0].length;\n      }\n      return 0;\n    }\n  },\n  'mailto:': {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.mailto) {\n        self.re.mailto =  new RegExp(\n          '^' + self.re.src_email_name + '@' + self.re.src_host_strict, 'i'\n        );\n      }\n      if (self.re.mailto.test(tail)) {\n        return tail.match(self.re.mailto)[0].length;\n      }\n      return 0;\n    }\n  }\n};\n\n/*eslint-disable max-len*/\n\n// RE pattern for 2-character tlds (autogenerated by ./support/tlds_2char_gen.js)\nvar tlds_2ch_src_re = 'a[cdefgilmnoqrstuwxz]|b[abdefghijmnorstvwyz]|c[acdfghiklmnoruvwxyz]|d[ejkmoz]|e[cegrstu]|f[ijkmor]|g[abdefghilmnpqrstuwy]|h[kmnrtu]|i[delmnoqrst]|j[emop]|k[eghimnprwyz]|l[abcikrstuvy]|m[acdeghklmnopqrstuvwxyz]|n[acefgilopruz]|om|p[aefghklmnrstwy]|qa|r[eosuw]|s[abcdeghijklmnortuvxyz]|t[cdfghjklmnortvwz]|u[agksyz]|v[aceginu]|w[fs]|y[et]|z[amw]';\n\n// DON'T try to make PRs with changes. Extend TLDs with LinkifyIt.tlds() instead\nvar tlds_default = 'biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф'.split('|');\n\n/*eslint-enable max-len*/\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction resetScanCache(self) {\n  self.__index__ = -1;\n  self.__text_cache__   = '';\n}\n\nfunction createValidator(re) {\n  return function (text, pos) {\n    var tail = text.slice(pos);\n\n    if (re.test(tail)) {\n      return tail.match(re)[0].length;\n    }\n    return 0;\n  };\n}\n\nfunction createNormalizer() {\n  return function (match, self) {\n    self.normalize(match);\n  };\n}\n\n// Schemas compiler. Build regexps.\n//\nfunction compile(self) {\n\n  // Load & clone RE patterns.\n  var re = self.re = require('./lib/re')(self.__opts__);\n\n  // Define dynamic patterns\n  var tlds = self.__tlds__.slice();\n\n  self.onCompile();\n\n  if (!self.__tlds_replaced__) {\n    tlds.push(tlds_2ch_src_re);\n  }\n  tlds.push(re.src_xn);\n\n  re.src_tlds = tlds.join('|');\n\n  function untpl(tpl) { return tpl.replace('%TLDS%', re.src_tlds); }\n\n  re.email_fuzzy      = RegExp(untpl(re.tpl_email_fuzzy), 'i');\n  re.link_fuzzy       = RegExp(untpl(re.tpl_link_fuzzy), 'i');\n  re.link_no_ip_fuzzy = RegExp(untpl(re.tpl_link_no_ip_fuzzy), 'i');\n  re.host_fuzzy_test  = RegExp(untpl(re.tpl_host_fuzzy_test), 'i');\n\n  //\n  // Compile each schema\n  //\n\n  var aliases = [];\n\n  self.__compiled__ = {}; // Reset compiled data\n\n  function schemaError(name, val) {\n    throw new Error('(LinkifyIt) Invalid schema \"' + name + '\": ' + val);\n  }\n\n  Object.keys(self.__schemas__).forEach(function (name) {\n    var val = self.__schemas__[name];\n\n    // skip disabled methods\n    if (val === null) { return; }\n\n    var compiled = { validate: null, link: null };\n\n    self.__compiled__[name] = compiled;\n\n    if (isObject(val)) {\n      if (isRegExp(val.validate)) {\n        compiled.validate = createValidator(val.validate);\n      } else if (isFunction(val.validate)) {\n        compiled.validate = val.validate;\n      } else {\n        schemaError(name, val);\n      }\n\n      if (isFunction(val.normalize)) {\n        compiled.normalize = val.normalize;\n      } else if (!val.normalize) {\n        compiled.normalize = createNormalizer();\n      } else {\n        schemaError(name, val);\n      }\n\n      return;\n    }\n\n    if (isString(val)) {\n      aliases.push(name);\n      return;\n    }\n\n    schemaError(name, val);\n  });\n\n  //\n  // Compile postponed aliases\n  //\n\n  aliases.forEach(function (alias) {\n    if (!self.__compiled__[self.__schemas__[alias]]) {\n      // Silently fail on missed schemas to avoid errons on disable.\n      // schemaError(alias, self.__schemas__[alias]);\n      return;\n    }\n\n    self.__compiled__[alias].validate =\n      self.__compiled__[self.__schemas__[alias]].validate;\n    self.__compiled__[alias].normalize =\n      self.__compiled__[self.__schemas__[alias]].normalize;\n  });\n\n  //\n  // Fake record for guessed links\n  //\n  self.__compiled__[''] = { validate: null, normalize: createNormalizer() };\n\n  //\n  // Build schema condition\n  //\n  var slist = Object.keys(self.__compiled__)\n                      .filter(function (name) {\n                        // Filter disabled & fake schemas\n                        return name.length > 0 && self.__compiled__[name];\n                      })\n                      .map(escapeRE)\n                      .join('|');\n  // (?!_) cause 1.5x slowdown\n  self.re.schema_test   = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'i');\n  self.re.schema_search = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'ig');\n\n  self.re.pretest = RegExp(\n    '(' + self.re.schema_test.source + ')|(' + self.re.host_fuzzy_test.source + ')|@',\n    'i'\n  );\n\n  //\n  // Cleanup\n  //\n\n  resetScanCache(self);\n}\n\n/**\n * class Match\n *\n * Match result. Single element of array, returned by [[LinkifyIt#match]]\n **/\nfunction Match(self, shift) {\n  var start = self.__index__,\n      end   = self.__last_index__,\n      text  = self.__text_cache__.slice(start, end);\n\n  /**\n   * Match#schema -> String\n   *\n   * Prefix (protocol) for matched string.\n   **/\n  this.schema    = self.__schema__.toLowerCase();\n  /**\n   * Match#index -> Number\n   *\n   * First position of matched string.\n   **/\n  this.index     = start + shift;\n  /**\n   * Match#lastIndex -> Number\n   *\n   * Next position after matched string.\n   **/\n  this.lastIndex = end + shift;\n  /**\n   * Match#raw -> String\n   *\n   * Matched string.\n   **/\n  this.raw       = text;\n  /**\n   * Match#text -> String\n   *\n   * Notmalized text of matched string.\n   **/\n  this.text      = text;\n  /**\n   * Match#url -> String\n   *\n   * Normalized url of matched string.\n   **/\n  this.url       = text;\n}\n\nfunction createMatch(self, shift) {\n  var match = new Match(self, shift);\n\n  self.__compiled__[match.schema].normalize(match, self);\n\n  return match;\n}\n\n\n/**\n * class LinkifyIt\n **/\n\n/**\n * new LinkifyIt(schemas, options)\n * - schemas (Object): Optional. Additional schemas to validate (prefix/validator)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Creates new linkifier instance with optional additional schemas.\n * Can be called without `new` keyword for convenience.\n *\n * By default understands:\n *\n * - `http(s)://...` , `ftp://...`, `mailto:...` & `//...` links\n * - \"fuzzy\" links and emails (example.com, foo@bar.com).\n *\n * `schemas` is an object, where each key/value describes protocol/rule:\n *\n * - __key__ - link prefix (usually, protocol name with `:` at the end, `skype:`\n *   for example). `linkify-it` makes shure that prefix is not preceeded with\n *   alphanumeric char and symbols. Only whitespaces and punctuation allowed.\n * - __value__ - rule to check tail after link prefix\n *   - _String_ - just alias to existing rule\n *   - _Object_\n *     - _validate_ - validator function (should return matched length on success),\n *       or `RegExp`.\n *     - _normalize_ - optional function to normalize text & url of matched result\n *       (for example, for @twitter mentions).\n *\n * `options`:\n *\n * - __fuzzyLink__ - recognige URL-s without `http(s):` prefix. Default `true`.\n * - __fuzzyIP__ - allow IPs in fuzzy links above. Can conflict with some texts\n *   like version numbers. Default `false`.\n * - __fuzzyEmail__ - recognize emails without `mailto:` prefix.\n *\n **/\nfunction LinkifyIt(schemas, options) {\n  if (!(this instanceof LinkifyIt)) {\n    return new LinkifyIt(schemas, options);\n  }\n\n  if (!options) {\n    if (isOptionsObj(schemas)) {\n      options = schemas;\n      schemas = {};\n    }\n  }\n\n  this.__opts__           = assign({}, defaultOptions, options);\n\n  // Cache last tested result. Used to skip repeating steps on next `match` call.\n  this.__index__          = -1;\n  this.__last_index__     = -1; // Next scan position\n  this.__schema__         = '';\n  this.__text_cache__     = '';\n\n  this.__schemas__        = assign({}, defaultSchemas, schemas);\n  this.__compiled__       = {};\n\n  this.__tlds__           = tlds_default;\n  this.__tlds_replaced__  = false;\n\n  this.re = {};\n\n  compile(this);\n}\n\n\n/** chainable\n * LinkifyIt#add(schema, definition)\n * - schema (String): rule name (fixed pattern prefix)\n * - definition (String|RegExp|Object): schema definition\n *\n * Add new rule definition. See constructor description for details.\n **/\nLinkifyIt.prototype.add = function add(schema, definition) {\n  this.__schemas__[schema] = definition;\n  compile(this);\n  return this;\n};\n\n\n/** chainable\n * LinkifyIt#set(options)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Set recognition options for links without schema.\n **/\nLinkifyIt.prototype.set = function set(options) {\n  this.__opts__ = assign(this.__opts__, options);\n  return this;\n};\n\n\n/**\n * LinkifyIt#test(text) -> Boolean\n *\n * Searches linkifiable pattern and returns `true` on success or `false` on fail.\n **/\nLinkifyIt.prototype.test = function test(text) {\n  // Reset scan cache\n  this.__text_cache__ = text;\n  this.__index__      = -1;\n\n  if (!text.length) { return false; }\n\n  var m, ml, me, len, shift, next, re, tld_pos, at_pos;\n\n  // try to scan for link with schema - that's the most simple rule\n  if (this.re.schema_test.test(text)) {\n    re = this.re.schema_search;\n    re.lastIndex = 0;\n    while ((m = re.exec(text)) !== null) {\n      len = this.testSchemaAt(text, m[2], re.lastIndex);\n      if (len) {\n        this.__schema__     = m[2];\n        this.__index__      = m.index + m[1].length;\n        this.__last_index__ = m.index + m[0].length + len;\n        break;\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyLink && this.__compiled__['http:']) {\n    // guess schemaless links\n    tld_pos = text.search(this.re.host_fuzzy_test);\n    if (tld_pos >= 0) {\n      // if tld is located after found link - no need to check fuzzy pattern\n      if (this.__index__ < 0 || tld_pos < this.__index__) {\n        if ((ml = text.match(this.__opts__.fuzzyIP ? this.re.link_fuzzy : this.re.link_no_ip_fuzzy)) !== null) {\n\n          shift = ml.index + ml[1].length;\n\n          if (this.__index__ < 0 || shift < this.__index__) {\n            this.__schema__     = '';\n            this.__index__      = shift;\n            this.__last_index__ = ml.index + ml[0].length;\n          }\n        }\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyEmail && this.__compiled__['mailto:']) {\n    // guess schemaless emails\n    at_pos = text.indexOf('@');\n    if (at_pos >= 0) {\n      // We can't skip this check, because this cases are possible:\n      // 192.168.1.1@gmail.com, my.in@example.com\n      if ((me = text.match(this.re.email_fuzzy)) !== null) {\n\n        shift = me.index + me[1].length;\n        next  = me.index + me[0].length;\n\n        if (this.__index__ < 0 || shift < this.__index__ ||\n            (shift === this.__index__ && next > this.__last_index__)) {\n          this.__schema__     = 'mailto:';\n          this.__index__      = shift;\n          this.__last_index__ = next;\n        }\n      }\n    }\n  }\n\n  return this.__index__ >= 0;\n};\n\n\n/**\n * LinkifyIt#pretest(text) -> Boolean\n *\n * Very quick check, that can give false positives. Returns true if link MAY BE\n * can exists. Can be used for speed optimization, when you need to check that\n * link NOT exists.\n **/\nLinkifyIt.prototype.pretest = function pretest(text) {\n  return this.re.pretest.test(text);\n};\n\n\n/**\n * LinkifyIt#testSchemaAt(text, name, position) -> Number\n * - text (String): text to scan\n * - name (String): rule (schema) name\n * - position (Number): text offset to check from\n *\n * Similar to [[LinkifyIt#test]] but checks only specific protocol tail exactly\n * at given position. Returns length of found pattern (0 on fail).\n **/\nLinkifyIt.prototype.testSchemaAt = function testSchemaAt(text, schema, pos) {\n  // If not supported schema check requested - terminate\n  if (!this.__compiled__[schema.toLowerCase()]) {\n    return 0;\n  }\n  return this.__compiled__[schema.toLowerCase()].validate(text, pos, this);\n};\n\n\n/**\n * LinkifyIt#match(text) -> Array|null\n *\n * Returns array of found link descriptions or `null` on fail. We strongly\n * recommend to use [[LinkifyIt#test]] first, for best speed.\n *\n * ##### Result match description\n *\n * - __schema__ - link schema, can be empty for fuzzy links, or `//` for\n *   protocol-neutral  links.\n * - __index__ - offset of matched text\n * - __lastIndex__ - index of next char after mathch end\n * - __raw__ - matched text\n * - __text__ - normalized text\n * - __url__ - link, generated from matched text\n **/\nLinkifyIt.prototype.match = function match(text) {\n  var shift = 0, result = [];\n\n  // Try to take previous element from cache, if .test() called before\n  if (this.__index__ >= 0 && this.__text_cache__ === text) {\n    result.push(createMatch(this, shift));\n    shift = this.__last_index__;\n  }\n\n  // Cut head if cache was used\n  var tail = shift ? text.slice(shift) : text;\n\n  // Scan string until end reached\n  while (this.test(tail)) {\n    result.push(createMatch(this, shift));\n\n    tail = tail.slice(this.__last_index__);\n    shift += this.__last_index__;\n  }\n\n  if (result.length) {\n    return result;\n  }\n\n  return null;\n};\n\n\n/** chainable\n * LinkifyIt#tlds(list [, keepOld]) -> this\n * - list (Array): list of tlds\n * - keepOld (Boolean): merge with current list if `true` (`false` by default)\n *\n * Load (or merge) new tlds list. Those are user for fuzzy links (without prefix)\n * to avoid false positives. By default this algorythm used:\n *\n * - hostname with any 2-letter root zones are ok.\n * - biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф\n *   are ok.\n * - encoded (`xn--...`) root zones are ok.\n *\n * If list is replaced, then exact match for 2-chars root zones will be checked.\n **/\nLinkifyIt.prototype.tlds = function tlds(list, keepOld) {\n  list = Array.isArray(list) ? list : [ list ];\n\n  if (!keepOld) {\n    this.__tlds__ = list.slice();\n    this.__tlds_replaced__ = true;\n    compile(this);\n    return this;\n  }\n\n  this.__tlds__ = this.__tlds__.concat(list)\n                                  .sort()\n                                  .filter(function (el, idx, arr) {\n                                    return el !== arr[idx - 1];\n                                  })\n                                  .reverse();\n\n  compile(this);\n  return this;\n};\n\n/**\n * LinkifyIt#normalize(match)\n *\n * Default normalizer (if schema does not define it's own).\n **/\nLinkifyIt.prototype.normalize = function normalize(match) {\n\n  // Do minimal possible changes by default. Need to collect feedback prior\n  // to move forward https://github.com/markdown-it/linkify-it/issues/1\n\n  if (!match.schema) { match.url = 'http://' + match.url; }\n\n  if (match.schema === 'mailto:' && !/^mailto:/i.test(match.url)) {\n    match.url = 'mailto:' + match.url;\n  }\n};\n\n\n/**\n * LinkifyIt#onCompile()\n *\n * Override to modify basic RegExp-s.\n **/\nLinkifyIt.prototype.onCompile = function onCompile() {\n};\n\n\nmodule.exports = LinkifyIt;\n","// Horizontal rule\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function hr(state, startLine, endLine, silent) {\n  var marker, cnt, ch, token,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  marker = state.src.charCodeAt(pos++);\n\n  // Check hr marker\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x5F/* _ */) {\n    return false;\n  }\n\n  // markers can be mixed with spaces, but there should be at least 3 of them\n\n  cnt = 1;\n  while (pos < max) {\n    ch = state.src.charCodeAt(pos++);\n    if (ch !== marker && !isSpace(ch)) { return false; }\n    if (ch === marker) { cnt++; }\n  }\n\n  if (cnt < 3) { return false; }\n\n  if (silent) { return true; }\n\n  state.line = startLine + 1;\n\n  token        = state.push('hr', 'hr', 0);\n  token.map    = [ startLine, state.line ];\n  token.markup = Array(cnt + 1).join(String.fromCharCode(marker));\n\n  return true;\n};\n"],"sourceRoot":""}